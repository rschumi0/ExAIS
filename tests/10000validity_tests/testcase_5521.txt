import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max83535 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Max83535 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con74389 = tf.keras.layers.Input(shape=([2, 1]))
in0Add83977 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Add83977 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Mul46635 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Mul46635 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con36397 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Dot17358 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot17358 = tf.keras.layers.Input(shape=([3, 3]))
in0Con99073 = tf.keras.layers.Input(shape=([4, 9]))

Max83535 = keras.layers.Maximum(name = 'Max83535', )([in0Max83535,in1Max83535])
Res67550 = keras.layers.Reshape((2, 1), name = 'Res67550', )(Max83535)
Con74389 = keras.layers.Concatenate(axis=2, name = 'Con74389', )([Res67550,in0Con74389])
Add83977 = keras.layers.Add(name = 'Add83977', )([in0Add83977,in1Add83977])
Res29697 = keras.layers.Reshape((2, 1, 2), name = 'Res29697', )(Add83977)
Mul46635 = keras.layers.Multiply(name = 'Mul46635', )([in0Mul46635,in1Mul46635])
Con36397 = keras.layers.Concatenate(axis=3, name = 'Con36397', )([Mul46635,in0Con36397])
Sub41335 = keras.layers.Subtract(name = 'Sub41335', )([Res29697,Con36397])
Res38264 = keras.layers.Reshape((2, 2), name = 'Res38264', )(Sub41335)
Dot65274 = keras.layers.Dot(axes=(2, 2), name = 'Dot65274', )([Con74389,Res38264])
Res48742 = keras.layers.Reshape((2, 2, 1), name = 'Res48742', )(Dot65274)
Res61084 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res61084', )(Res48742)
Zer42100 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer42100', )(Res61084)
Res27374 = keras.layers.Reshape((4, 4, 3), name = 'Res27374', )(Zer42100)
Res97288 = keras.layers.Reshape((4, 12), name = 'Res97288', )(Res27374)
Dot17358 = keras.layers.Dot(axes=(1, 1), name = 'Dot17358', )([in0Dot17358,in1Dot17358])
Zer22032 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer22032', )(Dot17358)
Con99073 = keras.layers.Concatenate(axis=2, name = 'Con99073', )([Zer22032,in0Con99073])
Max32481 = keras.layers.Maximum(name = 'Max32481', )([Res97288,Con99073])
model = tf.keras.models.Model(inputs=[in0Max83535,in1Max83535,in0Con74389,in0Add83977,in1Add83977,in0Mul46635,in1Mul46635,in0Con36397,in0Dot17358,in1Dot17358,in0Con99073], outputs=Max32481)
in0Max83535 = tf.constant([[[[0.8339]], [[0.7791]]]])
in1Max83535 = tf.constant([[[[0.3636]], [[0.9514]]]])
in0Con74389 = tf.constant([[[0.4494], [0.687]]])
in0Add83977 = tf.constant([[[[[0.9237, 0.6062]]], [[[0.0243, 0.2637]]]]])
in1Add83977 = tf.constant([[[[[0.4692, 0.8658]]], [[[0.4523, 0.8731]]]]])
in0Mul46635 = tf.constant([[[[0.3472]], [[0.8007]]]])
in1Mul46635 = tf.constant([[[[0.2714]], [[0.2692]]]])
in0Con36397 = tf.constant([[[[0.8808]], [[0.3119]]]])
in0Dot17358 = tf.constant([[[0.6556, 0.7759, 0.1689], [0.0015, 0.1937, 0.9135], [0.1191, 0.9555, 0.5745]]])
in1Dot17358 = tf.constant([[[0.5995, 0.1344, 0.769], [0.328, 0.5196, 0.0392], [0.7019, 0.6954, 0.5806]]])
in0Con99073 = tf.constant([[[0.0509, 0.0255, 0.2684, 0.0618, 0.8995, 0.421, 0.7465, 0.6574, 0.1651], [0.3199, 0.7021, 0.8627, 0.4367, 0.2041, 0.1979, 0.8493, 0.647, 0.352], [0.1051, 0.4082, 0.7557, 0.4997, 0.6547, 0.2086, 0.6388, 0.8401, 0.4696], [0.0736, 0.217, 0.0231, 0.2358, 0.3639, 0.9869, 0.3707, 0.1921, 0.6222]]])
print (np.array2string(model.predict([in0Max83535,in1Max83535,in0Con74389,in0Add83977,in1Add83977,in0Mul46635,in1Mul46635,in0Con36397,in0Dot17358,in1Dot17358,in0Con99073],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max32481.png')

LMax83535 = maximum_layer([[[[[0.8339]], [[0.7791]]]], [[[[0.3636]], [[0.9514]]]]], Max83535), 
LRes67550 = reshape_layer(Max83535, [2, 1], Res67550), 
LCon74389 = concatenate_layer([Res67550,[[[0.4494], [0.687]]]], 2, Con74389), 
LAdd83977 = add_layer([[[[[[0.9237, 0.6062]]], [[[0.0243, 0.2637]]]]], [[[[[0.4692, 0.8658]]], [[[0.4523, 0.8731]]]]]], Add83977), 
LRes29697 = reshape_layer(Add83977, [2, 1, 2], Res29697), 
LMul46635 = multiply_layer([[[[[0.3472]], [[0.8007]]]], [[[[0.2714]], [[0.2692]]]]], Mul46635), 
LCon36397 = concatenate_layer([Mul46635,[[[[0.8808]], [[0.3119]]]]], 3, Con36397), 
LSub41335 = subtract_layer(Res29697,Con36397, Sub41335), 
LRes38264 = reshape_layer(Sub41335, [2, 2], Res38264), 
LDot65274 = dot_layer(Con74389,Res38264, 2, 2, Dot65274), 
LRes48742 = reshape_layer(Dot65274, [2, 2, 1], Res48742), 
LRes61084 = reshape_layer(Res48742, [2, 2, 1, 1], Res61084), 
LZer42100 = zero_padding3D_layer(Res61084, 1, 1, 1, 1, 1, 1, Zer42100), 
LRes27374 = reshape_layer(Zer42100, [4, 4, 3], Res27374), 
LRes97288 = reshape_layer(Res27374, [4, 12], Res97288), 
LDot17358 = dot_layer([[[0.6556, 0.7759, 0.1689], [0.0015, 0.1937, 0.9135], [0.1191, 0.9555, 0.5745]]], [[[0.5995, 0.1344, 0.769], [0.328, 0.5196, 0.0392], [0.7019, 0.6954, 0.5806]]], 1, 1, Dot17358), 
LZer22032 = zero_padding1D_layer(Dot17358, 1, 0, Zer22032), 
LCon99073 = concatenate_layer([Zer22032,[[[0.0509, 0.0255, 0.2684, 0.0618, 0.8995, 0.421, 0.7465, 0.6574, 0.1651], [0.3199, 0.7021, 0.8627, 0.4367, 0.2041, 0.1979, 0.8493, 0.647, 0.352], [0.1051, 0.4082, 0.7557, 0.4997, 0.6547, 0.2086, 0.6388, 0.8401, 0.4696], [0.0736, 0.217, 0.0231, 0.2358, 0.3639, 0.9869, 0.3707, 0.1921, 0.6222]]]], 2, Con99073), 
LMax32481 = maximum_layer([Res97288,Con99073], Max32481), 
exec_layers([LMax83535,LRes67550,LCon74389,LAdd83977,LRes29697,LMul46635,LCon36397,LSub41335,LRes38264,LDot65274,LRes48742,LRes61084,LZer42100,LRes27374,LRes97288,LDot17358,LZer22032,LCon99073,LMax32481],["Max83535","Res67550","Con74389","Add83977","Res29697","Mul46635","Con36397","Sub41335","Res38264","Dot65274","Res48742","Res61084","Zer42100","Res27374","Res97288","Dot17358","Zer22032","Con99073","Max32481"],Max32481,"Max32481")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0509000, 0.0255000, 0.2684000, 0.0618000, 0.8995000, 0.4210000, 0.7465000, 0.6574000, 0.1651000], [0.4771205, 0.1717142, 0.5733647, 0.3199000, 1.3486461, 0.8627000, 0.4367000, 0.5884010, 0.1979000, 0.8493000, 0.6470000, 0.3520000], [1.1993511, 0.8693822, 1.1590235, 0.1051000, 1.6417089, 0.7557000, 0.4997000, 0.8150707, 0.2086000, 0.6388000, 0.8401000, 0.4696000], [0.8041251, 0.8968621, 0.4992480, 0.0736000, 0.2170000, 0.0231000, 0.2358000, 0.3639000, 0.9869000, 0.3707000, 0.1921000, 0.6222000]]]

Expected (Unparsed): [[[0,0,0,0.0509,0.0255,0.2684,0.0618,0.8995,0.421,0.7465,0.6574,0.1651],[0.47712049,0.17171418,0.57336466,0.3199,1.348646126288,0.8627,0.4367,0.588400955884,0.1979,0.8493,0.647,0.352],[1.1993511,0.8693821800000001,1.15902344,0.1051,1.641708961888,0.7557,0.4997,0.815070754184,0.2086,0.6388,0.8401,0.4696],[0.8041251,0.8968620599999999,0.49924799999999997,0.0736,0.217,0.0231,0.2358,0.3639,0.9869,0.3707,0.1921,0.6222]]]

Actual:   [[[0, 0, 0, 0.0509, 0.0255, 0.2684, 0.0618, 0.8995, 0.421, 0.7465, 0.6574, 0.1651], [0.4772, 0.1718, 0.5734, 0.3199, 1.3487, 0.8627, 0.4367, 0.5885, 0.1979, 0.8493, 0.647, 0.352], [1.1994, 0.8694, 1.1591, 0.1051, 1.6418, 0.7557, 0.4997, 0.8151, 0.2086, 0.6388, 0.8401, 0.4696], [0.8042, 0.8969, 0.4993, 0.0736, 0.217, 0.0231, 0.2358, 0.3639, 0.9869, 0.3707, 0.1921, 0.6222]]]

Expected: [[[0, 0, 0, 0.0509, 0.0255, 0.2684, 0.0618, 0.8995, 0.421, 0.7465, 0.6574, 0.1651], [0.4772, 0.1718, 0.5734, 0.3199, 1.3487, 0.8627, 0.4367, 0.5885, 0.1979, 0.8493, 0.647, 0.352], [1.1994, 0.8694, 1.1591, 0.1051, 1.6418, 0.7557, 0.4997, 0.8151, 0.2086, 0.6388, 0.8401, 0.4696], [0.8042, 0.8969, 0.4993, 0.0736, 0.217, 0.0231, 0.2358, 0.3639, 0.9869, 0.3707, 0.1921, 0.6222]]]