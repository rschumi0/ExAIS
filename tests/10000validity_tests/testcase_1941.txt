import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot24640 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot24640 = tf.keras.layers.Input(shape=([3, 3]))
in0Con28287 = tf.keras.layers.Input(shape=([2, 3, 3]))
in0Loc49479 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Cro8207 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con38502 = tf.keras.layers.Input(shape=([12, 3, 1]))
in0Min2358 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Min2358 = tf.keras.layers.Input(shape=([1, 2, 2]))

Dot24640 = keras.layers.Dot(axes=(2, 2), name = 'Dot24640', )([in0Dot24640,in1Dot24640])
Res55314 = keras.layers.Reshape((3, 3, 1), name = 'Res55314', )(Dot24640)
Max46093 = keras.layers.MaxPool2D(pool_size=(2, 1), strides=(1, 1), padding='valid', name = 'Max46093', )(Res55314)
Con28287 = keras.layers.Concatenate(axis=3, name = 'Con28287', )([Max46093,in0Con28287])
Loc49479 = keras.layers.LocallyConnected2D(4, (1, 1),strides=(1, 1), name = 'Loc49479', )(in0Loc49479)
Zer77303 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer77303', )(Loc49479)
Add67019 = keras.layers.Add(name = 'Add67019', )([Con28287,Zer77303])
Lay15029 = keras.layers.LayerNormalization(axis=2, epsilon=1.3919025080804681, name = 'Lay15029', )(Add67019)
Res78059 = keras.layers.Reshape((2, 12), name = 'Res78059', )(Lay15029)
Cro8207 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro8207', )(in0Cro8207)
Res3951 = keras.layers.Reshape((1, 1), name = 'Res3951', )(Cro8207)
Zer71486 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer71486', )(Res3951)
Dot81191 = keras.layers.Dot(axes=(1, 1), name = 'Dot81191', )([Res78059,Zer71486])
Res7787 = keras.layers.Reshape((12, 1, 1), name = 'Res7787', )(Dot81191)
Zer16380 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer16380', )(Res7787)
Con38502 = keras.layers.Concatenate(axis=3, name = 'Con38502', )([Zer16380,in0Con38502])
Min2358 = keras.layers.Minimum(name = 'Min2358', )([in0Min2358,in1Min2358])
Zer44925 = keras.layers.ZeroPadding2D(padding=((11, 0), (1, 0)), name = 'Zer44925', )(Min2358)
Max1191 = keras.layers.Maximum(name = 'Max1191', )([Con38502,Zer44925])
model = tf.keras.models.Model(inputs=[in0Dot24640,in1Dot24640,in0Con28287,in0Loc49479,in0Cro8207,in0Con38502,in0Min2358,in1Min2358], outputs=Max1191)
w = model.get_layer('Loc49479').get_weights() 
w[0] = np.array([[[0.5552, 0.9964, 0.2307, 0.2439], [0.2492, 0.7689, 0.2957, 0.1783]]])
w[1] = np.array([[[0, 0, 0, 0]]])
model.get_layer('Loc49479').set_weights(w) 
in0Dot24640 = tf.constant([[[0.4514, 0.5546, 0.6264], [0.3608, 0.6151, 0.2746], [0.1547, 0.9247, 0.7845]]])
in1Dot24640 = tf.constant([[[0.1426, 0.0142, 0.8649], [0.5155, 0.1146, 0.4287], [0.1946, 0.4419, 0.5107]]])
in0Con28287 = tf.constant([[[[0.6878, 0.1319, 0.2913], [0.6723, 0.9564, 0.3621], [0.4975, 0.603, 0.6752]], [[0.276, 0.1343, 0.9972], [0.0904, 0.6402, 0.6384], [0.2512, 0.4445, 0.3164]]]])
in0Loc49479 = tf.constant([[[[0.5217, 0.0199]]]])
in0Cro8207 = tf.constant([[[[1.0732]]]])
in0Con38502 = tf.constant([[[[0.8182], [0.6489], [0.8879]], [[0.1162], [0.9229], [0.6055]], [[0.5806], [0.9197], [0.4681]], [[0.1811], [0.8481], [0.1536]], [[0.9098], [0.4406], [0.248]], [[0.8356], [0.7468], [0.1396]], [[0.0167], [0.1914], [0.3172]], [[0.5184], [0.0916], [0.088]], [[0.9227], [0.8832], [0.646]], [[0.0135], [0.2405], [0.4726]], [[0.8874], [0.457], [0.602]], [[0.9227], [0.1926], [0.1903]]]])
in0Min2358 = tf.constant([[[[0.4703, 0.2602], [0.1085, 0.1538]]]])
in1Min2358 = tf.constant([[[[0.8239, 0.081], [0.1891, 0.8557]]]])
print (np.array2string(model.predict([in0Dot24640,in1Dot24640,in0Con28287,in0Loc49479,in0Cro8207,in0Con38502,in0Min2358,in1Min2358],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max1191.png')

LDot24640 = dot_layer([[[0.4514, 0.5546, 0.6264], [0.3608, 0.6151, 0.2746], [0.1547, 0.9247, 0.7845]]], [[[0.1426, 0.0142, 0.8649], [0.5155, 0.1146, 0.4287], [0.1946, 0.4419, 0.5107]]], 2, 2, Dot24640), 
LRes55314 = reshape_layer(Dot24640, [3, 3, 1], Res55314), 
LMax46093 = max_pool2D_layer(Res55314, 2, 1, 1, 1, false, Max46093), 
LCon28287 = concatenate_layer([Max46093,[[[[0.6878, 0.1319, 0.2913], [0.6723, 0.9564, 0.3621], [0.4975, 0.603, 0.6752]], [[0.276, 0.1343, 0.9972], [0.0904, 0.6402, 0.6384], [0.2512, 0.4445, 0.3164]]]]], 3, Con28287), 
LLoc49479 = locally_connected2D_layer([[[[0.5217, 0.0199]]]], 1, 1,[[[0.5552, 0.9964, 0.2307, 0.2439], [0.2492, 0.7689, 0.2957, 0.1783]]],[[[0, 0, 0, 0]]], 1, 1, Loc49479), 
LZer77303 = zero_padding2D_layer(Loc49479, 1, 0, 2, 0, Zer77303), 
LAdd67019 = add_layer([Con28287,Zer77303], Add67019), 
LLay15029 = layer_normalization_layer(Add67019, 2, 1.3919025080804681, Lay15029), 
LRes78059 = reshape_layer(Lay15029, [2, 12], Res78059), 
LCro8207 = cropping2D_layer([[[[1.0732]]]], 0, 0, 0, 0, Cro8207), 
LRes3951 = reshape_layer(Cro8207, [1, 1], Res3951), 
LZer71486 = zero_padding1D_layer(Res3951, 1, 0, Zer71486), 
LDot81191 = dot_layer(Res78059,Zer71486, 1, 1, Dot81191), 
LRes7787 = reshape_layer(Dot81191, [12, 1, 1], Res7787), 
LZer16380 = zero_padding2D_layer(Res7787, 0, 0, 2, 0, Zer16380), 
LCon38502 = concatenate_layer([Zer16380,[[[[0.8182], [0.6489], [0.8879]], [[0.1162], [0.9229], [0.6055]], [[0.5806], [0.9197], [0.4681]], [[0.1811], [0.8481], [0.1536]], [[0.9098], [0.4406], [0.248]], [[0.8356], [0.7468], [0.1396]], [[0.0167], [0.1914], [0.3172]], [[0.5184], [0.0916], [0.088]], [[0.9227], [0.8832], [0.646]], [[0.0135], [0.2405], [0.4726]], [[0.8874], [0.457], [0.602]], [[0.9227], [0.1926], [0.1903]]]]], 3, Con38502), 
LMin2358 = minimum_layer([[[[[0.4703, 0.2602], [0.1085, 0.1538]]]], [[[[0.8239, 0.081], [0.1891, 0.8557]]]]], Min2358), 
LZer44925 = zero_padding2D_layer(Min2358, 11, 0, 1, 0, Zer44925), 
LMax1191 = maximum_layer([Con38502,Zer44925], Max1191), 
exec_layers([LDot24640,LRes55314,LMax46093,LCon28287,LLoc49479,LZer77303,LAdd67019,LLay15029,LRes78059,LCro8207,LRes3951,LZer71486,LDot81191,LRes7787,LZer16380,LCon38502,LMin2358,LZer44925,LMax1191],["Dot24640","Res55314","Max46093","Con28287","Loc49479","Zer77303","Add67019","Lay15029","Res78059","Cro8207","Res3951","Zer71486","Dot81191","Res7787","Zer16380","Con38502","Min2358","Zer44925","Max1191"],Max1191,"Max1191")

Actual (Unparsed): [[[[0.0000000, 0.8182000], [0.0000000, 0.6489000], [0.0000000, 0.8879000]], [[0.0000000, 0.1162000], [0.0000000, 0.9229000], [0.0000000, 0.6055000]], [[0.0000000, 0.5806000], [0.0000000, 0.9197000], [0.0000000, 0.4681000]], [[0.0000000, 0.1811000], [0.0000000, 0.8481000], [0.2705617, 0.1536000]], [[0.0000000, 0.9098000], [0.0000000, 0.4406000], [0.0000000, 0.2480000]], [[0.0000000, 0.8356000], [0.0000000, 0.7468000], [0.0000000, 0.1396000]], [[0.0000000, 0.0167000], [0.0000000, 0.1914000], [0.1713997, 0.3172000]], [[0.0000000, 0.5184000], [0.0000000, 0.0916000], [0.0000000, 0.0880000]], [[0.0000000, 0.9227000], [0.0000000, 0.8832000], [0.3058936, 0.6460000]], [[0.0000000, 0.0135000], [0.0000000, 0.2405000], [0.3548851, 0.4726000]], [[0.0000000, 0.8874000], [0.0000000, 0.4570000], [0.1093238, 0.6020000]], [[0.0000000, 0.9227000], [0.4703000, 0.1926000], [0.1085000, 0.1903000]]]]

Expected (Unparsed): [[[[0,0.8182],[0,0.6489],[0,0.8879]],[[0,0.1162],[0,0.9229],[0,0.6055]],[[0,0.5806],[0,0.9197],[0,0.4681]],[[0,0.1811],[0,0.8481],[0.27056174319701265,0.1536]],[[0,0.9098],[0,0.4406],[0,0.248]],[[0,0.8356],[0,0.7468],[0,0.1396]],[[0,0.0167],[0,0.1914],[0.17139964306895755,0.3172]],[[0,0.5184],[0,0.0916],[0,0.088]],[[0,0.9227],[0,0.8832],[0.30589357903002445,0.646]],[[0,0.0135],[0,0.2405],[0.3548850890443779,0.4726]],[[0,0.8874],[0,0.457],[0.10932376482504459,0.602]],[[0,0.9227],[0.4703,0.1926],[0.1085,0.1903]]]]

Actual:   [[[[0, 0.8182], [0, 0.6489], [0, 0.8879]], [[0, 0.1162], [0, 0.9229], [0, 0.6055]], [[0, 0.5806], [0, 0.9197], [0, 0.4681]], [[0, 0.1811], [0, 0.8481], [0.2706, 0.1536]], [[0, 0.9098], [0, 0.4406], [0, 0.248]], [[0, 0.8356], [0, 0.7468], [0, 0.1396]], [[0, 0.0167], [0, 0.1914], [0.1714, 0.3172]], [[0, 0.5184], [0, 0.0916], [0, 0.088]], [[0, 0.9227], [0, 0.8832], [0.3059, 0.646]], [[0, 0.0135], [0, 0.2405], [0.3549, 0.4726]], [[0, 0.8874], [0, 0.457], [0.1094, 0.602]], [[0, 0.9227], [0.4703, 0.1926], [0.1085, 0.1903]]]]

Expected: [[[[0, 0.8182], [0, 0.6489], [0, 0.8879]], [[0, 0.1162], [0, 0.9229], [0, 0.6055]], [[0, 0.5806], [0, 0.9197], [0, 0.4681]], [[0, 0.1811], [0, 0.8481], [0.2706, 0.1536]], [[0, 0.9098], [0, 0.4406], [0, 0.248]], [[0, 0.8356], [0, 0.7468], [0, 0.1396]], [[0, 0.0167], [0, 0.1914], [0.1714, 0.3172]], [[0, 0.5184], [0, 0.0916], [0, 0.088]], [[0, 0.9227], [0, 0.8832], [0.3059, 0.646]], [[0, 0.0135], [0, 0.2405], [0.3549, 0.4726]], [[0, 0.8874], [0, 0.457], [0.1094, 0.602]], [[0, 0.9227], [0.4703, 0.1926], [0.1085, 0.1903]]]]