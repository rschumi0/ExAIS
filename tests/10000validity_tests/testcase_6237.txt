import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul36199 = tf.keras.layers.Input(shape=([2, 2]))
in1Mul36199 = tf.keras.layers.Input(shape=([2, 2]))
in0Ave59860 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave59860 = tf.keras.layers.Input(shape=([1, 1]))

Mul36199 = keras.layers.Multiply(name = 'Mul36199', )([in0Mul36199,in1Mul36199])
Glo55699 = keras.layers.GlobalAveragePooling1D(name = 'Glo55699', )(Mul36199)
Res66432 = keras.layers.Reshape((2, 1), name = 'Res66432', )(Glo55699)
Ave59860 = keras.layers.Average(name = 'Ave59860', )([in0Ave59860,in1Ave59860])
Zer68834 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer68834', )(Ave59860)
Mul12206 = keras.layers.Multiply(name = 'Mul12206', )([Res66432,Zer68834])
model = tf.keras.models.Model(inputs=[in0Mul36199,in1Mul36199,in0Ave59860,in1Ave59860], outputs=Mul12206)
in0Mul36199 = tf.constant([[[0.9594, 0.5087], [0.5501, 0.593]]])
in1Mul36199 = tf.constant([[[0.9524, 0.8958], [0.127, 0.4289]]])
in0Ave59860 = tf.constant([[[0.4103]]])
in1Ave59860 = tf.constant([[[0.6139]]])
print (np.array2string(model.predict([in0Mul36199,in1Mul36199,in0Ave59860,in1Ave59860],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul12206.png')

LMul36199 = multiply_layer([[[[0.9594, 0.5087], [0.5501, 0.593]]], [[[0.9524, 0.8958], [0.127, 0.4289]]]], Mul36199), 
LGlo55699 = global_average_pooling1D_layer(Mul36199, Glo55699), 
LRes66432 = reshape_layer(Glo55699, [2, 1], Res66432), 
LAve59860 = average_layer([[[[0.4103]]], [[[0.6139]]]], Ave59860), 
LZer68834 = zero_padding1D_layer(Ave59860, 1, 0, Zer68834), 
LMul12206 = multiply_layer([Res66432,Zer68834], Mul12206), 
exec_layers([LMul36199,LGlo55699,LRes66432,LAve59860,LZer68834,LMul12206],["Mul36199","Glo55699","Res66432","Ave59860","Zer68834","Mul12206"],Mul12206,"Mul12206")

Actual (Unparsed): [[[0.0000000], [0.1818035]]]

Expected (Unparsed): [[[0.0],[0.181803478518]]]

Actual:   [[[0], [0.1819]]]

Expected: [[[0], [0.1819]]]