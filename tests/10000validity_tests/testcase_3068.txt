import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min32790 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Min32790 = tf.keras.layers.Input(shape=([2, 1, 2]))

Min32790 = keras.layers.Minimum(name = 'Min32790', )([in0Min32790,in1Min32790])
Res41101 = keras.layers.Reshape((2, 2), name = 'Res41101', )(Min32790)
Glo29532 = keras.layers.GlobalMaxPool1D(name = 'Glo29532', )(Res41101)
Res12054 = keras.layers.Reshape((2, 1), name = 'Res12054', )(Glo29532)
Res11924 = keras.layers.Reshape((2, 1, 1), name = 'Res11924', )(Res12054)
Max79838 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(2, 1), padding='valid', name = 'Max79838', )(Res11924)
Res557 = keras.layers.Reshape((1, 1), name = 'Res557', )(Max79838)
Sim10491 = keras.layers.SimpleRNN(3,name = 'Sim10491', )(Res557)
model = tf.keras.models.Model(inputs=[in0Min32790,in1Min32790], outputs=Sim10491)
w = model.get_layer('Sim10491').get_weights() 
w[0] = np.array([[8, 4, 6]])
w[1] = np.array([[4, 2, 3], [8, 2, 10], [1, 4, 5]])
w[2] = np.array([3, 7, 1])
model.get_layer('Sim10491').set_weights(w) 
in0Min32790 = tf.constant([[[[0.2781, 0.2752]], [[0.2699, 0.7388]]]])
in1Min32790 = tf.constant([[[[0.9403, 0.813]], [[0.2929, 0.6552]]]])
print (np.array2string(model.predict([in0Min32790,in1Min32790],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim10491.png')

LMin32790 = minimum_layer([[[[[0.2781, 0.2752]], [[0.2699, 0.7388]]]], [[[[0.9403, 0.813]], [[0.2929, 0.6552]]]]], Min32790), 
LRes41101 = reshape_layer(Min32790, [2, 2], Res41101), 
LGlo29532 = global_max_pool1D_layer(Res41101, Glo29532), 
LRes12054 = reshape_layer(Glo29532, [2, 1], Res12054), 
LRes11924 = reshape_layer(Res12054, [2, 1, 1], Res11924), 
LMax79838 = max_pool2D_layer(Res11924, 1, 1, 2, 1, false, Max79838), 
LRes557 = reshape_layer(Max79838, [1, 1], Res557), 
LSim10491 = simple_rnn_layer(Res557,[[8, 4, 6]],[[4, 2, 3], [8, 2, 10], [1, 4, 5]],[3, 7, 1], Sim10491), 
exec_layers([LMin32790,LRes41101,LGlo29532,LRes12054,LRes11924,LMax79838,LRes557,LSim10491],["Min32790","Res41101","Glo29532","Res12054","Res11924","Max79838","Res557","Sim10491"],Sim10491,"Sim10491")

Actual (Unparsed): [[0.9999421, 0.9999998, 0.9904274]]

Expected (Unparsed): [[0.9999420819674504,0.9999998202417437,0.9904274017374874]]

Actual:   [[1, 1, 0.9905]]

Expected: [[1, 1, 0.9905]]