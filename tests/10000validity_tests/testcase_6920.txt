import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Bat25215 = tf.keras.layers.Input(shape=([2, 3, 4]))

Bat25215 = keras.layers.BatchNormalization(axis=1, epsilon=0.49155807320012235,  name = 'Bat25215', )(in0Bat25215)
Res42533 = keras.layers.Reshape((2, 3, 4, 1), name = 'Res42533', )(Bat25215)
Cro96321 = keras.layers.Cropping3D(cropping=((1, 0), (0, 0), (2, 1)), name = 'Cro96321', )(Res42533)
model = tf.keras.models.Model(inputs=[in0Bat25215], outputs=Cro96321)
w = model.get_layer('Bat25215').get_weights() 
w[0] = np.array([0.7255, 0.0303])
w[1] = np.array([0.4248, 0.7158])
w[2] = np.array([0.9071, 0.26])
w[3] = np.array([0.6186, 0.609])
model.get_layer('Bat25215').set_weights(w) 
in0Bat25215 = tf.constant([[[[1.7977, 1.3887, 1.0461, 1.0612], [1.1984, 1.3099, 1.0451, 1.4445], [1.5712, 1.1573, 1.9077, 1.2029]], [[1.5616, 1.0561, 1.1374, 1.9333], [1.2196, 1.6164, 1.8019, 1.9381], [1.7531, 1.5527, 1.404, 1.746]]]])
print (np.array2string(model.predict([in0Bat25215],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro96321.png')

LBat25215 = batch_normalization_layer([[[[1.7977, 1.3887, 1.0461, 1.0612], [1.1984, 1.3099, 1.0451, 1.4445], [1.5712, 1.1573, 1.9077, 1.2029]], [[1.5616, 1.0561, 1.1374, 1.9333], [1.2196, 1.6164, 1.8019, 1.9381], [1.7531, 1.5527, 1.404, 1.746]]]], 1, 0.49155807320012235, [0.7255, 0.0303], [0.4248, 0.7158], [0.9071, 0.26], [0.6186, 0.609], Bat25215), 
LRes42533 = reshape_layer(Bat25215, [2, 3, 4, 1], Res42533), 
LCro96321 = cropping3D_layer(Res42533, 1, 0, 0, 0, 2, 1, Cro96321), 
exec_layers([LBat25215,LRes42533,LCro96321],["Bat25215","Res42533","Cro96321"],Cro96321,"Cro96321")

Actual (Unparsed): [[[[[0.7411416]], [[0.7603341]], [[0.7488417]]]]]

Expected (Unparsed): [[[[[0.7411415851213167]],[[0.7603340666726216]],[[0.7488416838144362]]]]]

Actual:   [[[[[0.7412]], [[0.7604]], [[0.7489]]]]]

Expected: [[[[[0.7412]], [[0.7604]], [[0.7489]]]]]