import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mas37977 = tf.keras.layers.Input(shape=([1]))

Mas37977 = keras.layers.Masking(mask_value=2, name = 'Mas37977', )(in0Mas37977)
Res36907 = keras.layers.Reshape((1, 1), name = 'Res36907', )(Mas37977)
Sim29235 = keras.layers.SimpleRNN(2,name = 'Sim29235', )(Res36907)
Res61329 = keras.layers.Reshape((2, 1), name = 'Res61329', )(Sim29235)
Res73612 = keras.layers.Reshape((2, 1, 1), name = 'Res73612', )(Res61329)
Res85657 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res85657', )(Res73612)
Zer96161 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer96161', )(Res85657)
Con62824 = keras.layers.Conv3D(3, (4, 2, 3),strides=(4, 1, 5), padding='same', dilation_rate=(1, 1, 1), name = 'Con62824', )(Zer96161)
model = tf.keras.models.Model(inputs=[in0Mas37977], outputs=Con62824)
w = model.get_layer('Sim29235').get_weights() 
w[0] = np.array([[2, 10]])
w[1] = np.array([[8, 4], [4, 3]])
w[2] = np.array([2, 3])
model.get_layer('Sim29235').set_weights(w) 
w = model.get_layer('Con62824').get_weights() 
w[0] = np.array([[[[[0.7896, 0.2738, 0.6517]], [[0.2141, 0.5902, 0.4239]], [[0.2658, 0.4502, 0.7641]]], [[[0.4672, 0.354, 0.994]], [[0.6657, 0.046, 0.9349]], [[0.0001, 0.6963, 0.4799]]]], [[[[0.2155, 0.5361, 0.7136]], [[0.3299, 0.7327, 0.523]], [[0.6513, 0.0621, 0.7117]]], [[[0.0284, 0.9665, 0.5261]], [[0.2665, 0.1332, 0.9552]], [[0.4577, 0.9348, 0.6662]]]], [[[[0.5496, 0.1059, 0.5704]], [[0.0697, 0.941, 0.3907]], [[0.8011, 0.5417, 0.2644]]], [[[0.7018, 0.0987, 0.3861]], [[0.6181, 0.5662, 0.0073]], [[0.1932, 0.8991, 0.9309]]]], [[[[0.228, 0.0745, 0.2851]], [[0.735, 0.0676, 0.6765]], [[0.7111, 0.7771, 0.2254]]], [[[0.1135, 0.3554, 0.6251]], [[0.014, 0.2734, 0.9753]], [[0.4585, 0.8883, 0.177]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con62824').set_weights(w) 
in0Mas37977 = tf.constant([[1.3125]])
print (np.array2string(model.predict([in0Mas37977],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con62824.png')

LMas37977 = masking_layer([[1.3125]], 2, Mas37977), 
LRes36907 = reshape_layer(Mas37977, [1, 1], Res36907), 
LSim29235 = simple_rnn_layer(Res36907,[[2, 10]],[[8, 4], [4, 3]],[2, 3], Sim29235), 
LRes61329 = reshape_layer(Sim29235, [2, 1], Res61329), 
LRes73612 = reshape_layer(Res61329, [2, 1, 1], Res73612), 
LRes85657 = reshape_layer(Res73612, [2, 1, 1, 1], Res85657), 
LZer96161 = zero_padding3D_layer(Res85657, 1, 1, 1, 1, 1, 1, Zer96161), 
LCon62824 = conv3D_layer(Zer96161, 4, 2, 3,[[[[[0.7896, 0.2738, 0.6517]], [[0.2141, 0.5902, 0.4239]], [[0.2658, 0.4502, 0.7641]]], [[[0.4672, 0.354, 0.994]], [[0.6657, 0.046, 0.9349]], [[0.0001, 0.6963, 0.4799]]]], [[[[0.2155, 0.5361, 0.7136]], [[0.3299, 0.7327, 0.523]], [[0.6513, 0.0621, 0.7117]]], [[[0.0284, 0.9665, 0.5261]], [[0.2665, 0.1332, 0.9552]], [[0.4577, 0.9348, 0.6662]]]], [[[[0.5496, 0.1059, 0.5704]], [[0.0697, 0.941, 0.3907]], [[0.8011, 0.5417, 0.2644]]], [[[0.7018, 0.0987, 0.3861]], [[0.6181, 0.5662, 0.0073]], [[0.1932, 0.8991, 0.9309]]]], [[[[0.228, 0.0745, 0.2851]], [[0.735, 0.0676, 0.6765]], [[0.7111, 0.7771, 0.2254]]], [[[0.1135, 0.3554, 0.6251]], [[0.014, 0.2734, 0.9753]], [[0.4585, 0.8883, 0.177]]]]],[0, 0, 0], 4, 1, 5, true, 1, 1, 1, Con62824), 
exec_layers([LMas37977,LRes36907,LSim29235,LRes61329,LRes73612,LRes85657,LZer96161,LCon62824],["Mas37977","Res36907","Sim29235","Res61329","Res73612","Res85657","Zer96161","Con62824"],Con62824,"Con62824")

Actual (Unparsed): [[[[[0.8845488, 0.6993744, 0.9623164]], [[0.3995366, 1.6735592, 0.9135995]], [[0.0000000, 0.0000000, 0.0000000]]]]]

Expected (Unparsed): [[[[[0.8845487774125266,0.6993743983164997,0.9623164059454298]],[[0.3995365916262521,1.6735591715203086,0.9135994768733798]],[[0.0,0.0,0.0]]]]]

Actual:   [[[[[0.8846, 0.6994, 0.9624]], [[0.3996, 1.6736, 0.9136]], [[0, 0, 0]]]]]

Expected: [[[[[0.8846, 0.6994, 0.9624]], [[0.3996, 1.6736, 0.9136]], [[0, 0, 0]]]]]