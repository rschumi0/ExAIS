import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con87159 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Cro20974 = tf.keras.layers.Input(shape=([2, 4, 3, 2]))

Con87159 = keras.layers.Conv3D(2, (1, 2, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con87159', )(in0Con87159)
Zer82194 = keras.layers.ZeroPadding3D(padding=((1, 0), (3, 0), (1, 0)), name = 'Zer82194', )(Con87159)
Cro20974 = keras.layers.Cropping3D(cropping=((0, 0), (0, 0), (1, 0)), name = 'Cro20974', )(in0Cro20974)
Min76369 = keras.layers.Minimum(name = 'Min76369', )([Zer82194,Cro20974])
model = tf.keras.models.Model(inputs=[in0Con87159,in0Cro20974], outputs=Min76369)
w = model.get_layer('Con87159').get_weights() 
w[0] = np.array([[[[[0.2732, 0.6722]]], [[[0.4256, 0.7636]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con87159').set_weights(w) 
in0Con87159 = tf.constant([[[[[0.4789]], [[0.185]]]]])
in0Cro20974 = tf.constant([[[[[1.6287, 1.0205], [1.9189, 1.0639], [1.7652, 1.2645]], [[1.7177, 1.728], [1.6218, 1.2977], [1.869, 1.3852]], [[1.9439, 1.1422], [1.0838, 1.7852], [1.558, 1.4099]], [[1.1444, 1.774], [1.9929, 1.075], [1.4308, 1.6821]]], [[[1.9443, 1.5282], [1.6851, 1.5737], [1.3675, 1.5065]], [[1.3691, 1.9322], [1.5958, 1.4914], [1.1579, 1.0563]], [[1.9041, 1.8198], [1.2159, 1.2959], [1.3629, 1.0637]], [[1.9013, 1.2729], [1.6613, 1.1975], [1.4623, 1.397]]]]])
print (np.array2string(model.predict([in0Con87159,in0Cro20974],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min76369.png')

LCon87159 = conv3D_layer([[[[[0.4789]], [[0.185]]]]], 1, 2, 1,[[[[[0.2732, 0.6722]]], [[[0.4256, 0.7636]]]]],[0, 0], 1, 1, 1, false, 1, 1, 1, Con87159), 
LZer82194 = zero_padding3D_layer(Con87159, 1, 0, 3, 0, 1, 0, Zer82194), 
LCro20974 = cropping3D_layer([[[[[1.6287, 1.0205], [1.9189, 1.0639], [1.7652, 1.2645]], [[1.7177, 1.728], [1.6218, 1.2977], [1.869, 1.3852]], [[1.9439, 1.1422], [1.0838, 1.7852], [1.558, 1.4099]], [[1.1444, 1.774], [1.9929, 1.075], [1.4308, 1.6821]]], [[[1.9443, 1.5282], [1.6851, 1.5737], [1.3675, 1.5065]], [[1.3691, 1.9322], [1.5958, 1.4914], [1.1579, 1.0563]], [[1.9041, 1.8198], [1.2159, 1.2959], [1.3629, 1.0637]], [[1.9013, 1.2729], [1.6613, 1.1975], [1.4623, 1.397]]]]], 0, 0, 0, 0, 1, 0, Cro20974), 
LMin76369 = minimum_layer([Zer82194,Cro20974], Min76369), 
exec_layers([LCon87159,LZer82194,LCro20974,LMin76369],["Con87159","Zer82194","Cro20974","Min76369"],Min76369,"Min76369")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.2095715, 0.4631826]]]]]

Expected (Unparsed): [[[[[0,0],[0,0]],[[0,0],[0,0]],[[0,0],[0,0]],[[0,0],[0,0]]],[[[0,0],[0,0]],[[0,0],[0,0]],[[0,0],[0,0]],[[0,0],[0.20957148,0.46318258]]]]]

Actual:   [[[[[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]]], [[[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0.2096, 0.4632]]]]]

Expected: [[[[[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]]], [[[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0.2096, 0.4632]]]]]