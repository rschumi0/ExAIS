import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con49038 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))

Con49038 = keras.layers.Conv3D(2, (1, 1, 1),strides=(1, 1, 11), padding='valid', dilation_rate=(1, 1, 1), name = 'Con49038', )(in0Con49038)
Res63028 = keras.layers.Reshape((1, 1, 2), name = 'Res63028', )(Con49038)
Loc13796 = keras.layers.LocallyConnected2D(3, (1, 1),strides=(4, 1), name = 'Loc13796', )(Res63028)
model = tf.keras.models.Model(inputs=[in0Con49038], outputs=Loc13796)
w = model.get_layer('Con49038').get_weights() 
w[0] = np.array([[[[[0.7887, 0.3558], [0.3115, 0.8108]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con49038').set_weights(w) 
w = model.get_layer('Loc13796').get_weights() 
w[0] = np.array([[[0.5291, 0.6723, 0.0029], [0.9049, 0.9158, 0.4173]]])
w[1] = np.array([[[0, 0, 0]]])
model.get_layer('Loc13796').set_weights(w) 
in0Con49038 = tf.constant([[[[[0.562, 0.5651], [0.8785, 0.1185]]]]])
print (np.array2string(model.predict([in0Con49038],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc13796.png')

LCon49038 = conv3D_layer([[[[[0.562, 0.5651], [0.8785, 0.1185]]]]], 1, 1, 1,[[[[[0.7887, 0.3558], [0.3115, 0.8108]]]]],[0, 0], 1, 1, 11, false, 1, 1, 1, Con49038), 
LRes63028 = reshape_layer(Con49038, [1, 1, 2], Res63028), 
LLoc13796 = locally_connected2D_layer(Res63028, 1, 1,[[[0.5291, 0.6723, 0.0029], [0.9049, 0.9158, 0.4173]]],[[[0, 0, 0]]], 4, 1, Loc13796), 
exec_layers([LCon49038,LRes63028,LLoc13796],["Con49038","Res63028","Loc13796"],Loc13796,"Loc13796")

Actual (Unparsed): [[[[0.9232133, 1.0190677, 0.2764388]]]]

Expected (Unparsed): [[[[0.923213327387,1.0190676993590002,0.27643884670900004]]]]

Actual:   [[[[0.9233, 1.0191, 0.2765]]]]

Expected: [[[[0.9233, 1.0191, 0.2765]]]]