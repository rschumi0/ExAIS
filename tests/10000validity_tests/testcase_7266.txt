import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo90509 = tf.keras.layers.Input(shape=([1, 1]))

Glo90509 = keras.layers.GlobalAveragePooling1D(name = 'Glo90509', )(in0Glo90509)
Res84053 = keras.layers.Reshape((1, 1), name = 'Res84053', )(Glo90509)
Res81982 = keras.layers.Reshape((1, 1, 1), name = 'Res81982', )(Res84053)
Res36308 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res36308', )(Res81982)
Zer50122 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer50122', )(Res36308)
model = tf.keras.models.Model(inputs=[in0Glo90509], outputs=Zer50122)
in0Glo90509 = tf.constant([[[1.1522]]])
print (np.array2string(model.predict([in0Glo90509],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer50122.png')

LGlo90509 = global_average_pooling1D_layer([[[1.1522]]], Glo90509), 
LRes84053 = reshape_layer(Glo90509, [1, 1], Res84053), 
LRes81982 = reshape_layer(Res84053, [1, 1, 1], Res81982), 
LRes36308 = reshape_layer(Res81982, [1, 1, 1, 1], Res36308), 
LZer50122 = zero_padding3D_layer(Res36308, 1, 1, 1, 1, 1, 1, Zer50122), 
exec_layers([LGlo90509,LRes84053,LRes81982,LRes36308,LZer50122],["Glo90509","Res84053","Res81982","Res36308","Zer50122"],Zer50122,"Zer50122")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [1.1522000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[1.1522],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]]]]

Actual:   [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [1.1522], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]

Expected: [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [1.1522], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]