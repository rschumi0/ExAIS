import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul22681 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Mul22681 = tf.keras.layers.Input(shape=([2, 2, 1]))

Mul22681 = keras.layers.Multiply(name = 'Mul22681', )([in0Mul22681,in1Mul22681])
Den42371 = keras.layers.Dense(1,name = 'Den42371', )(Mul22681)
model = tf.keras.models.Model(inputs=[in0Mul22681,in1Mul22681], outputs=Den42371)
w = model.get_layer('Den42371').get_weights() 
w[0] = np.array([[0.1358]])
w[1] = np.array([0.0545])
model.get_layer('Den42371').set_weights(w) 
in0Mul22681 = tf.constant([[[[0.8556], [0.4763]], [[0.7878], [0.1287]]]])
in1Mul22681 = tf.constant([[[[0.0121], [0.4205]], [[0.8534], [0.6982]]]])
print (np.array2string(model.predict([in0Mul22681,in1Mul22681],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den42371.png')

LMul22681 = multiply_layer([[[[[0.8556], [0.4763]], [[0.7878], [0.1287]]]], [[[[0.0121], [0.4205]], [[0.8534], [0.6982]]]]], Mul22681), 
LDen42371 = dense_layer(Mul22681, [[0.1358]],[0.0545], Den42371), 
exec_layers([LMul22681,LDen42371],["Mul22681","Den42371"],Den42371,"Den42371")

Actual (Unparsed): [[[[0.0559059], [0.0816986]], [[0.1457995], [0.0667028]]]]

Expected (Unparsed): [[[[0.055905904808],[0.08169858757]],[[0.145799497016],[0.066702762572]]]]

Actual:   [[[[0.056], [0.0817]], [[0.1458], [0.0668]]]]

Expected: [[[[0.056], [0.0817]], [[0.1458], [0.0668]]]]