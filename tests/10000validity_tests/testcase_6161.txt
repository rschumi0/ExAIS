import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave83544 = tf.keras.layers.Input(shape=([1, 1]))
in0Loc98048 = tf.keras.layers.Input(shape=([2, 1]))

Ave83544 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave83544', )(in0Ave83544)
Res34509 = keras.layers.Reshape((1, 1, 1), name = 'Res34509', )(Ave83544)
Glo97438 = keras.layers.GlobalMaxPool2D(name = 'Glo97438', )(Res34509)
Res57699 = keras.layers.Reshape((1, 1), name = 'Res57699', )(Glo97438)
Res84478 = keras.layers.Reshape((1, 1, 1), name = 'Res84478', )(Res57699)
Res93421 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res93421', )(Res84478)
Zer28165 = keras.layers.ZeroPadding3D(padding=((3, 0), (5, 0), (0, 0)), name = 'Zer28165', )(Res93421)
Loc98048 = keras.layers.LocallyConnected1D(3, (1),strides=(1), name = 'Loc98048', )(in0Loc98048)
Res30591 = keras.layers.Reshape((2, 3, 1), name = 'Res30591', )(Loc98048)
Res51393 = keras.layers.Reshape((2, 3, 1, 1), name = 'Res51393', )(Res30591)
Up_26438 = keras.layers.UpSampling3D(size=(2, 2, 1), name = 'Up_26438', )(Res51393)
Add38469 = keras.layers.Add(name = 'Add38469', )([Zer28165,Up_26438])
model = tf.keras.models.Model(inputs=[in0Ave83544,in0Loc98048], outputs=Add38469)
w = model.get_layer('Loc98048').get_weights() 
w[0] = np.array([[[0.1326, 0.0293, 0.6921]], [[0.3452, 0.9086, 0.5437]]])
w[1] = np.array([[0, 0, 0], [0, 0, 0]])
model.get_layer('Loc98048').set_weights(w) 
in0Ave83544 = tf.constant([[[1.8034]]])
in0Loc98048 = tf.constant([[[0.2793], [0.8232]]])
print (np.array2string(model.predict([in0Ave83544,in0Loc98048],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add38469.png')

LAve83544 = average_pooling1D_layer([[[1.8034]]], 1, Ave83544), 
LRes34509 = reshape_layer(Ave83544, [1, 1, 1], Res34509), 
LGlo97438 = global_max_pool2D_layer(Res34509, Glo97438), 
LRes57699 = reshape_layer(Glo97438, [1, 1], Res57699), 
LRes84478 = reshape_layer(Res57699, [1, 1, 1], Res84478), 
LRes93421 = reshape_layer(Res84478, [1, 1, 1, 1], Res93421), 
LZer28165 = zero_padding3D_layer(Res93421, 3, 0, 5, 0, 0, 0, Zer28165), 
LLoc98048 = locally_connected1D_layer([[[0.2793], [0.8232]]], 1,[[[0.1326, 0.0293, 0.6921]], [[0.3452, 0.9086, 0.5437]]],[[0, 0, 0], [0, 0, 0]], 1, Loc98048), 
LRes30591 = reshape_layer(Loc98048, [2, 3, 1], Res30591), 
LRes51393 = reshape_layer(Res30591, [2, 3, 1, 1], Res51393), 
LUp_26438 = up_sampling3D_layer(Res51393, 2, 2, 1, Up_26438), 
LAdd38469 = add_layer([Zer28165,Up_26438], Add38469), 
exec_layers([LAve83544,LRes34509,LGlo97438,LRes57699,LRes84478,LRes93421,LZer28165,LLoc98048,LRes30591,LRes51393,LUp_26438,LAdd38469],["Ave83544","Res34509","Glo97438","Res57699","Res84478","Res93421","Zer28165","Loc98048","Res30591","Res51393","Up_26438","Add38469"],Add38469,"Add38469")

Actual (Unparsed): [[[[[0.0370352]], [[0.0370352]], [[0.0081835]], [[0.0081835]], [[0.1933035]], [[0.1933035]]], [[[0.0370352]], [[0.0370352]], [[0.0081835]], [[0.0081835]], [[0.1933035]], [[0.1933035]]], [[[0.2841686]], [[0.2841686]], [[0.7479595]], [[0.7479595]], [[0.4475738]], [[0.4475738]]], [[[0.2841686]], [[0.2841686]], [[0.7479595]], [[0.7479595]], [[0.4475738]], [[2.2509739]]]]]

Expected (Unparsed): [[[[[0.03703518]],[[0.03703518]],[[0.00818349]],[[0.00818349]],[[0.19330353]],[[0.19330353]]],[[[0.03703518]],[[0.03703518]],[[0.00818349]],[[0.00818349]],[[0.19330353]],[[0.19330353]]],[[[0.28416864000000003]],[[0.28416864000000003]],[[0.74795952]],[[0.74795952]],[[0.44757384]],[[0.44757384]]],[[[0.28416864000000003]],[[0.28416864000000003]],[[0.74795952]],[[0.74795952]],[[0.44757384]],[[2.25097384]]]]]

Actual:   [[[[[0.0371]], [[0.0371]], [[0.0082]], [[0.0082]], [[0.1934]], [[0.1934]]], [[[0.0371]], [[0.0371]], [[0.0082]], [[0.0082]], [[0.1934]], [[0.1934]]], [[[0.2842]], [[0.2842]], [[0.748]], [[0.748]], [[0.4476]], [[0.4476]]], [[[0.2842]], [[0.2842]], [[0.748]], [[0.748]], [[0.4476]], [[2.251]]]]]

Expected: [[[[[0.0371]], [[0.0371]], [[0.0082]], [[0.0082]], [[0.1934]], [[0.1934]]], [[[0.0371]], [[0.0371]], [[0.0082]], [[0.0082]], [[0.1934]], [[0.1934]]], [[[0.2842]], [[0.2842]], [[0.748]], [[0.748]], [[0.4476]], [[0.4476]]], [[[0.2842]], [[0.2842]], [[0.748]], [[0.748]], [[0.4476]], [[2.251]]]]]