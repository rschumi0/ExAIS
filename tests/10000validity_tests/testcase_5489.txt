import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max9990 = tf.keras.layers.Input(shape=([1, 2]))
in1Max9990 = tf.keras.layers.Input(shape=([1, 2]))

Max9990 = keras.layers.Maximum(name = 'Max9990', )([in0Max9990,in1Max9990])
Res58193 = keras.layers.Reshape((1, 2, 1), name = 'Res58193', )(Max9990)
Res11375 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res11375', )(Res58193)
Zer94734 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer94734', )(Res11375)
Res40064 = keras.layers.Reshape((3, 4, 3), name = 'Res40064', )(Zer94734)
Up_14696 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_14696', )(Res40064)
model = tf.keras.models.Model(inputs=[in0Max9990,in1Max9990], outputs=Up_14696)
in0Max9990 = tf.constant([[[0.6037, 0.4024]]])
in1Max9990 = tf.constant([[[0.3594, 0.4023]]])
print (np.array2string(model.predict([in0Max9990,in1Max9990],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_14696.png')

LMax9990 = maximum_layer([[[[0.6037, 0.4024]]], [[[0.3594, 0.4023]]]], Max9990), 
LRes58193 = reshape_layer(Max9990, [1, 2, 1], Res58193), 
LRes11375 = reshape_layer(Res58193, [1, 2, 1, 1], Res11375), 
LZer94734 = zero_padding3D_layer(Res11375, 1, 1, 1, 1, 1, 1, Zer94734), 
LRes40064 = reshape_layer(Zer94734, [3, 4, 3], Res40064), 
LUp_14696 = up_sampling2D_layer(Res40064, 2, 1, Up_14696), 
exec_layers([LMax9990,LRes58193,LRes11375,LZer94734,LRes40064,LUp_14696],["Max9990","Res58193","Res11375","Zer94734","Res40064","Up_14696"],Up_14696,"Up_14696")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.6037000, 0.0000000], [0.0000000, 0.4024000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.6037000, 0.0000000], [0.0000000, 0.4024000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0.6037,0],[0,0.4024,0],[0,0,0]],[[0,0,0],[0,0.6037,0],[0,0.4024,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0]]]]

Actual:   [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0.6037, 0], [0, 0.4024, 0], [0, 0, 0]], [[0, 0, 0], [0, 0.6037, 0], [0, 0.4024, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]]]

Expected: [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0.6037, 0], [0, 0.4024, 0], [0, 0, 0]], [[0, 0, 0], [0, 0.6037, 0], [0, 0.4024, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]]]