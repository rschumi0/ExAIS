import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add35578 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Add35578 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con16145 = tf.keras.layers.Input(shape=([1, 3, 1]))
in0Min39749 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Min39749 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Mul62616 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Mul62616 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con81817 = tf.keras.layers.Input(shape=([5]))

Add35578 = keras.layers.Add(name = 'Add35578', )([in0Add35578,in1Add35578])
Res18923 = keras.layers.Reshape((1, 4), name = 'Res18923', )(Add35578)
Sep22728 = keras.layers.SeparableConv1D(3, (1),strides=(1), padding='valid', name = 'Sep22728', )(Res18923)
Res22029 = keras.layers.Reshape((1, 3, 1), name = 'Res22029', )(Sep22728)
Con16145 = keras.layers.Concatenate(axis=3, name = 'Con16145', )([Res22029,in0Con16145])
Min39749 = keras.layers.Minimum(name = 'Min39749', )([in0Min39749,in1Min39749])
Zer76411 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer76411', )(Min39749)
Max18142 = keras.layers.Maximum(name = 'Max18142', )([Con16145,Zer76411])
Res16767 = keras.layers.Reshape((1, 6), name = 'Res16767', )(Max18142)
Fla55946 = keras.layers.Flatten(name = 'Fla55946', )(Res16767)
Mul62616 = keras.layers.Multiply(name = 'Mul62616', )([in0Mul62616,in1Mul62616])
Res64094 = keras.layers.Reshape((2, 4), name = 'Res64094', )(Mul62616)
Sim80228 = keras.layers.SimpleRNN(1,name = 'Sim80228', )(Res64094)
Con81817 = keras.layers.Concatenate(axis=1, name = 'Con81817', )([Sim80228,in0Con81817])
Mul67705 = keras.layers.Multiply(name = 'Mul67705', )([Fla55946,Con81817])
model = tf.keras.models.Model(inputs=[in0Add35578,in1Add35578,in0Con16145,in0Min39749,in1Min39749,in0Mul62616,in1Mul62616,in0Con81817], outputs=Mul67705)
w = model.get_layer('Sep22728').get_weights() 
w[0] = np.array([[[0.3823], [0.4542], [0.0738], [0.2002]]])
w[1] = np.array([[[0.9829, 0.9074, 0.6163], [0.6504, 0.349, 0.2879], [0.4517, 0.886, 0.1428], [0.4511, 0.1147, 0.0521]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep22728').set_weights(w) 
w = model.get_layer('Sim80228').get_weights() 
w[0] = np.array([[5], [5], [10], [4]])
w[1] = np.array([[5]])
w[2] = np.array([7])
model.get_layer('Sim80228').set_weights(w) 
in0Add35578 = tf.constant([[[[0.0621, 0.0851], [0.8068, 0.2712]]]])
in1Add35578 = tf.constant([[[[0.3542, 0.947], [0.0741, 0.3672]]]])
in0Con16145 = tf.constant([[[[0.2116], [0.8532], [0.4822]]]])
in0Min39749 = tf.constant([[[[0.6379, 0.2642]]]])
in1Min39749 = tf.constant([[[[0.4228, 0.0198]]]])
in0Mul62616 = tf.constant([[[[0.1135, 0.9501], [0.2353, 0.5327]], [[0.9372, 0.2715], [0.4947, 0.5988]]]])
in1Mul62616 = tf.constant([[[[0.8029, 0.5637], [0.6697, 0.5028]], [[0.3653, 0.7584], [0.5055, 0.2914]]]])
in0Con81817 = tf.constant([[0.2364, 0.4669, 0.7196, 0.2347, 0.3563]])
print (np.array2string(model.predict([in0Add35578,in1Add35578,in0Con16145,in0Min39749,in1Min39749,in0Mul62616,in1Mul62616,in0Con81817],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul67705.png')

LAdd35578 = add_layer([[[[[0.0621, 0.0851], [0.8068, 0.2712]]]], [[[[0.3542, 0.947], [0.0741, 0.3672]]]]], Add35578), 
LRes18923 = reshape_layer(Add35578, [1, 4], Res18923), 
LSep22728 = separable_conv1D_layer(Res18923, 1,[[[[0.3823], [0.4542], [0.0738], [0.2002]]],[[[0.9829, 0.9074, 0.6163], [0.6504, 0.349, 0.2879], [0.4517, 0.886, 0.1428], [0.4511, 0.1147, 0.0521]]]],[0, 0, 0], 1, false, Sep22728), 
LRes22029 = reshape_layer(Sep22728, [1, 3, 1], Res22029), 
LCon16145 = concatenate_layer([Res22029,[[[[0.2116], [0.8532], [0.4822]]]]], 3, Con16145), 
LMin39749 = minimum_layer([[[[[0.6379, 0.2642]]]], [[[[0.4228, 0.0198]]]]], Min39749), 
LZer76411 = zero_padding2D_layer(Min39749, 0, 0, 2, 0, Zer76411), 
LMax18142 = maximum_layer([Con16145,Zer76411], Max18142), 
LRes16767 = reshape_layer(Max18142, [1, 6], Res16767), 
LFla55946 = flatten_layer(Res16767, Fla55946), 
LMul62616 = multiply_layer([[[[[0.1135, 0.9501], [0.2353, 0.5327]], [[0.9372, 0.2715], [0.4947, 0.5988]]]], [[[[0.8029, 0.5637], [0.6697, 0.5028]], [[0.3653, 0.7584], [0.5055, 0.2914]]]]], Mul62616), 
LRes64094 = reshape_layer(Mul62616, [2, 4], Res64094), 
LSim80228 = simple_rnn_layer(Res64094,[[5], [5], [10], [4]],[[5]],[7], Sim80228), 
LCon81817 = concatenate_layer([Sim80228,[[0.2364, 0.4669, 0.7196, 0.2347, 0.3563]]], 1, Con81817), 
LMul67705 = multiply_layer([Fla55946,Con81817], Mul67705), 
exec_layers([LAdd35578,LRes18923,LSep22728,LRes22029,LCon16145,LMin39749,LZer76411,LMax18142,LRes16767,LFla55946,LMul62616,LRes64094,LSim80228,LCon81817,LMul67705],["Add35578","Res18923","Sep22728","Res22029","Con16145","Min39749","Zer76411","Max18142","Res16767","Fla55946","Mul62616","Res64094","Sim80228","Con81817","Mul67705"],Mul67705,"Mul67705")

Actual (Unparsed): [[0.5483437, 0.0500222, 0.1775513, 0.6139628, 0.0992312, 0.1718079]]

Expected (Unparsed): [[0.5483436456109997,0.05002224,0.1775513276684518,0.61396272,0.09923116,0.17180786]]

Actual:   [[0.5484, 0.0501, 0.1776, 0.614, 0.0993, 0.1719]]

Expected: [[0.5484, 0.0501, 0.1776, 0.614, 0.0993, 0.1719]]