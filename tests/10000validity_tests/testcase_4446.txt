import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub81191 = tf.keras.layers.Input(shape=([3, 2, 2, 3]))
in1Sub81191 = tf.keras.layers.Input(shape=([3, 2, 2, 3]))
in0Den43007 = tf.keras.layers.Input(shape=([2, 2]))
in0GRU70396 = tf.keras.layers.Input(shape=([3, 1]))
in0Con67050 = tf.keras.layers.Input(shape=([34]))

Sub81191 = keras.layers.Subtract(name = 'Sub81191', )([in0Sub81191,in1Sub81191])
Res25162 = keras.layers.Reshape((3, 2, 6), name = 'Res25162', )(Sub81191)
Res65773 = keras.layers.Reshape((3, 12), name = 'Res65773', )(Res25162)
Fla4098 = keras.layers.Flatten(name = 'Fla4098', )(Res65773)
Den43007 = keras.layers.Dense(1,name = 'Den43007', )(in0Den43007)
Fla92688 = keras.layers.Flatten(name = 'Fla92688', )(Den43007)
GRU70396 = keras.layers.GRU(2,reset_after=True, recurrent_activation='sigmoid', name = 'GRU70396', )(in0GRU70396)
Sub40776 = keras.layers.Subtract(name = 'Sub40776', )([Fla92688,GRU70396])
Sof38197 = keras.layers.Softmax(axis=1, name = 'Sof38197', )(Sub40776)
Con67050 = keras.layers.Concatenate(axis=1, name = 'Con67050', )([Sof38197,in0Con67050])
Ave90045 = keras.layers.Average(name = 'Ave90045', )([Fla4098,Con67050])
model = tf.keras.models.Model(inputs=[in0Sub81191,in1Sub81191,in0Den43007,in0GRU70396,in0Con67050], outputs=Ave90045)
w = model.get_layer('Den43007').get_weights() 
w[0] = np.array([[0.5885], [0.2067]])
w[1] = np.array([0.901])
model.get_layer('Den43007').set_weights(w) 
w = model.get_layer('GRU70396').get_weights() 
w[0] = np.array([[8, 8, 4, 9, 9, 5]])
w[1] = np.array([[1, 3, 9, 10, 7, 2], [5, 10, 4, 5, 10, 4]])
w[2] = np.array([[6, 3, 5, 3, 2, 10], [4, 5, 3, 10, 1, 1]])
model.get_layer('GRU70396').set_weights(w) 
in0Sub81191 = tf.constant([[[[[0.1223, 0.5693, 0.4278], [0.838, 0.4886, 0.3051]], [[0.1052, 0.5936, 0.5718], [0.7416, 0.9012, 0.2542]]], [[[0.9035, 0.4346, 0.0019], [0.1671, 0.7534, 0.086]], [[0.2835, 0.6916, 0.2691], [0.1559, 0.1638, 0.0271]]], [[[0.097, 0.7776, 0.2912], [0.6352, 0.9925, 0.6767]], [[0.3302, 0.0111, 0.3124], [0.5958, 0.377, 0.8719]]]]])
in1Sub81191 = tf.constant([[[[[0.6955, 0.8057, 0.3433], [0.9234, 0.6855, 0.6413]], [[0.9849, 0.2441, 0.5275], [0.6456, 0.1193, 0.9831]]], [[[0.8769, 0.8261, 0.9738], [0.5034, 0.7017, 0.7316]], [[0.5411, 0.3276, 0.2284], [0.5447, 0.2757, 0.2377]]], [[[0.3853, 0.1501, 0.4619], [0.6686, 0.831, 0.1868]], [[0.106, 0.0942, 0.3207], [0.4235, 0.2627, 0.4508]]]]])
in0Den43007 = tf.constant([[[0.8576, 0.4027], [0.291, 0.7715]]])
in0GRU70396 = tf.constant([[[3], [7], [6]]])
in0Con67050 = tf.constant([[0.3993, 0.7446, 0.9938, 0.6086, 0.1546, 0.8673, 0.2616, 0.7481, 0.7506, 0.6829, 0.7329, 0.7811, 0.5647, 0.046, 0.9546, 0.976, 0.5397, 0.3926, 0.8258, 0.0626, 0.9171, 0.1952, 0.4699, 0.5533, 0.8811, 0.3942, 0.4541, 0.9977, 0.3985, 0.2474, 0.2669, 0.7473, 0.2066, 0.7814]])
print (np.array2string(model.predict([in0Sub81191,in1Sub81191,in0Den43007,in0GRU70396,in0Con67050],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave90045.png')

LSub81191 = subtract_layer([[[[[0.1223, 0.5693, 0.4278], [0.838, 0.4886, 0.3051]], [[0.1052, 0.5936, 0.5718], [0.7416, 0.9012, 0.2542]]], [[[0.9035, 0.4346, 0.0019], [0.1671, 0.7534, 0.086]], [[0.2835, 0.6916, 0.2691], [0.1559, 0.1638, 0.0271]]], [[[0.097, 0.7776, 0.2912], [0.6352, 0.9925, 0.6767]], [[0.3302, 0.0111, 0.3124], [0.5958, 0.377, 0.8719]]]]], [[[[[0.6955, 0.8057, 0.3433], [0.9234, 0.6855, 0.6413]], [[0.9849, 0.2441, 0.5275], [0.6456, 0.1193, 0.9831]]], [[[0.8769, 0.8261, 0.9738], [0.5034, 0.7017, 0.7316]], [[0.5411, 0.3276, 0.2284], [0.5447, 0.2757, 0.2377]]], [[[0.3853, 0.1501, 0.4619], [0.6686, 0.831, 0.1868]], [[0.106, 0.0942, 0.3207], [0.4235, 0.2627, 0.4508]]]]], Sub81191), 
LRes25162 = reshape_layer(Sub81191, [3, 2, 6], Res25162), 
LRes65773 = reshape_layer(Res25162, [3, 12], Res65773), 
LFla4098 = flatten_layer(Res65773, Fla4098), 
LDen43007 = dense_layer([[[0.8576, 0.4027], [0.291, 0.7715]]], [[0.5885], [0.2067]],[0.901], Den43007), 
LFla92688 = flatten_layer(Den43007, Fla92688), 
LGRU70396 = gru_layer([[[3], [7], [6]]],[[8, 8, 4, 9, 9, 5]],[[1, 3, 9, 10, 7, 2], [5, 10, 4, 5, 10, 4]],[[6, 3, 5, 3, 2, 10], [4, 5, 3, 10, 1, 1]], true, GRU70396), 
LSub40776 = subtract_layer(Fla92688,GRU70396, Sub40776), 
LSof38197 = softmax_layer(Sub40776, 1, Sof38197), 
LCon67050 = concatenate_layer([Sof38197,[[0.3993, 0.7446, 0.9938, 0.6086, 0.1546, 0.8673, 0.2616, 0.7481, 0.7506, 0.6829, 0.7329, 0.7811, 0.5647, 0.046, 0.9546, 0.976, 0.5397, 0.3926, 0.8258, 0.0626, 0.9171, 0.1952, 0.4699, 0.5533, 0.8811, 0.3942, 0.4541, 0.9977, 0.3985, 0.2474, 0.2669, 0.7473, 0.2066, 0.7814]]], 1, Con67050), 
LAve90045 = average_layer([Fla4098,Con67050], Ave90045), 
exec_layers([LSub81191,LRes25162,LRes65773,LFla4098,LDen43007,LFla92688,LGRU70396,LSub40776,LSof38197,LCon67050,LAve90045],["Sub81191","Res25162","Res65773","Fla4098","Den43007","Fla92688","GRU70396","Sub40776","Sof38197","Con67050","Ave90045"],Ave90045,"Ave90045")

Actual (Unparsed): [[-0.0046245, 0.0998244, 0.2419000, 0.3296000, 0.3984500, 0.1362000, -0.3625500, 0.6084000, 0.1529500, 0.4220500, 0.7662500, -0.0230000, 0.3797500, 0.1948000, -0.2036000, -0.1451500, 0.5031500, 0.1652000, 0.1410500, 0.3783000, 0.4332500, -0.1631000, 0.4026000, -0.0077000, 0.0908000, 0.5904000, 0.3552000, 0.1804000, 0.3078000, 0.7438000, 0.3113500, 0.0821500, 0.1293000, 0.4598000, 0.1604500, 0.6012500]]

Expected (Unparsed): [[-0.0046244515477855686,0.09982445154778552,0.2419,0.3296,0.39844999999999997,0.13620000000000002,-0.36255000000000004,0.6084,0.15295,0.42205000000000004,0.7662500000000001,-0.02300000000000002,0.37975,0.19480000000000003,-0.2036,-0.14514999999999997,0.50315,0.16519999999999996,0.14104999999999995,0.37829999999999997,0.43325,-0.16309999999999997,0.4026,-0.0076999999999999985,0.09079999999999999,0.5904,0.3552,0.1804,0.3078000000000001,0.7438,0.31135,0.08215,0.12930000000000003,0.4598,0.16045,0.6012500000000001]]

Actual:   [[-0.0046, 0.0999, 0.2419, 0.3296, 0.3985, 0.1362, -0.3625, 0.6084, 0.153, 0.4221, 0.7663, -0.023, 0.3798, 0.1948, -0.2036, -0.1451, 0.5032, 0.1652, 0.1411, 0.3783, 0.4333, -0.1631, 0.4026, -0.0077, 0.0908, 0.5904, 0.3552, 0.1804, 0.3078, 0.7438, 0.3114, 0.0822, 0.1293, 0.4598, 0.1605, 0.6013]]

Expected: [[-0.0046, 0.0999, 0.2419, 0.3296, 0.3985, 0.1363, -0.3625, 0.6084, 0.153, 0.4221, 0.7663, -0.023, 0.3798, 0.1949, -0.2036, -0.1451, 0.5032, 0.1652, 0.1411, 0.3783, 0.4333, -0.163, 0.4026, -0.0076, 0.0908, 0.5904, 0.3552, 0.1804, 0.3079, 0.7438, 0.3114, 0.0822, 0.1294, 0.4598, 0.1605, 0.6013]]