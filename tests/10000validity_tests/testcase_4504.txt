import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave14343 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Ave14343 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Min96855 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Min96855 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con40184 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Ave72300 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Ave72300 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con86278 = tf.keras.layers.Input(shape=([2]))

Ave14343 = keras.layers.Average(name = 'Ave14343', )([in0Ave14343,in1Ave14343])
Den56824 = keras.layers.Dense(3,name = 'Den56824', )(Ave14343)
Zer97667 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer97667', )(Den56824)
Min96855 = keras.layers.Minimum(name = 'Min96855', )([in0Min96855,in1Min96855])
Con40184 = keras.layers.Concatenate(axis=3, name = 'Con40184', )([Min96855,in0Con40184])
Mul69158 = keras.layers.Multiply(name = 'Mul69158', )([Zer97667,Con40184])
Den50087 = keras.layers.Dense(1,name = 'Den50087', )(Mul69158)
Res71716 = keras.layers.Reshape((2, 2), name = 'Res71716', )(Den50087)
Fla82710 = keras.layers.Flatten(name = 'Fla82710', )(Res71716)
Ave72300 = keras.layers.Average(name = 'Ave72300', )([in0Ave72300,in1Ave72300])
Glo80134 = keras.layers.GlobalMaxPool2D(name = 'Glo80134', )(Ave72300)
Con86278 = keras.layers.Concatenate(axis=1, name = 'Con86278', )([Glo80134,in0Con86278])
Mul44673 = keras.layers.Multiply(name = 'Mul44673', )([Fla82710,Con86278])
model = tf.keras.models.Model(inputs=[in0Ave14343,in1Ave14343,in0Min96855,in1Min96855,in0Con40184,in0Ave72300,in1Ave72300,in0Con86278], outputs=Mul44673)
w = model.get_layer('Den56824').get_weights() 
w[0] = np.array([[0.8108, 0.3134, 0.3189]])
w[1] = np.array([0.5675, 0.7256, 0.4274])
model.get_layer('Den56824').set_weights(w) 
w = model.get_layer('Den50087').get_weights() 
w[0] = np.array([[0.2599], [0.5454], [0.0026]])
w[1] = np.array([0.1844])
model.get_layer('Den50087').set_weights(w) 
in0Ave14343 = tf.constant([[[[0.2391]], [[0.6886]]]])
in1Ave14343 = tf.constant([[[[0.9358]], [[0.9626]]]])
in0Min96855 = tf.constant([[[[0.5124, 0.2446], [0.3157, 0.4451]], [[0.1021, 0.758], [0.5608, 0.6775]]]])
in1Min96855 = tf.constant([[[[0.0085, 0.1238], [0.8001, 0.8595]], [[0.0543, 0.5619], [0.1508, 0.8811]]]])
in0Con40184 = tf.constant([[[[0.1153], [0.0126]], [[0.6852], [0.9025]]]])
in0Ave72300 = tf.constant([[[[0.3286, 0.3514], [0.3041, 0.5155]]]])
in1Ave72300 = tf.constant([[[[0.508, 0.2775], [0.6612, 0.6072]]]])
in0Con86278 = tf.constant([[0.6187, 0.9693]])
print (np.array2string(model.predict([in0Ave14343,in1Ave14343,in0Min96855,in1Min96855,in0Con40184,in0Ave72300,in1Ave72300,in0Con86278],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul44673.png')

LAve14343 = average_layer([[[[[0.2391]], [[0.6886]]]], [[[[0.9358]], [[0.9626]]]]], Ave14343), 
LDen56824 = dense_layer(Ave14343, [[0.8108, 0.3134, 0.3189]],[0.5675, 0.7256, 0.4274], Den56824), 
LZer97667 = zero_padding2D_layer(Den56824, 0, 0, 1, 0, Zer97667), 
LMin96855 = minimum_layer([[[[[0.5124, 0.2446], [0.3157, 0.4451]], [[0.1021, 0.758], [0.5608, 0.6775]]]], [[[[0.0085, 0.1238], [0.8001, 0.8595]], [[0.0543, 0.5619], [0.1508, 0.8811]]]]], Min96855), 
LCon40184 = concatenate_layer([Min96855,[[[[0.1153], [0.0126]], [[0.6852], [0.9025]]]]], 3, Con40184), 
LMul69158 = multiply_layer([Zer97667,Con40184], Mul69158), 
LDen50087 = dense_layer(Mul69158, [[0.2599], [0.5454], [0.0026]],[0.1844], Den50087), 
LRes71716 = reshape_layer(Den50087, [2, 2], Res71716), 
LFla82710 = flatten_layer(Res71716, Fla82710), 
LAve72300 = average_layer([[[[[0.3286, 0.3514], [0.3041, 0.5155]]]], [[[[0.508, 0.2775], [0.6612, 0.6072]]]]], Ave72300), 
LGlo80134 = global_max_pool2D_layer(Ave72300, Glo80134), 
LCon86278 = concatenate_layer([Glo80134,[[0.6187, 0.9693]]], 1, Con86278), 
LMul44673 = multiply_layer([Fla82710,Con86278], Mul44673), 
exec_layers([LAve14343,LDen56824,LZer97667,LMin96855,LCon40184,LMul69158,LDen50087,LRes71716,LFla82710,LAve72300,LGlo80134,LCon86278,LMul44673],["Ave14343","Den56824","Zer97667","Min96855","Con40184","Mul69158","Den50087","Res71716","Fla82710","Ave72300","Glo80134","Con86278","Mul44673"],Mul44673,"Mul44673")

Actual (Unparsed): [[0.0890007, 0.2755684, 0.1140883, 0.5798560]]

Expected (Unparsed): [[0.08900066000000001,0.2755683629896663,0.11408828000000001,0.5798559978006314]]

Actual:   [[0.0891, 0.2756, 0.1141, 0.5799]]

Expected: [[0.0891, 0.2756, 0.1141, 0.5799]]