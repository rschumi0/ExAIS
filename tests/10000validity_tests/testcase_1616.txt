import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo77429 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con54375 = tf.keras.layers.Input(shape=([1, 2, 1, 3]))
in0Max33325 = tf.keras.layers.Input(shape=([1, 2]))
in1Max33325 = tf.keras.layers.Input(shape=([1, 2]))
in0Con41607 = tf.keras.layers.Input(shape=([1, 2, 1, 3]))
in0Cro24289 = tf.keras.layers.Input(shape=([4, 4, 1, 4]))

Glo77429 = keras.layers.GlobalMaxPool2D(name = 'Glo77429', )(in0Glo77429)
Res81808 = keras.layers.Reshape((1, 1), name = 'Res81808', )(Glo77429)
Ave67433 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave67433', )(Res81808)
Res33956 = keras.layers.Reshape((1, 1, 1), name = 'Res33956', )(Ave67433)
Res26124 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res26124', )(Res33956)
Zer23231 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (0, 0)), name = 'Zer23231', )(Res26124)
Con54375 = keras.layers.Concatenate(axis=4, name = 'Con54375', )([Zer23231,in0Con54375])
Max33325 = keras.layers.Maximum(name = 'Max33325', )([in0Max33325,in1Max33325])
Res46168 = keras.layers.Reshape((1, 2, 1), name = 'Res46168', )(Max33325)
Res13485 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res13485', )(Res46168)
Con41607 = keras.layers.Concatenate(axis=4, name = 'Con41607', )([Res13485,in0Con41607])
Cro24289 = keras.layers.Cropping3D(cropping=((2, 1), (2, 1), (0, 0)), name = 'Cro24289', )(in0Cro24289)
Zer71958 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (0, 0)), name = 'Zer71958', )(Cro24289)
Min70076 = keras.layers.Minimum(name = 'Min70076', )([Con41607,Zer71958])
Add14046 = keras.layers.Add(name = 'Add14046', )([Con54375,Min70076])
model = tf.keras.models.Model(inputs=[in0Glo77429,in0Con54375,in0Max33325,in1Max33325,in0Con41607,in0Cro24289], outputs=Add14046)
in0Glo77429 = tf.constant([[[[1.9546], [1.5983]]]])
in0Con54375 = tf.constant([[[[[0.6451, 0.9937, 0.2659]], [[0.147, 0.0624, 0.8523]]]]])
in0Max33325 = tf.constant([[[0.5133, 0.394]]])
in1Max33325 = tf.constant([[[0.0503, 0.2973]]])
in0Con41607 = tf.constant([[[[[0.5556, 0.063, 0.3246]], [[0.6823, 0.3028, 0.7988]]]]])
in0Cro24289 = tf.constant([[[[[1.3081, 1.3944, 1.7544, 1.3953]], [[1.676, 1.1659, 1.6928, 1.1353]], [[1.5176, 1.6603, 1.136, 1.9578]], [[1.5432, 1.3107, 1.0515, 1.6686]]], [[[1.7784, 1.436, 1.8309, 1.4609]], [[1.5004, 1.9527, 1.3452, 1.1158]], [[1.7307, 1.6508, 1.37, 1.3237]], [[1.8136, 1.5442, 1.0955, 1.2182]]], [[[1.8032, 1.1013, 1.3929, 1.8954]], [[1.346, 1.4782, 1.7411, 1.9026]], [[1.502, 1.2333, 1.2343, 1.4244]], [[1.4754, 1.3831, 1.8928, 1.1677]]], [[[1.5429, 1.0758, 1.5728, 1.7536]], [[1.5592, 1.6045, 1.1358, 1.7605]], [[1.2986, 1.9594, 1.1779, 1.4314]], [[1.5449, 1.6288, 1.5418, 1.4576]]]]])
print (np.array2string(model.predict([in0Glo77429,in0Con54375,in0Max33325,in1Max33325,in0Con41607,in0Cro24289],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add14046.png')

LGlo77429 = global_max_pool2D_layer([[[[1.9546], [1.5983]]]], Glo77429), 
LRes81808 = reshape_layer(Glo77429, [1, 1], Res81808), 
LAve67433 = average_pooling1D_layer(Res81808, 1, Ave67433), 
LRes33956 = reshape_layer(Ave67433, [1, 1, 1], Res33956), 
LRes26124 = reshape_layer(Res33956, [1, 1, 1, 1], Res26124), 
LZer23231 = zero_padding3D_layer(Res26124, 0, 0, 1, 0, 0, 0, Zer23231), 
LCon54375 = concatenate_layer([Zer23231,[[[[[0.6451, 0.9937, 0.2659]], [[0.147, 0.0624, 0.8523]]]]]], 4, Con54375), 
LMax33325 = maximum_layer([[[[0.5133, 0.394]]], [[[0.0503, 0.2973]]]], Max33325), 
LRes46168 = reshape_layer(Max33325, [1, 2, 1], Res46168), 
LRes13485 = reshape_layer(Res46168, [1, 2, 1, 1], Res13485), 
LCon41607 = concatenate_layer([Res13485,[[[[[0.5556, 0.063, 0.3246]], [[0.6823, 0.3028, 0.7988]]]]]], 4, Con41607), 
LCro24289 = cropping3D_layer([[[[[1.3081, 1.3944, 1.7544, 1.3953]], [[1.676, 1.1659, 1.6928, 1.1353]], [[1.5176, 1.6603, 1.136, 1.9578]], [[1.5432, 1.3107, 1.0515, 1.6686]]], [[[1.7784, 1.436, 1.8309, 1.4609]], [[1.5004, 1.9527, 1.3452, 1.1158]], [[1.7307, 1.6508, 1.37, 1.3237]], [[1.8136, 1.5442, 1.0955, 1.2182]]], [[[1.8032, 1.1013, 1.3929, 1.8954]], [[1.346, 1.4782, 1.7411, 1.9026]], [[1.502, 1.2333, 1.2343, 1.4244]], [[1.4754, 1.3831, 1.8928, 1.1677]]], [[[1.5429, 1.0758, 1.5728, 1.7536]], [[1.5592, 1.6045, 1.1358, 1.7605]], [[1.2986, 1.9594, 1.1779, 1.4314]], [[1.5449, 1.6288, 1.5418, 1.4576]]]]], 2, 1, 2, 1, 0, 0, Cro24289), 
LZer71958 = zero_padding3D_layer(Cro24289, 0, 0, 1, 0, 0, 0, Zer71958), 
LMin70076 = minimum_layer([Con41607,Zer71958], Min70076), 
LAdd14046 = add_layer([Con54375,Min70076], Add14046), 
exec_layers([LGlo77429,LRes81808,LAve67433,LRes33956,LRes26124,LZer23231,LCon54375,LMax33325,LRes46168,LRes13485,LCon41607,LCro24289,LZer71958,LMin70076,LAdd14046],["Glo77429","Res81808","Ave67433","Res33956","Res26124","Zer23231","Con54375","Max33325","Res46168","Res13485","Con41607","Cro24289","Zer71958","Min70076","Add14046"],Add14046,"Add14046")

Actual (Unparsed): [[[[[0.0000000, 0.6451000, 0.9937000, 0.2659000]], [[2.3486000, 0.8293000, 0.3652000, 1.6511000]]]]]

Expected (Unparsed): [[[[[0,0.6451,0.9937,0.2659]],[[2.3486,0.8293,0.3652,1.6511]]]]]

Actual:   [[[[[0, 0.6451, 0.9937, 0.2659]], [[2.3486, 0.8293, 0.3652, 1.6511]]]]]

Expected: [[[[[0, 0.6451, 0.9937, 0.2659]], [[2.3486, 0.8293, 0.3652, 1.6511]]]]]