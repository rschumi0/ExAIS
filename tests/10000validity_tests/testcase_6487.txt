import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep52934 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con80836 = tf.keras.layers.Input(shape=([2, 2, 6, 2]))
in0Ave49022 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Ave49022 = tf.keras.layers.Input(shape=([2, 2, 2]))

Sep52934 = keras.layers.SeparableConv2D(4, (1, 2),strides=(2, 2), padding='valid', name = 'Sep52934', )(in0Sep52934)
Res87445 = keras.layers.Reshape((1, 1, 4, 1), name = 'Res87445', )(Sep52934)
Zer12362 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (2, 0)), name = 'Zer12362', )(Res87445)
Con80836 = keras.layers.Concatenate(axis=4, name = 'Con80836', )([Zer12362,in0Con80836])
Ave49022 = keras.layers.Average(name = 'Ave49022', )([in0Ave49022,in1Ave49022])
ReL43499 = keras.layers.ReLU(max_value=3.2476119690043848, negative_slope=3.4764618500305873, threshold=7.223025204457503, name = 'ReL43499', )(Ave49022)
Res94433 = keras.layers.Reshape((2, 2, 2, 1), name = 'Res94433', )(ReL43499)
Con98956 = keras.layers.Conv3D(3, (2, 2, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con98956', )(Res94433)
Zer52788 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (4, 0)), name = 'Zer52788', )(Con98956)
Min27966 = keras.layers.Minimum(name = 'Min27966', )([Con80836,Zer52788])
Res7062 = keras.layers.Reshape((2, 2, 18), name = 'Res7062', )(Min27966)
Res70514 = keras.layers.Reshape((2, 36), name = 'Res70514', )(Res7062)
Zer85196 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer85196', )(Res70514)
model = tf.keras.models.Model(inputs=[in0Sep52934,in0Con80836,in0Ave49022,in1Ave49022], outputs=Zer85196)
w = model.get_layer('Sep52934').get_weights() 
w[0] = np.array([[[[0.0074]], [[0.1608]]]])
w[1] = np.array([[[[0.3812, 0.7226, 0.0264, 0.9705]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep52934').set_weights(w) 
w = model.get_layer('Con98956').get_weights() 
w[0] = np.array([[[[[0.1027, 0.2449, 0.6516]]], [[[0.4202, 0.2936, 0.2129]]]], [[[[0.4604, 0.8126, 0.983]]], [[[0.0383, 0.7437, 0.5344]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con98956').set_weights(w) 
in0Sep52934 = tf.constant([[[[0.9596], [0.9836]], [[0.2164], [0.5171]]]])
in0Con80836 = tf.constant([[[[[0.1366, 0.3603], [0.1729, 0.2484], [0.3881, 0.7174], [0.0912, 0.3107], [0.5204, 0.688], [0.7218, 0.1186]], [[0.087, 0.065], [0.5679, 0.1683], [0.2983, 0.3864], [0.586, 0.9348], [0.9167, 0.0476], [0.1007, 0.9735]]], [[[0.0753, 0.4417], [0.1723, 0.5514], [0.1095, 0.4619], [0.2431, 0.7578], [0.1258, 0.1557], [0.4745, 0.5801]], [[0.8272, 0.1904], [0.4412, 0.8736], [0.0642, 0.0532], [0.7436, 0.5001], [0.6883, 0.5923], [0.6682, 0.1696]]]]])
in0Ave49022 = tf.constant([[[[0.9519, 0.0427], [0.0397, 0.6189]], [[0.8376, 0.1916], [0.2925, 0.7179]]]])
in1Ave49022 = tf.constant([[[[0.8774, 0.8972], [0.2024, 0.8376]], [[0.3111, 0.6794], [0.4746, 0.6492]]]])
print (np.array2string(model.predict([in0Sep52934,in0Con80836,in0Ave49022,in1Ave49022],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer85196.png')

LSep52934 = separable_conv2D_layer([[[[0.9596], [0.9836]], [[0.2164], [0.5171]]]], 1, 2,[[[[[0.0074]], [[0.1608]]]],[[[[0.3812, 0.7226, 0.0264, 0.9705]]]]],[0, 0, 0, 0], 2, 2, false, Sep52934), 
LRes87445 = reshape_layer(Sep52934, [1, 1, 4, 1], Res87445), 
LZer12362 = zero_padding3D_layer(Res87445, 1, 0, 1, 0, 2, 0, Zer12362), 
LCon80836 = concatenate_layer([Zer12362,[[[[[0.1366, 0.3603], [0.1729, 0.2484], [0.3881, 0.7174], [0.0912, 0.3107], [0.5204, 0.688], [0.7218, 0.1186]], [[0.087, 0.065], [0.5679, 0.1683], [0.2983, 0.3864], [0.586, 0.9348], [0.9167, 0.0476], [0.1007, 0.9735]]], [[[0.0753, 0.4417], [0.1723, 0.5514], [0.1095, 0.4619], [0.2431, 0.7578], [0.1258, 0.1557], [0.4745, 0.5801]], [[0.8272, 0.1904], [0.4412, 0.8736], [0.0642, 0.0532], [0.7436, 0.5001], [0.6883, 0.5923], [0.6682, 0.1696]]]]]], 4, Con80836), 
LAve49022 = average_layer([[[[[0.9519, 0.0427], [0.0397, 0.6189]], [[0.8376, 0.1916], [0.2925, 0.7179]]]], [[[[0.8774, 0.8972], [0.2024, 0.8376]], [[0.3111, 0.6794], [0.4746, 0.6492]]]]], Ave49022), 
LReL43499 = relu_layer(Ave49022, 3.2476119690043848, 3.4764618500305873, 7.223025204457503, ReL43499), 
LRes94433 = reshape_layer(ReL43499, [2, 2, 2, 1], Res94433), 
LCon98956 = conv3D_layer(Res94433, 2, 2, 1,[[[[[0.1027, 0.2449, 0.6516]]], [[[0.4202, 0.2936, 0.2129]]]], [[[[0.4604, 0.8126, 0.983]]], [[[0.0383, 0.7437, 0.5344]]]]],[0, 0, 0], 1, 1, 1, true, 1, 1, 1, Con98956), 
LZer52788 = zero_padding3D_layer(Con98956, 0, 0, 0, 0, 4, 0, Zer52788), 
LMin27966 = minimum_layer([Con80836,Zer52788], Min27966), 
LRes7062 = reshape_layer(Min27966, [2, 2, 18], Res7062), 
LRes70514 = reshape_layer(Res7062, [2, 36], Res70514), 
LZer85196 = zero_padding1D_layer(Res70514, 1, 1, Zer85196), 
exec_layers([LSep52934,LRes87445,LZer12362,LCon80836,LAve49022,LReL43499,LRes94433,LCon98956,LZer52788,LMin27966,LRes7062,LRes70514,LZer85196],["Sep52934","Res87445","Zer12362","Con80836","Ave49022","ReL43499","Res94433","Con98956","Zer52788","Min27966","Res7062","Res70514","Zer85196"],Zer85196,"Zer85196")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, -24.1792166, -49.0851807, -54.9740251, -23.6332792, -48.4606434, -55.4491294, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, -13.4826481, -25.3678509, -39.4608011, -12.7856890, -24.0033977, -37.0601250], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, -12.3649628, -12.6415642, -20.1231554, -11.9762940, -12.4535723, -20.2156454, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, -2.4419158, -5.8230301, -15.4932070, -2.3348060, -5.5676144, -14.8136282], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,-24.179216569510146,-49.08518064205141,-54.97402504435345,-23.633279223448053,-48.46064337902347,-55.44912941069194,0,0,0,0,0,0,0,0,0,0,0,0,-13.482648095844274,-25.367850858928474,-39.46080105512056,-12.78568897096878,-24.003397709233603,-37.06012504035993],[0,0,0,0,0,0,0,0,0,0,0,0,-12.364962783933947,-12.641564179481176,-20.123155368259926,-11.976293984072033,-12.453572297387499,-20.21564545378296,0,0,0,0,0,0,0,0,0,0,0,0,-2.4419158337334883,-5.82303006505678,-15.493206984038371,-2.3348060441340457,-5.567614412935033,-14.813628221594392],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]]

Actual:   [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -24.1792, -49.0851, -54.974, -23.6332, -48.4606, -55.4491, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -13.4826, -25.3678, -39.4608, -12.7856, -24.0033, -37.0601], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -12.3649, -12.6415, -20.1231, -11.9762, -12.4535, -20.2156, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2.4419, -5.823, -15.4932, -2.3348, -5.5676, -14.8136], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]]

Expected: [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -24.1792, -49.0851, -54.974, -23.6332, -48.4606, -55.4491, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -13.4826, -25.3678, -39.4608, -12.7856, -24.0033, -37.0601], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -12.3649, -12.6415, -20.1231, -11.9762, -12.4535, -20.2156, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2.4419, -5.823, -15.4932, -2.3348, -5.5676, -14.8136], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]]