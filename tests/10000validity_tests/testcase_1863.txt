import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub48836 = tf.keras.layers.Input(shape=([2, 3]))
in1Sub48836 = tf.keras.layers.Input(shape=([2, 3]))

Sub48836 = keras.layers.Subtract(name = 'Sub48836', )([in0Sub48836,in1Sub48836])
Lay53439 = keras.layers.LayerNormalization(axis=2, epsilon=2.090540020629649, name = 'Lay53439', )(Sub48836)
Den28461 = keras.layers.Dense(3,name = 'Den28461', )(Lay53439)
model = tf.keras.models.Model(inputs=[in0Sub48836,in1Sub48836], outputs=Den28461)
w = model.get_layer('Den28461').get_weights() 
w[0] = np.array([[0.4511, 0.4684, 0.2791], [0.9565, 0.6259, 0.7287], [0.8217, 0.3965, 0.5472]])
w[1] = np.array([0.5412, 0.9824, 0.3555])
model.get_layer('Den28461').set_weights(w) 
in0Sub48836 = tf.constant([[[0.8278, 0.431, 0.1044], [0.6125, 0.4099, 0.2333]]])
in1Sub48836 = tf.constant([[[0.0387, 0.886, 0.5407], [0.5835, 0.7037, 0.4145]]])
print (np.array2string(model.predict([in0Sub48836,in1Sub48836],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den28461.png')

LSub48836 = subtract_layer([[[0.8278, 0.431, 0.1044], [0.6125, 0.4099, 0.2333]]], [[[0.0387, 0.886, 0.5407], [0.5835, 0.7037, 0.4145]]], Sub48836), 
LLay53439 = layer_normalization_layer(Sub48836, 2, 2.090540020629649, Lay53439), 
LDen28461 = dense_layer(Lay53439, [[0.4511, 0.4684, 0.2791], [0.9565, 0.6259, 0.7287], [0.8217, 0.3965, 0.5472]],[0.5412, 0.9824, 0.3555], Den28461), 
exec_layers([LSub48836,LLay53439,LDen28461],["Sub48836","Lay53439","Den28461"],Den28461,"Den28461")

Actual (Unparsed): [[[0.3090718, 0.9584201, 0.1648929], [0.4823814, 0.9682687, 0.3045552]]]

Expected (Unparsed): [[[0.30907179712237287,0.9584200524976575,0.16489289636548587],[0.48238142623068636,0.9682686558922254,0.3045552203948083]]]

Actual:   [[[0.3091, 0.9585, 0.1649], [0.4824, 0.9683, 0.3046]]]

Expected: [[[0.3091, 0.9585, 0.1649], [0.4824, 0.9683, 0.3046]]]