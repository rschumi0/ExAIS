import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul45681 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul45681 = tf.keras.layers.Input(shape=([1, 2]))

Mul45681 = keras.layers.Multiply(name = 'Mul45681', )([in0Mul45681,in1Mul45681])
GRU66025 = keras.layers.GRU(3,reset_after=False, recurrent_activation='sigmoid', name = 'GRU66025', )(Mul45681)
model = tf.keras.models.Model(inputs=[in0Mul45681,in1Mul45681], outputs=GRU66025)
w = model.get_layer('GRU66025').get_weights() 
w[0] = np.array([[5, 10, 8, 5, 6, 10, 9, 9, 5], [3, 3, 9, 8, 6, 5, 3, 4, 5]])
w[1] = np.array([[9, 4, 1, 3, 8, 8, 2, 1, 1], [7, 5, 8, 2, 5, 9, 8, 7, 10], [1, 2, 10, 5, 5, 2, 10, 10, 10]])
w[2] = np.array([9, 1, 4, 4, 5, 3, 3, 5, 5])
model.get_layer('GRU66025').set_weights(w) 
in0Mul45681 = tf.constant([[[0.5613, 0.7998]]])
in1Mul45681 = tf.constant([[[0.471, 0.5944]]])
print (np.array2string(model.predict([in0Mul45681,in1Mul45681],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='GRU66025.png')

LMul45681 = multiply_layer([[[[0.5613, 0.7998]]], [[[0.471, 0.5944]]]], Mul45681), 
LGRU66025 = gru_layer(Mul45681,[[5, 10, 8, 5, 6, 10, 9, 9, 5], [3, 3, 9, 8, 6, 5, 3, 4, 5]],[[9, 4, 1, 3, 8, 8, 2, 1, 1], [7, 5, 8, 2, 5, 9, 8, 7, 10], [1, 2, 10, 5, 5, 2, 10, 10, 10]],[9, 1, 4, 4, 5, 3, 3, 5, 5], false, GRU66025), 
exec_layers([LMul45681,LGRU66025],["Mul45681","GRU66025"],GRU66025,"GRU66025")

Actual (Unparsed): [[0.0000079, 0.0062437, 0.0000306]]

Expected (Unparsed): [[7.904524679853335e-6,0.006243654536481014,3.062728856042987e-5]]

Actual:   [[0, 0.0063, 0.0001]]

Expected: [[0, 0.0063, 0.0001]]