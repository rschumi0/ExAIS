import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub46124 = tf.keras.layers.Input(shape=([2, 3, 3, 3]))
in1Sub46124 = tf.keras.layers.Input(shape=([2, 3, 3, 3]))

Sub46124 = keras.layers.Subtract(name = 'Sub46124', )([in0Sub46124,in1Sub46124])
Den44894 = keras.layers.Dense(2,name = 'Den44894', )(Sub46124)
model = tf.keras.models.Model(inputs=[in0Sub46124,in1Sub46124], outputs=Den44894)
w = model.get_layer('Den44894').get_weights() 
w[0] = np.array([[0.3045, 0.1388], [0.6545, 0.1654], [0.7949, 0.1245]])
w[1] = np.array([0.7351, 0.0223])
model.get_layer('Den44894').set_weights(w) 
in0Sub46124 = tf.constant([[[[[0.0993, 0.5274, 0.1632], [0.1377, 0.7076, 0.6238], [0.811, 0.1756, 0.129]], [[0.7031, 0.9547, 0.3928], [0.2822, 0.9125, 0.3845], [0.5847, 0.1327, 0.8256]], [[0.1815, 0.5439, 0.812], [0.968, 0.5247, 0.3542], [0.7916, 0.2007, 0.8352]]], [[[0.3195, 0.0783, 0.4125], [0.4105, 0.5562, 0.5906], [0.2597, 0.6554, 0.9597]], [[0.8416, 0.0189, 0.2535], [0.4668, 0.8083, 0.9638], [0.1365, 0.278, 0.3964]], [[0.0665, 0.9099, 0.9816], [0.2251, 0.2368, 0.4712], [0.3221, 0.5507, 0.7579]]]]])
in1Sub46124 = tf.constant([[[[[0.9153, 0.6963, 0.0225], [0.0564, 0.4676, 0.3276], [0.6251, 0.4533, 0.1041]], [[0.4673, 0.5944, 0.081], [0.7236, 0.9037, 0.3203], [0.724, 0.2235, 0.5211]], [[0.2449, 0.9434, 0.5945], [0.644, 0.5507, 0.4791], [0.2008, 0.4265, 0.9947]]], [[[0.5877, 0.7385, 0.6023], [0.591, 0.6714, 0.9764], [0.4975, 0.9679, 0.2808]], [[0.2763, 0.3265, 0.1351], [0.333, 0.0603, 0.4424], [0.0836, 0.1753, 0.8483]], [[0.39, 0.1122, 0.9484], [0.2245, 0.3267, 0.0227], [0.5541, 0.1063, 0.6143]]]]])
print (np.array2string(model.predict([in0Sub46124,in1Sub46124],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den44894.png')

LSub46124 = subtract_layer([[[[[0.0993, 0.5274, 0.1632], [0.1377, 0.7076, 0.6238], [0.811, 0.1756, 0.129]], [[0.7031, 0.9547, 0.3928], [0.2822, 0.9125, 0.3845], [0.5847, 0.1327, 0.8256]], [[0.1815, 0.5439, 0.812], [0.968, 0.5247, 0.3542], [0.7916, 0.2007, 0.8352]]], [[[0.3195, 0.0783, 0.4125], [0.4105, 0.5562, 0.5906], [0.2597, 0.6554, 0.9597]], [[0.8416, 0.0189, 0.2535], [0.4668, 0.8083, 0.9638], [0.1365, 0.278, 0.3964]], [[0.0665, 0.9099, 0.9816], [0.2251, 0.2368, 0.4712], [0.3221, 0.5507, 0.7579]]]]], [[[[[0.9153, 0.6963, 0.0225], [0.0564, 0.4676, 0.3276], [0.6251, 0.4533, 0.1041]], [[0.4673, 0.5944, 0.081], [0.7236, 0.9037, 0.3203], [0.724, 0.2235, 0.5211]], [[0.2449, 0.9434, 0.5945], [0.644, 0.5507, 0.4791], [0.2008, 0.4265, 0.9947]]], [[[0.5877, 0.7385, 0.6023], [0.591, 0.6714, 0.9764], [0.4975, 0.9679, 0.2808]], [[0.2763, 0.3265, 0.1351], [0.333, 0.0603, 0.4424], [0.0836, 0.1753, 0.8483]], [[0.39, 0.1122, 0.9484], [0.2245, 0.3267, 0.0227], [0.5541, 0.1063, 0.6143]]]]], Sub46124), 
LDen44894 = dense_layer(Sub46124, [[0.3045, 0.1388], [0.6545, 0.1654], [0.7949, 0.1245]],[0.7351, 0.0223], Den44894), 
exec_layers([LSub46124,LDen44894],["Sub46124","Den44894"],Den44894,"Den44894")

Actual (Unparsed): [[[[[0.4879254, -0.1013797], [1.1523852, 0.1101573], [0.6297449, 0.0052714]], [[1.2905673, 0.1534418], [0.6574859, -0.0295179], [0.8753016, 0.0258571]], [[0.6272127, -0.0254985], [0.7174580, 0.0474207], [0.6404259, 0.0470980]]], [[[0.0704602, -0.1477533], [0.2980669, -0.0698396], [0.9978162, 0.0221289]], [[0.8000258, 0.0646274], [1.6798690, 0.2295049], [0.4592099, -0.0096324]], [[1.1850796, 0.1134712], [1.0329558, 0.0633521], [1.0694634, 0.0814804]]]]]

Expected (Unparsed): [[[[[0.48792537999999996,-0.10137971000000001],[1.1523852300000001,0.11015734],[0.62974491,0.005271390000000022]],[[1.29056727,0.15344175999999998],[0.65748588,-0.0295179],[0.8753016000000001,0.025857090000000003]],[[0.6272127000000001,-0.025498469999999992],[0.71745799,0.04742075000000002],[0.64042595,0.04709797]]],[[[0.07046017999999998,-0.14775333999999998],[0.29806692999999995,-0.06983958],[0.99781626,0.02212891]],[[0.8000258100000001,0.06462740000000002],[1.6798689599999999,0.22950494],[0.45920989,-0.00963245]],[[1.18507958,0.11347117999999999],[1.0329558,0.06335207],[1.06946344,0.08148036]]]]]

Actual:   [[[[[0.488, -0.1013], [1.1524, 0.1102], [0.6298, 0.0053]], [[1.2906, 0.1535], [0.6575, -0.0295], [0.8754, 0.0259]], [[0.6273, -0.0254], [0.7175, 0.0475], [0.6405, 0.0471]]], [[[0.0705, -0.1477], [0.2981, -0.0698], [0.9979, 0.0222]], [[0.8001, 0.0647], [1.6799, 0.2296], [0.4593, -0.0096]], [[1.1851, 0.1135], [1.033, 0.0634], [1.0695, 0.0815]]]]]

Expected: [[[[[0.488, -0.1013], [1.1524, 0.1102], [0.6298, 0.0053]], [[1.2906, 0.1535], [0.6575, -0.0295], [0.8754, 0.0259]], [[0.6273, -0.0254], [0.7175, 0.0475], [0.6405, 0.0471]]], [[[0.0705, -0.1477], [0.2981, -0.0698], [0.9979, 0.0222]], [[0.8001, 0.0647], [1.6799, 0.2296], [0.4593, -0.0096]], [[1.1851, 0.1135], [1.033, 0.0634], [1.0695, 0.0815]]]]]