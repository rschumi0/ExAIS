import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave1161 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Ave1161 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con97949 = tf.keras.layers.Input(shape=([2, 11]))
in0Con93478 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con16178 = tf.keras.layers.Input(shape=([2, 8]))
in0Up_42977 = tf.keras.layers.Input(shape=([1, 3, 4]))
in0Mul90001 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul90001 = tf.keras.layers.Input(shape=([1, 1]))
in0Con80672 = tf.keras.layers.Input(shape=([2, 11]))

Ave1161 = keras.layers.Average(name = 'Ave1161', )([in0Ave1161,in1Ave1161])
Res89161 = keras.layers.Reshape((1, 1), name = 'Res89161', )(Ave1161)
Zer75027 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer75027', )(Res89161)
Con97949 = keras.layers.Concatenate(axis=2, name = 'Con97949', )([Zer75027,in0Con97949])
Con93478 = keras.layers.Conv2D(4, (1, 1),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con93478', )(in0Con93478)
Res9460 = keras.layers.Reshape((2, 4), name = 'Res9460', )(Con93478)
Ave11504 = keras.layers.AveragePooling1D(pool_size=(2), name = 'Ave11504', )(Res9460)
Zer12832 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer12832', )(Ave11504)
Con16178 = keras.layers.Concatenate(axis=2, name = 'Con16178', )([Zer12832,in0Con16178])
Up_42977 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_42977', )(in0Up_42977)
Res36093 = keras.layers.Reshape((2, 12), name = 'Res36093', )(Up_42977)
Mul90001 = keras.layers.Multiply(name = 'Mul90001', )([in0Mul90001,in1Mul90001])
Zer40915 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer40915', )(Mul90001)
Con80672 = keras.layers.Concatenate(axis=2, name = 'Con80672', )([Zer40915,in0Con80672])
Sub69844 = keras.layers.Subtract(name = 'Sub69844', )([Res36093,Con80672])
Min6208 = keras.layers.Minimum(name = 'Min6208', )([Con16178,Sub69844])
Sub97517 = keras.layers.Subtract(name = 'Sub97517', )([Con97949,Min6208])
model = tf.keras.models.Model(inputs=[in0Ave1161,in1Ave1161,in0Con97949,in0Con93478,in0Con16178,in0Up_42977,in0Mul90001,in1Mul90001,in0Con80672], outputs=Sub97517)
w = model.get_layer('Con93478').get_weights() 
w[0] = np.array([[[[0.508, 0.1459, 0.5263, 0.2252]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con93478').set_weights(w) 
in0Ave1161 = tf.constant([[[[0.5437]]]])
in1Ave1161 = tf.constant([[[[0.2876]]]])
in0Con97949 = tf.constant([[[0.2815, 0.4213, 0.5711, 0.7705, 0.0161, 0.4293, 0.1633, 0.1832, 0.8541, 0.8179, 0.4346], [0.3845, 0.0904, 0.2405, 0.163, 0.2331, 0.8594, 0.3719, 0.1731, 0.8283, 0.1864, 0.7847]]])
in0Con93478 = tf.constant([[[[0.3593]], [[0.2732]]]])
in0Con16178 = tf.constant([[[0.1403, 0.7405, 0.4917, 0.7103, 0.4329, 0.4541, 0.7089, 0.8728], [0.6428, 0.2401, 0.5623, 0.3089, 0.4572, 0.3776, 0.0737, 0.3855]]])
in0Up_42977 = tf.constant([[[[1.75, 1.5469, 1.4523, 1.0607], [1.7175, 1.5845, 1.3057, 1.0913], [1.9373, 1.2342, 1.4086, 1.8014]]]])
in0Mul90001 = tf.constant([[[0.5914]]])
in1Mul90001 = tf.constant([[[0.9995]]])
in0Con80672 = tf.constant([[[0.1818, 0.7845, 0.6361, 0.9062, 0.8299, 0.6304, 0.3443, 0.8591, 0.0109, 0.4314, 0.9145], [0.9358, 0.3757, 0.6962, 0.1997, 0.7538, 0.3582, 0.3111, 0.2364, 0.7197, 0.9559, 0.7534]]])
print (np.array2string(model.predict([in0Ave1161,in1Ave1161,in0Con97949,in0Con93478,in0Con16178,in0Up_42977,in0Mul90001,in1Mul90001,in0Con80672],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub97517.png')

LAve1161 = average_layer([[[[[0.5437]]]], [[[[0.2876]]]]], Ave1161), 
LRes89161 = reshape_layer(Ave1161, [1, 1], Res89161), 
LZer75027 = zero_padding1D_layer(Res89161, 1, 0, Zer75027), 
LCon97949 = concatenate_layer([Zer75027,[[[0.2815, 0.4213, 0.5711, 0.7705, 0.0161, 0.4293, 0.1633, 0.1832, 0.8541, 0.8179, 0.4346], [0.3845, 0.0904, 0.2405, 0.163, 0.2331, 0.8594, 0.3719, 0.1731, 0.8283, 0.1864, 0.7847]]]], 2, Con97949), 
LCon93478 = conv2D_layer([[[[0.3593]], [[0.2732]]]], 1, 1,[[[[0.508, 0.1459, 0.5263, 0.2252]]]],[0, 0, 0, 0], 1, 1, true, 1, 1, Con93478), 
LRes9460 = reshape_layer(Con93478, [2, 4], Res9460), 
LAve11504 = average_pooling1D_layer(Res9460, 2, Ave11504), 
LZer12832 = zero_padding1D_layer(Ave11504, 1, 0, Zer12832), 
LCon16178 = concatenate_layer([Zer12832,[[[0.1403, 0.7405, 0.4917, 0.7103, 0.4329, 0.4541, 0.7089, 0.8728], [0.6428, 0.2401, 0.5623, 0.3089, 0.4572, 0.3776, 0.0737, 0.3855]]]], 2, Con16178), 
LUp_42977 = up_sampling2D_layer([[[[1.75, 1.5469, 1.4523, 1.0607], [1.7175, 1.5845, 1.3057, 1.0913], [1.9373, 1.2342, 1.4086, 1.8014]]]], 2, 1, Up_42977), 
LRes36093 = reshape_layer(Up_42977, [2, 12], Res36093), 
LMul90001 = multiply_layer([[[[0.5914]]], [[[0.9995]]]], Mul90001), 
LZer40915 = zero_padding1D_layer(Mul90001, 1, 0, Zer40915), 
LCon80672 = concatenate_layer([Zer40915,[[[0.1818, 0.7845, 0.6361, 0.9062, 0.8299, 0.6304, 0.3443, 0.8591, 0.0109, 0.4314, 0.9145], [0.9358, 0.3757, 0.6962, 0.1997, 0.7538, 0.3582, 0.3111, 0.2364, 0.7197, 0.9559, 0.7534]]]], 2, Con80672), 
LSub69844 = subtract_layer(Res36093,Con80672, Sub69844), 
LMin6208 = minimum_layer([Con16178,Sub69844], Min6208), 
LSub97517 = subtract_layer(Con97949,Min6208, Sub97517), 
exec_layers([LAve1161,LRes89161,LZer75027,LCon97949,LCon93478,LRes9460,LAve11504,LZer12832,LCon16178,LUp_42977,LRes36093,LMul90001,LZer40915,LCon80672,LSub69844,LMin6208,LSub97517],["Ave1161","Res89161","Zer75027","Con97949","Con93478","Res9460","Ave11504","Zer12832","Con16178","Up_42977","Res36093","Mul90001","Zer40915","Con80672","Sub69844","Min6208","Sub97517"],Sub97517,"Sub97517")

Actual (Unparsed): [[[0.0000000, 0.2815000, 0.4213000, 0.5711000, 0.6302000, -0.7244000, -0.0624000, -0.5470000, -0.2497000, 0.4000000, 0.1090000, -0.4382000], [0.2549950, 0.3383591, -0.0760424, 0.1692805, -0.4798000, -0.0070000, 0.2970999, 0.0630000, -0.2841000, 0.4507000, 0.1127000, 0.3992000]]]

Expected (Unparsed): [[[0,0.2815,0.4213,0.5711,0.6302,-0.7244,-0.06240000000000001,-0.547,-0.2497,0.39999999999999997,0.10899999999999999,-0.43820000000000003],[0.25499499999999997,0.338359125,-0.07604237500000001,0.1692805,-0.4798,-0.007000000000000006,0.29710000000000003,0.063,-0.2841,0.45070000000000005,0.11270000000000001,0.39919999999999994]]]

Actual:   [[[0, 0.2815, 0.4213, 0.5711, 0.6302, -0.7244, -0.0624, -0.547, -0.2497, 0.4, 0.109, -0.4382], [0.255, 0.3384, -0.076, 0.1693, -0.4798, -0.007, 0.2971, 0.063, -0.2841, 0.4507, 0.1127, 0.3992]]]

Expected: [[[0, 0.2815, 0.4213, 0.5711, 0.6302, -0.7244, -0.0624, -0.547, -0.2497, 0.4, 0.109, -0.4382], [0.255, 0.3384, -0.076, 0.1693, -0.4798, -0.007, 0.2972, 0.063, -0.2841, 0.4508, 0.1128, 0.3992]]]