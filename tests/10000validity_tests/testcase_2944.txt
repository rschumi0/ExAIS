import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0ELU13189 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Cro78354 = tf.keras.layers.Input(shape=([3, 3]))
in0Con63708 = tf.keras.layers.Input(shape=([2, 1]))

ELU13189 = keras.layers.ELU(alpha=5.367997286299225, name = 'ELU13189', input_shape=(2, 2, 2))(in0ELU13189)
Res40639 = keras.layers.Reshape((2, 4), name = 'Res40639', )(ELU13189)
Glo23423 = keras.layers.GlobalMaxPool1D(name = 'Glo23423', )(Res40639)
Res3706 = keras.layers.Reshape((4, 1), name = 'Res3706', )(Glo23423)
Res63671 = keras.layers.Reshape((4, 1, 1), name = 'Res63671', )(Res3706)
Res81660 = keras.layers.Reshape((4, 1, 1, 1), name = 'Res81660', )(Res63671)
Con32595 = keras.layers.Conv3D(4, (1, 1, 1),strides=(3, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con32595', )(Res81660)
Res31645 = keras.layers.Reshape((2, 1, 4), name = 'Res31645', )(Con32595)
Res19940 = keras.layers.Reshape((2, 4), name = 'Res19940', )(Res31645)
Cro78354 = keras.layers.Cropping1D(cropping=((2, 0)), name = 'Cro78354', )(in0Cro78354)
Zer59840 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer59840', )(Cro78354)
Con63708 = keras.layers.Concatenate(axis=2, name = 'Con63708', )([Zer59840,in0Con63708])
Ave7806 = keras.layers.Average(name = 'Ave7806', )([Res19940,Con63708])
model = tf.keras.models.Model(inputs=[in0ELU13189,in0Cro78354,in0Con63708], outputs=Ave7806)
w = model.get_layer('Con32595').get_weights() 
w[0] = np.array([[[[[0.381, 0.6492, 0.7617, 0.6703]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con32595').set_weights(w) 
in0ELU13189 = tf.constant([[[[0.9297, 0.5696], [0.1187, 0.4989]], [[0.8192, 0.0723], [0.3108, 0.1216]]]])
in0Cro78354 = tf.constant([[[1.2963, 1.8478, 1.7088], [1.7466, 1.1214, 1.0818], [1.2062, 1.4393, 1.1721]]])
in0Con63708 = tf.constant([[[0.7472], [0.9052]]])
print (np.array2string(model.predict([in0ELU13189,in0Cro78354,in0Con63708],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave7806.png')

LELU13189 = elu_layer([[[[0.9297, 0.5696], [0.1187, 0.4989]], [[0.8192, 0.0723], [0.3108, 0.1216]]]], 5.367997286299225, ELU13189), 
LRes40639 = reshape_layer(ELU13189, [2, 4], Res40639), 
LGlo23423 = global_max_pool1D_layer(Res40639, Glo23423), 
LRes3706 = reshape_layer(Glo23423, [4, 1], Res3706), 
LRes63671 = reshape_layer(Res3706, [4, 1, 1], Res63671), 
LRes81660 = reshape_layer(Res63671, [4, 1, 1, 1], Res81660), 
LCon32595 = conv3D_layer(Res81660, 1, 1, 1,[[[[[0.381, 0.6492, 0.7617, 0.6703]]]]],[0, 0, 0, 0], 3, 1, 1, false, 1, 1, 1, Con32595), 
LRes31645 = reshape_layer(Con32595, [2, 1, 4], Res31645), 
LRes19940 = reshape_layer(Res31645, [2, 4], Res19940), 
LCro78354 = cropping1D_layer([[[1.2963, 1.8478, 1.7088], [1.7466, 1.1214, 1.0818], [1.2062, 1.4393, 1.1721]]], 2, 0, Cro78354), 
LZer59840 = zero_padding1D_layer(Cro78354, 1, 0, Zer59840), 
LCon63708 = concatenate_layer([Zer59840,[[[0.7472], [0.9052]]]], 2, Con63708), 
LAve7806 = average_layer([Res19940,Con63708], Ave7806), 
exec_layers([LELU13189,LRes40639,LGlo23423,LRes3706,LRes63671,LRes81660,LCon32595,LRes31645,LRes19940,LCro78354,LZer59840,LCon63708,LAve7806],["ELU13189","Res40639","Glo23423","Res3706","Res63671","Res81660","Con32595","Res31645","Res19940","Cro78354","Zer59840","Con63708","Ave7806"],Ave7806,"Ave7806")

Actual (Unparsed): [[[0.1771079, 0.3017806, 0.3540763, 0.6851890], [0.6981405, 0.8815929, 0.7760560, 0.6198063]]]

Expected (Unparsed): [[[0.17710784999999998,0.30178062,0.354076245,0.685188955],[0.6981404499999999,0.88159294,0.7760560649999999,0.619806335]]]

Actual:   [[[0.1772, 0.3018, 0.3541, 0.6852], [0.6982, 0.8816, 0.7761, 0.6199]]]

Expected: [[[0.1772, 0.3018, 0.3541, 0.6852], [0.6982, 0.8816, 0.7761, 0.6199]]]