import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave39005 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Ave39005 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Max54342 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con88186 = tf.keras.layers.Input(shape=([3, 6]))

Ave39005 = keras.layers.Average(name = 'Ave39005', )([in0Ave39005,in1Ave39005])
Thr94187 = keras.layers.ThresholdedReLU(theta=7.209804051363862, name = 'Thr94187', )(Ave39005)
Den43900 = keras.layers.Dense(2,name = 'Den43900', )(Thr94187)
Res43791 = keras.layers.Reshape((1, 2, 4), name = 'Res43791', )(Den43900)
Res68248 = keras.layers.Reshape((1, 8), name = 'Res68248', )(Res43791)
Zer11447 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer11447', )(Res68248)
Max54342 = keras.layers.MaxPool2D(pool_size=(1, 2), name = 'Max54342', )(in0Max54342)
Res77592 = keras.layers.Reshape((1, 2), name = 'Res77592', )(Max54342)
Zer8215 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer8215', )(Res77592)
Con88186 = keras.layers.Concatenate(axis=2, name = 'Con88186', )([Zer8215,in0Con88186])
Max65000 = keras.layers.Maximum(name = 'Max65000', )([Zer11447,Con88186])
model = tf.keras.models.Model(inputs=[in0Ave39005,in1Ave39005,in0Max54342,in0Con88186], outputs=Max65000)
w = model.get_layer('Den43900').get_weights() 
w[0] = np.array([[0.0103, 0.8529]])
w[1] = np.array([0.891, 0.3559])
model.get_layer('Den43900').set_weights(w) 
in0Ave39005 = tf.constant([[[[[0.2554], [0.7062]], [[0.2477], [0.3458]]]]])
in1Ave39005 = tf.constant([[[[[0.1435], [0.3597]], [[0.3274], [0.9967]]]]])
in0Max54342 = tf.constant([[[[1.8787, 1.9405], [1.9773, 1.0653]]]])
in0Con88186 = tf.constant([[[0.8686, 0.9766, 0.2827, 0.4936, 0.5509, 0.4225], [0.1865, 0.9634, 0.4912, 0.0433, 0.0713, 0.2229], [0.2554, 0.8113, 0.229, 0.9908, 0.3636, 0.8476]]])
print (np.array2string(model.predict([in0Ave39005,in1Ave39005,in0Max54342,in0Con88186],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max65000.png')

LAve39005 = average_layer([[[[[[0.2554], [0.7062]], [[0.2477], [0.3458]]]]], [[[[[0.1435], [0.3597]], [[0.3274], [0.9967]]]]]], Ave39005), 
LThr94187 = thresholded_relu_layer(Ave39005, 7.209804051363862, Thr94187), 
LDen43900 = dense_layer(Thr94187, [[0.0103, 0.8529]],[0.891, 0.3559], Den43900), 
LRes43791 = reshape_layer(Den43900, [1, 2, 4], Res43791), 
LRes68248 = reshape_layer(Res43791, [1, 8], Res68248), 
LZer11447 = zero_padding1D_layer(Res68248, 2, 0, Zer11447), 
LMax54342 = max_pool2D_layer([[[[1.8787, 1.9405], [1.9773, 1.0653]]]], 1, 2, Max54342), 
LRes77592 = reshape_layer(Max54342, [1, 2], Res77592), 
LZer8215 = zero_padding1D_layer(Res77592, 1, 1, Zer8215), 
LCon88186 = concatenate_layer([Zer8215,[[[0.8686, 0.9766, 0.2827, 0.4936, 0.5509, 0.4225], [0.1865, 0.9634, 0.4912, 0.0433, 0.0713, 0.2229], [0.2554, 0.8113, 0.229, 0.9908, 0.3636, 0.8476]]]], 2, Con88186), 
LMax65000 = maximum_layer([Zer11447,Con88186], Max65000), 
exec_layers([LAve39005,LThr94187,LDen43900,LRes43791,LRes68248,LZer11447,LMax54342,LRes77592,LZer8215,LCon88186,LMax65000],["Ave39005","Thr94187","Den43900","Res43791","Res68248","Zer11447","Max54342","Res77592","Zer8215","Con88186","Max65000"],Max65000,"Max65000")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.8686000, 0.9766000, 0.2827000, 0.4936000, 0.5509000, 0.4225000], [1.9773000, 1.9405000, 0.1865000, 0.9634000, 0.4912000, 0.0433000, 0.0713000, 0.2229000], [0.8910000, 0.3559000, 0.8910000, 0.8113000, 0.8910000, 0.9908000, 0.8910000, 0.8476000]]]

Expected (Unparsed): [[[0,0,0.8686,0.9766,0.2827,0.4936,0.5509,0.4225],[1.9773,1.9405,0.1865,0.9634,0.4912,0.0433,0.0713,0.2229],[0.891,0.3559,0.891,0.8113,0.891,0.9908,0.891,0.8476]]]

Actual:   [[[0, 0, 0.8686, 0.9766, 0.2827, 0.4936, 0.5509, 0.4225], [1.9773, 1.9405, 0.1865, 0.9634, 0.4912, 0.0433, 0.0713, 0.2229], [0.891, 0.3559, 0.891, 0.8113, 0.891, 0.9908, 0.891, 0.8476]]]

Expected: [[[0, 0, 0.8686, 0.9766, 0.2827, 0.4936, 0.5509, 0.4225], [1.9773, 1.9405, 0.1865, 0.9634, 0.4912, 0.0433, 0.0713, 0.2229], [0.891, 0.3559, 0.891, 0.8113, 0.891, 0.9908, 0.891, 0.8476]]]