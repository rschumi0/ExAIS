import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro11824 = tf.keras.layers.Input(shape=([3, 1]))

Cro11824 = keras.layers.Cropping1D(cropping=((2, 0)), name = 'Cro11824', )(in0Cro11824)
Bat11575 = keras.layers.BatchNormalization(axis=1, epsilon=0.4417582251463944,  name = 'Bat11575', )(Cro11824)
model = tf.keras.models.Model(inputs=[in0Cro11824], outputs=Bat11575)
w = model.get_layer('Bat11575').get_weights() 
w[0] = np.array([0.615])
w[1] = np.array([0.7317])
w[2] = np.array([0.2801])
w[3] = np.array([0.6104])
model.get_layer('Bat11575').set_weights(w) 
in0Cro11824 = tf.constant([[[1.3974], [1.0197], [1.1353]]])
print (np.array2string(model.predict([in0Cro11824],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat11575.png')

LCro11824 = cropping1D_layer([[[1.3974], [1.0197], [1.1353]]], 2, 0, Cro11824), 
LBat11575 = batch_normalization_layer(Cro11824, 1, 0.4417582251463944, [0.615], [0.7317], [0.2801], [0.6104], Bat11575), 
exec_layers([LCro11824,LBat11575],["Cro11824","Bat11575"],Bat11575,"Bat11575")

Actual (Unparsed): [[[1.2444460]]]

Expected (Unparsed): [[[1.244445999547271]]]

Actual:   [[[1.2445]]]

Expected: [[[1.2445]]]