import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub65747 = tf.keras.layers.Input(shape=([2, 3]))
in1Sub65747 = tf.keras.layers.Input(shape=([2, 3]))
in0Sep77881 = tf.keras.layers.Input(shape=([1, 1]))
in0Con30798 = tf.keras.layers.Input(shape=([3, 1]))
in0Sub89066 = tf.keras.layers.Input(shape=([2]))
in1Sub89066 = tf.keras.layers.Input(shape=([2]))
in0Con36518 = tf.keras.layers.Input(shape=([7]))

Sub65747 = keras.layers.Subtract(name = 'Sub65747', )([in0Sub65747,in1Sub65747])
Zer81677 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer81677', )(Sub65747)
Sep77881 = keras.layers.SeparableConv1D(2, (1),strides=(1), padding='same', name = 'Sep77881', )(in0Sep77881)
Zer26168 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer26168', )(Sep77881)
Con30798 = keras.layers.Concatenate(axis=2, name = 'Con30798', )([Zer26168,in0Con30798])
Sub45328 = keras.layers.Subtract(name = 'Sub45328', )([Zer81677,Con30798])
Fla1491 = keras.layers.Flatten(name = 'Fla1491', )(Sub45328)
Sub89066 = keras.layers.Subtract(name = 'Sub89066', )([in0Sub89066,in1Sub89066])
Con36518 = keras.layers.Concatenate(axis=1, name = 'Con36518', )([Sub89066,in0Con36518])
Mul73805 = keras.layers.Multiply(name = 'Mul73805', )([Fla1491,Con36518])
model = tf.keras.models.Model(inputs=[in0Sub65747,in1Sub65747,in0Sep77881,in0Con30798,in0Sub89066,in1Sub89066,in0Con36518], outputs=Mul73805)
w = model.get_layer('Sep77881').get_weights() 
w[0] = np.array([[[0.9859]]])
w[1] = np.array([[[0.5954, 0.6476]]])
w[2] = np.array([0, 0])
model.get_layer('Sep77881').set_weights(w) 
in0Sub65747 = tf.constant([[[0.1924, 0.5709, 0.599], [0.6605, 0.7647, 0.6214]]])
in1Sub65747 = tf.constant([[[0.5964, 0.9269, 0.5953], [0.7637, 0.2007, 0.5035]]])
in0Sep77881 = tf.constant([[[0.883]]])
in0Con30798 = tf.constant([[[0.0956], [0.9046], [0.1606]]])
in0Sub89066 = tf.constant([[0.7811, 0.1901]])
in1Sub89066 = tf.constant([[0.7602, 0.6033]])
in0Con36518 = tf.constant([[0.3212, 0.1865, 0.0773, 0.6167, 0.7175, 0.263, 0.7524]])
print (np.array2string(model.predict([in0Sub65747,in1Sub65747,in0Sep77881,in0Con30798,in0Sub89066,in1Sub89066,in0Con36518],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul73805.png')

LSub65747 = subtract_layer([[[0.1924, 0.5709, 0.599], [0.6605, 0.7647, 0.6214]]], [[[0.5964, 0.9269, 0.5953], [0.7637, 0.2007, 0.5035]]], Sub65747), 
LZer81677 = zero_padding1D_layer(Sub65747, 1, 0, Zer81677), 
LSep77881 = separable_conv1D_layer([[[0.883]]], 1,[[[[0.9859]]],[[[0.5954, 0.6476]]]],[0, 0], 1, true, Sep77881), 
LZer26168 = zero_padding1D_layer(Sep77881, 1, 1, Zer26168), 
LCon30798 = concatenate_layer([Zer26168,[[[0.0956], [0.9046], [0.1606]]]], 2, Con30798), 
LSub45328 = subtract_layer(Zer81677,Con30798, Sub45328), 
LFla1491 = flatten_layer(Sub45328, Fla1491), 
LSub89066 = subtract_layer([[0.7811, 0.1901]], [[0.7602, 0.6033]], Sub89066), 
LCon36518 = concatenate_layer([Sub89066,[[0.3212, 0.1865, 0.0773, 0.6167, 0.7175, 0.263, 0.7524]]], 1, Con36518), 
LMul73805 = multiply_layer([Fla1491,Con36518], Mul73805), 
exec_layers([LSub65747,LZer81677,LSep77881,LZer26168,LCon30798,LSub45328,LFla1491,LSub89066,LCon36518,LMul73805],["Sub65747","Zer81677","Sep77881","Zer26168","Con30798","Sub45328","Fla1491","Sub89066","Con36518","Mul73805"],Mul73805,"Mul73805")

Actual (Unparsed): [[0.0000000, -0.0000000, -0.0307067, -0.1720137, -0.0710981, -0.5555851, -0.0740460, 0.1483320, -0.0321275]]

Expected (Unparsed): [[0.0,-0.0,-0.03070672,-0.17201366684237002,-0.07109806529615599,-0.55558503,-0.07404600000000006,0.14833200000000002,-0.032127479999999986]]

Actual:   [[0, -0, -0.0307, -0.172, -0.071, -0.5555, -0.074, 0.1484, -0.0321]]

Expected: [[0, -0, -0.0307, -0.172, -0.071, -0.5555, -0.074, 0.1484, -0.0321]]