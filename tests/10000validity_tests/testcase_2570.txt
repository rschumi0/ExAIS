import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Thr87465 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Ave57697 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Ave57697 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con77604 = tf.keras.layers.Input(shape=([2, 1, 1]))

Thr87465 = keras.layers.ThresholdedReLU(theta=1.176693763564049, name = 'Thr87465', input_shape=(2, 1, 1, 2))(in0Thr87465)
Res78543 = keras.layers.Reshape((2, 1, 2), name = 'Res78543', )(Thr87465)
Ave57697 = keras.layers.Average(name = 'Ave57697', )([in0Ave57697,in1Ave57697])
Con77604 = keras.layers.Concatenate(axis=3, name = 'Con77604', )([Ave57697,in0Con77604])
Add14115 = keras.layers.Add(name = 'Add14115', )([Res78543,Con77604])
Res94680 = keras.layers.Reshape((2, 2), name = 'Res94680', )(Add14115)
GRU21151 = keras.layers.GRU(3,reset_after=False, recurrent_activation='sigmoid', name = 'GRU21151', )(Res94680)
Res52830 = keras.layers.Reshape((3, 1), name = 'Res52830', )(GRU21151)
Res63854 = keras.layers.Reshape((3, 1, 1), name = 'Res63854', )(Res52830)
Res4413 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res4413', )(Res63854)
Up_44377 = keras.layers.UpSampling3D(size=(1, 1, 2), name = 'Up_44377', )(Res4413)
model = tf.keras.models.Model(inputs=[in0Thr87465,in0Ave57697,in1Ave57697,in0Con77604], outputs=Up_44377)
w = model.get_layer('GRU21151').get_weights() 
w[0] = np.array([[1, 4, 7, 3, 2, 9, 2, 2, 10], [6, 7, 8, 7, 9, 4, 10, 1, 3]])
w[1] = np.array([[8, 10, 3, 8, 8, 6, 9, 6, 4], [6, 9, 1, 5, 1, 2, 10, 2, 2], [5, 10, 5, 2, 5, 1, 9, 1, 9]])
w[2] = np.array([2, 3, 7, 3, 1, 1, 5, 6, 8])
model.get_layer('GRU21151').set_weights(w) 
in0Thr87465 = tf.constant([[[[[0.1044, 0.6524]]], [[[0.7663, 0.5038]]]]])
in0Ave57697 = tf.constant([[[[0.9642]], [[0.2136]]]])
in1Ave57697 = tf.constant([[[[0.4693]], [[0.339]]]])
in0Con77604 = tf.constant([[[[0.2649]], [[0.9078]]]])
print (np.array2string(model.predict([in0Thr87465,in0Ave57697,in1Ave57697,in0Con77604],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_44377.png')

LThr87465 = thresholded_relu_layer([[[[[0.1044, 0.6524]]], [[[0.7663, 0.5038]]]]], 1.176693763564049, Thr87465), 
LRes78543 = reshape_layer(Thr87465, [2, 1, 2], Res78543), 
LAve57697 = average_layer([[[[[0.9642]], [[0.2136]]]], [[[[0.4693]], [[0.339]]]]], Ave57697), 
LCon77604 = concatenate_layer([Ave57697,[[[[0.2649]], [[0.9078]]]]], 3, Con77604), 
LAdd14115 = add_layer([Res78543,Con77604], Add14115), 
LRes94680 = reshape_layer(Add14115, [2, 2], Res94680), 
LGRU21151 = gru_layer(Res94680,[[1, 4, 7, 3, 2, 9, 2, 2, 10], [6, 7, 8, 7, 9, 4, 10, 1, 3]],[[8, 10, 3, 8, 8, 6, 9, 6, 4], [6, 9, 1, 5, 1, 2, 10, 2, 2], [5, 10, 5, 2, 5, 1, 9, 1, 9]],[2, 3, 7, 3, 1, 1, 5, 6, 8], false, GRU21151), 
LRes52830 = reshape_layer(GRU21151, [3, 1], Res52830), 
LRes63854 = reshape_layer(Res52830, [3, 1, 1], Res63854), 
LRes4413 = reshape_layer(Res63854, [3, 1, 1, 1], Res4413), 
LUp_44377 = up_sampling3D_layer(Res4413, 1, 1, 2, Up_44377), 
exec_layers([LThr87465,LRes78543,LAve57697,LCon77604,LAdd14115,LRes94680,LGRU21151,LRes52830,LRes63854,LRes4413,LUp_44377],["Thr87465","Res78543","Ave57697","Con77604","Add14115","Res94680","GRU21151","Res52830","Res63854","Res4413","Up_44377"],Up_44377,"Up_44377")

Actual (Unparsed): [[[[[0.0136972], [0.0136972]]], [[[0.0004681], [0.0004681]]], [[[0.0000008], [0.0000008]]]]]

Expected (Unparsed): [[[[[0.013697246193059573],[0.013697246193059573]]],[[[0.0004680701605850904],[0.0004680701605850904]]],[[[8.142678868652108e-7],[8.142678868652108e-7]]]]]

Actual:   [[[[[0.0137], [0.0137]]], [[[0.0005], [0.0005]]], [[[0], [0]]]]]

Expected: [[[[[0.0137], [0.0137]]], [[[0.0005], [0.0005]]], [[[0], [0]]]]]