import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul50806 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul50806 = tf.keras.layers.Input(shape=([1, 2]))
in0Add10618 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Add10618 = tf.keras.layers.Input(shape=([1, 2, 1]))

Mul50806 = keras.layers.Multiply(name = 'Mul50806', )([in0Mul50806,in1Mul50806])
Up_52601 = keras.layers.UpSampling1D(size=(1), name = 'Up_52601', )(Mul50806)
Res36763 = keras.layers.Reshape((1, 2, 1), name = 'Res36763', )(Up_52601)
Add10618 = keras.layers.Add(name = 'Add10618', )([in0Add10618,in1Add10618])
Sub82340 = keras.layers.Subtract(name = 'Sub82340', )([Res36763,Add10618])
model = tf.keras.models.Model(inputs=[in0Mul50806,in1Mul50806,in0Add10618,in1Add10618], outputs=Sub82340)
in0Mul50806 = tf.constant([[[0.978, 0.5975]]])
in1Mul50806 = tf.constant([[[0.4129, 0.2783]]])
in0Add10618 = tf.constant([[[[0.5166], [0.4359]]]])
in1Add10618 = tf.constant([[[[0.3472], [0.8631]]]])
print (np.array2string(model.predict([in0Mul50806,in1Mul50806,in0Add10618,in1Add10618],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub82340.png')

LMul50806 = multiply_layer([[[[0.978, 0.5975]]], [[[0.4129, 0.2783]]]], Mul50806), 
LUp_52601 = up_sampling1D_layer(Mul50806, 1, Up_52601), 
LRes36763 = reshape_layer(Up_52601, [1, 2, 1], Res36763), 
LAdd10618 = add_layer([[[[[0.5166], [0.4359]]]], [[[[0.3472], [0.8631]]]]], Add10618), 
LSub82340 = subtract_layer(Res36763,Add10618, Sub82340), 
exec_layers([LMul50806,LUp_52601,LRes36763,LAdd10618,LSub82340],["Mul50806","Up_52601","Res36763","Add10618","Sub82340"],Sub82340,"Sub82340")

Actual (Unparsed): [[[[-0.4599838], [-1.1327157]]]]

Expected (Unparsed): [[[[-0.45998379999999994],[-1.13271575]]]]

Actual:   [[[[-0.4599], [-1.1327]]]]

Expected: [[[[-0.4599], [-1.1327]]]]