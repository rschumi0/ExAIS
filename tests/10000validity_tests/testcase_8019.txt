import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul47311 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Mul47311 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))

Mul47311 = keras.layers.Multiply(name = 'Mul47311', )([in0Mul47311,in1Mul47311])
Sof9839 = keras.layers.Softmax(axis=1, name = 'Sof9839', )(Mul47311)
model = tf.keras.models.Model(inputs=[in0Mul47311,in1Mul47311], outputs=Sof9839)
in0Mul47311 = tf.constant([[[[[0.5687]]]]])
in1Mul47311 = tf.constant([[[[[0.2007]]]]])
print (np.array2string(model.predict([in0Mul47311,in1Mul47311],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof9839.png')

LMul47311 = multiply_layer([[[[[[0.5687]]]]], [[[[[0.2007]]]]]], Mul47311), 
LSof9839 = softmax_layer(Mul47311, 1, Sof9839), 
exec_layers([LMul47311,LSof9839],["Mul47311","Sof9839"],Sof9839,"Sof9839")

Actual (Unparsed): [[[[[1.0000000]]]]]

Expected (Unparsed): [[[[[1.0]]]]]

Actual:   [[[[[1]]]]]

Expected: [[[[[1]]]]]