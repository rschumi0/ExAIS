import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0LST75092 = tf.keras.layers.Input(shape=([3, 3]))
in0Lay38679 = tf.keras.layers.Input(shape=([1]))

LST75092 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST75092', )(in0LST75092)
Res98943 = keras.layers.Reshape((1, 1), name = 'Res98943', )(LST75092)
Lay38679 = keras.layers.LayerNormalization(axis=1, epsilon=2.725204343959436, name = 'Lay38679', )(in0Lay38679)
Res50801 = keras.layers.Reshape((1, 1), name = 'Res50801', )(Lay38679)
Max18939 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max18939', )(Res50801)
Min29372 = keras.layers.Minimum(name = 'Min29372', )([Res98943,Max18939])
model = tf.keras.models.Model(inputs=[in0LST75092,in0Lay38679], outputs=Min29372)
w = model.get_layer('LST75092').get_weights() 
w[0] = np.array([[10, 5, 6, 2], [10, 8, 2, 3], [9, 3, 4, 5]])
w[1] = np.array([[8, 2, 6, 1]])
w[2] = np.array([1, 1, 1, 3])
model.get_layer('LST75092').set_weights(w) 
in0LST75092 = tf.constant([[[10, 9, 8], [2, 2, 3], [8, 2, 1]]])
in0Lay38679 = tf.constant([[1.0544]])
print (np.array2string(model.predict([in0LST75092,in0Lay38679],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min29372.png')

LLST75092 = lstm_layer([[[10, 9, 8], [2, 2, 3], [8, 2, 1]]],[[10, 5, 6, 2], [10, 8, 2, 3], [9, 3, 4, 5]],[[8, 2, 6, 1]],[1, 1, 1, 3], LST75092), 
LRes98943 = reshape_layer(LST75092, [1, 1], Res98943), 
LLay38679 = layer_normalization_layer([[1.0544]], 1, 2.725204343959436, Lay38679), 
LRes50801 = reshape_layer(Lay38679, [1, 1], Res50801), 
LMax18939 = max_pool1D_layer(Res50801, 1, Max18939), 
LMin29372 = minimum_layer([Res98943,Max18939], Min29372), 
exec_layers([LLST75092,LRes98943,LLay38679,LRes50801,LMax18939,LMin29372],["LST75092","Res98943","Lay38679","Res50801","Max18939","Min29372"],Min29372,"Min29372")

Actual (Unparsed): [[[0.0000000]]]

Expected (Unparsed): [[[0.0]]]

Actual:   [[[0]]]

Expected: [[[0]]]