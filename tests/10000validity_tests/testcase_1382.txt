import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0GRU96800 = tf.keras.layers.Input(shape=([3, 1]))
in0Add56426 = tf.keras.layers.Input(shape=([1, 2]))
in1Add56426 = tf.keras.layers.Input(shape=([1, 2]))

GRU96800 = keras.layers.GRU(1,reset_after=True, recurrent_activation='sigmoid', name = 'GRU96800', )(in0GRU96800)
Res81984 = keras.layers.Reshape((1, 1), name = 'Res81984', )(GRU96800)
Res68287 = keras.layers.Reshape((1, 1, 1), name = 'Res68287', )(Res81984)
Res3455 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res3455', )(Res68287)
Con6530 = keras.layers.Conv3DTranspose(4, (1, 1, 1),strides=(7, 1, 12), padding='same', name = 'Con6530', )(Res3455)
Res83582 = keras.layers.Reshape((7, 1, 48), name = 'Res83582', )(Con6530)
Res99244 = keras.layers.Reshape((7, 48), name = 'Res99244', )(Res83582)
Per96332 = keras.layers.Permute((2,1), name = 'Per96332',)(Res99244)
Res33946 = keras.layers.Reshape((48, 7, 1), name = 'Res33946', )(Per96332)
Add56426 = keras.layers.Add(name = 'Add56426', )([in0Add56426,in1Add56426])
Res3601 = keras.layers.Reshape((1, 2, 1), name = 'Res3601', )(Add56426)
Up_78515 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_78515', )(Res3601)
Zer41351 = keras.layers.ZeroPadding2D(padding=((46, 0), (3, 0)), name = 'Zer41351', )(Up_78515)
Min71125 = keras.layers.Minimum(name = 'Min71125', )([Res33946,Zer41351])
model = tf.keras.models.Model(inputs=[in0GRU96800,in0Add56426,in1Add56426], outputs=Min71125)
w = model.get_layer('GRU96800').get_weights() 
w[0] = np.array([[2, 10, 2]])
w[1] = np.array([[8, 2, 10]])
w[2] = np.array([[9, 1, 2], [5, 5, 2]])
model.get_layer('GRU96800').set_weights(w) 
w = model.get_layer('Con6530').get_weights() 
w[0] = np.array([[[[[0.8199], [0.8875], [0.8445], [0.7701]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con6530').set_weights(w) 
in0GRU96800 = tf.constant([[[3], [10], [7]]])
in0Add56426 = tf.constant([[[0.6779, 0.7976]]])
in1Add56426 = tf.constant([[[0.1058, 0.212]]])
print (np.array2string(model.predict([in0GRU96800,in0Add56426,in1Add56426],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min71125.png')

LGRU96800 = gru_layer([[[3], [10], [7]]],[[2, 10, 2]],[[8, 2, 10]],[[9, 1, 2], [5, 5, 2]], true, GRU96800), 
LRes81984 = reshape_layer(GRU96800, [1, 1], Res81984), 
LRes68287 = reshape_layer(Res81984, [1, 1, 1], Res68287), 
LRes3455 = reshape_layer(Res68287, [1, 1, 1, 1], Res3455), 
LCon6530 = conv3D_transpose_layer(Res3455, 1, 1, 1,[[[[[0.8199], [0.8875], [0.8445], [0.7701]]]]],[0, 0, 0, 0], 7, 1, 12, true, Con6530), 
LRes83582 = reshape_layer(Con6530, [7, 1, 48], Res83582), 
LRes99244 = reshape_layer(Res83582, [7, 48], Res99244), 
LPer96332 = permute_layer(Res99244, 2,1, Per96332), 
LRes33946 = reshape_layer(Per96332, [48, 7, 1], Res33946), 
LAdd56426 = add_layer([[[[0.6779, 0.7976]]], [[[0.1058, 0.212]]]], Add56426), 
LRes3601 = reshape_layer(Add56426, [1, 2, 1], Res3601), 
LUp_78515 = up_sampling2D_layer(Res3601, 2, 2, Up_78515), 
LZer41351 = zero_padding2D_layer(Up_78515, 46, 0, 3, 0, Zer41351), 
LMin71125 = minimum_layer([Res33946,Zer41351], Min71125), 
exec_layers([LGRU96800,LRes81984,LRes68287,LRes3455,LCon6530,LRes83582,LRes99244,LPer96332,LRes33946,LAdd56426,LRes3601,LUp_78515,LZer41351,LMin71125],["GRU96800","Res81984","Res68287","Res3455","Con6530","Res83582","Res99244","Per96332","Res33946","Add56426","Res3601","Up_78515","Zer41351","Min71125"],Min71125,"Min71125")

Actual (Unparsed): [[[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]]]

Expected (Unparsed

Actual

Expected