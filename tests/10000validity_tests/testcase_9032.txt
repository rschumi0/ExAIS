import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave56693 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave56693 = tf.keras.layers.Input(shape=([1, 2]))
in0Con99334 = tf.keras.layers.Input(shape=([1, 43]))
in0Sub59942 = tf.keras.layers.Input(shape=([3, 3, 3, 3]))
in1Sub59942 = tf.keras.layers.Input(shape=([3, 3, 3, 3]))
in0Add29847 = tf.keras.layers.Input(shape=([1, 1]))
in1Add29847 = tf.keras.layers.Input(shape=([1, 1]))
in0Con49650 = tf.keras.layers.Input(shape=([3, 3, 3, 2]))

Ave56693 = keras.layers.Average(name = 'Ave56693', )([in0Ave56693,in1Ave56693])
Con99334 = keras.layers.Concatenate(axis=2, name = 'Con99334', )([Ave56693,in0Con99334])
Sub59942 = keras.layers.Subtract(name = 'Sub59942', )([in0Sub59942,in1Sub59942])
Add29847 = keras.layers.Add(name = 'Add29847', )([in0Add29847,in1Add29847])
Res43351 = keras.layers.Reshape((1, 1, 1), name = 'Res43351', )(Add29847)
Res31780 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res31780', )(Res43351)
Up_2471 = keras.layers.UpSampling3D(size=(2, 1, 2), name = 'Up_2471', )(Res31780)
Zer1099 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (1, 0)), name = 'Zer1099', )(Up_2471)
Con49650 = keras.layers.Concatenate(axis=4, name = 'Con49650', )([Zer1099,in0Con49650])
Max65907 = keras.layers.Maximum(name = 'Max65907', )([Sub59942,Con49650])
Res10018 = keras.layers.Reshape((3, 3, 9), name = 'Res10018', )(Max65907)
Zer58547 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer58547', )(Res10018)
Res80395 = keras.layers.Reshape((5, 45), name = 'Res80395', )(Zer58547)
Dot27572 = keras.layers.Dot(axes=(2, 2), name = 'Dot27572', )([Con99334,Res80395])
model = tf.keras.models.Model(inputs=[in0Ave56693,in1Ave56693,in0Con99334,in0Sub59942,in1Sub59942,in0Add29847,in1Add29847,in0Con49650], outputs=Dot27572)
in0Ave56693 = tf.constant([[[0.2775, 0.8426]]])
in1Ave56693 = tf.constant([[[0.2094, 0.2287]]])
in0Con99334 = tf.constant([[[0.4338, 0.6259, 0.433, 0.7278, 0.2362, 0.1479, 0.1567, 0.3134, 0.3831, 0.8483, 0.4002, 0.336, 0.7255, 0.1692, 0.4545, 0.2491, 0.6445, 0.5442, 0.931, 0.6946, 0.9996, 0.8242, 0.9261, 0.2888, 0.7643, 0.1447, 0.6766, 0.9834, 0.9713, 0.3868, 0.4861, 0.4546, 0.2178, 0.6102, 0.0858, 0.5838, 0.3861, 0.0979, 0.2734, 0.2505, 0.4259, 0.9399, 0.624]]])
in0Sub59942 = tf.constant([[[[[0.3264, 0.6641, 0.4199], [0.1689, 0.0207, 0.2384], [0.5599, 0.1777, 0.0683]], [[0.6896, 0.5446, 0.0411], [0.41, 0.9971, 0.5384], [0.6723, 0.8365, 0.5624]], [[0.779, 0.8278, 0.3346], [0.7642, 0.4181, 0.6263], [0.0549, 0.2074, 0.4437]]], [[[0.9234, 0.7743, 0.5143], [0.12, 0.7537, 0.7322], [0.9271, 0.2788, 0.9898]], [[0.7623, 0.6973, 0.2258], [0.0879, 0.7102, 0.2211], [0.9902, 0.2902, 0.2326]], [[0.147, 0.1356, 0.9363], [0.2048, 0.2302, 0.3778], [0.6005, 0.1306, 0.5367]]], [[[0.8085, 0.6159, 0.1433], [0.7119, 0.6123, 0.1702], [0.4154, 0.4166, 0.7805]], [[0.5703, 0.0519, 0.7112], [0.4785, 0.4555, 0.8338], [0.1185, 0.3989, 0.7131]], [[0.4979, 0.3333, 0.6495], [0.5986, 0.5938, 0.0631], [0.4654, 0.0972, 0.3397]]]]])
in1Sub59942 = tf.constant([[[[[0.2813, 0.3093, 0.8737], [0.3172, 0.2548, 0.7304], [0.2568, 0.2888, 0.067]], [[0.6901, 0.5744, 0.9], [0.9991, 0.9275, 0.82], [0.5384, 0.0562, 0.341]], [[0.0633, 0.1591, 0.1277], [0.2916, 0.24, 0.4609], [0.7578, 0.1931, 0.9588]]], [[[0.3953, 0.2674, 0.7519], [0.7412, 0.6302, 0.018], [0.7396, 0.6785, 0.2498]], [[0.9361, 0.2397, 0.8299], [0.671, 0.0277, 0.8953], [0.8158, 0.4852, 0.5031]], [[0.8039, 0.9656, 0.69], [0.3063, 0.3532, 0.0681], [0.5682, 0.2971, 0.4751]]], [[[0.2414, 0.2924, 0.0684], [0.5039, 0.6934, 0.1833], [0.3987, 0.07, 0.1708]], [[0.4383, 0.6375, 0.2347], [0.7147, 0.0571, 0.9008], [0.376, 0.9285, 0.6416]], [[0.813, 0.1741, 0.3466], [0.7214, 0.6739, 0.4105], [0.6435, 0.2673, 0.3537]]]]])
in0Add29847 = tf.constant([[[0.1992]]])
in1Add29847 = tf.constant([[[0.3664]]])
in0Con49650 = tf.constant([[[[[0.3593, 0.0643], [0.6709, 0.1017], [0.4982, 0.4284]], [[0.5358, 0.9207], [0.4628, 0.4375], [0.7226, 0.0068]], [[0.7667, 0.5596], [0.1319, 0.0428], [0.6307, 0.523]]], [[[0.0337, 0.9224], [0.6288, 0.3772], [0.9373, 0.8373]], [[0.1571, 0.5374], [0.8517, 0.8611], [0.2933, 0.0163]], [[0.2484, 0.8752], [0.9255, 0.4656], [0.1196, 0.49]]], [[[0.1269, 0.0893], [0.8845, 0.9471], [0.6252, 0.9764]], [[0.5379, 0.8618], [0.8771, 0.9013], [0.3584, 0.0591]], [[0.6923, 0.1879], [0.6972, 0.692], [0.5755, 0.7976]]]]])
print (np.array2string(model.predict([in0Ave56693,in1Ave56693,in0Con99334,in0Sub59942,in1Sub59942,in0Add29847,in1Add29847,in0Con49650],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot27572.png')

LAve56693 = average_layer([[[[0.2775, 0.8426]]], [[[0.2094, 0.2287]]]], Ave56693), 
LCon99334 = concatenate_layer([Ave56693,[[[0.4338, 0.6259, 0.433, 0.7278, 0.2362, 0.1479, 0.1567, 0.3134, 0.3831, 0.8483, 0.4002, 0.336, 0.7255, 0.1692, 0.4545, 0.2491, 0.6445, 0.5442, 0.931, 0.6946, 0.9996, 0.8242, 0.9261, 0.2888, 0.7643, 0.1447, 0.6766, 0.9834, 0.9713, 0.3868, 0.4861, 0.4546, 0.2178, 0.6102, 0.0858, 0.5838, 0.3861, 0.0979, 0.2734, 0.2505, 0.4259, 0.9399, 0.624]]]], 2, Con99334), 
LSub59942 = subtract_layer([[[[[0.3264, 0.6641, 0.4199], [0.1689, 0.0207, 0.2384], [0.5599, 0.1777, 0.0683]], [[0.6896, 0.5446, 0.0411], [0.41, 0.9971, 0.5384], [0.6723, 0.8365, 0.5624]], [[0.779, 0.8278, 0.3346], [0.7642, 0.4181, 0.6263], [0.0549, 0.2074, 0.4437]]], [[[0.9234, 0.7743, 0.5143], [0.12, 0.7537, 0.7322], [0.9271, 0.2788, 0.9898]], [[0.7623, 0.6973, 0.2258], [0.0879, 0.7102, 0.2211], [0.9902, 0.2902, 0.2326]], [[0.147, 0.1356, 0.9363], [0.2048, 0.2302, 0.3778], [0.6005, 0.1306, 0.5367]]], [[[0.8085, 0.6159, 0.1433], [0.7119, 0.6123, 0.1702], [0.4154, 0.4166, 0.7805]], [[0.5703, 0.0519, 0.7112], [0.4785, 0.4555, 0.8338], [0.1185, 0.3989, 0.7131]], [[0.4979, 0.3333, 0.6495], [0.5986, 0.5938, 0.0631], [0.4654, 0.0972, 0.3397]]]]], [[[[[0.2813, 0.3093, 0.8737], [0.3172, 0.2548, 0.7304], [0.2568, 0.2888, 0.067]], [[0.6901, 0.5744, 0.9], [0.9991, 0.9275, 0.82], [0.5384, 0.0562, 0.341]], [[0.0633, 0.1591, 0.1277], [0.2916, 0.24, 0.4609], [0.7578, 0.1931, 0.9588]]], [[[0.3953, 0.2674, 0.7519], [0.7412, 0.6302, 0.018], [0.7396, 0.6785, 0.2498]], [[0.9361, 0.2397, 0.8299], [0.671, 0.0277, 0.8953], [0.8158, 0.4852, 0.5031]], [[0.8039, 0.9656, 0.69], [0.3063, 0.3532, 0.0681], [0.5682, 0.2971, 0.4751]]], [[[0.2414, 0.2924, 0.0684], [0.5039, 0.6934, 0.1833], [0.3987, 0.07, 0.1708]], [[0.4383, 0.6375, 0.2347], [0.7147, 0.0571, 0.9008], [0.376, 0.9285, 0.6416]], [[0.813, 0.1741, 0.3466], [0.7214, 0.6739, 0.4105], [0.6435, 0.2673, 0.3537]]]]], Sub59942), 
LAdd29847 = add_layer([[[[0.1992]]], [[[0.3664]]]], Add29847), 
LRes43351 = reshape_layer(Add29847, [1, 1, 1], Res43351), 
LRes31780 = reshape_layer(Res43351, [1, 1, 1, 1], Res31780), 
LUp_2471 = up_sampling3D_layer(Res31780, 2, 1, 2, Up_2471), 
LZer1099 = zero_padding3D_layer(Up_2471, 1, 0, 2, 0, 1, 0, Zer1099), 
LCon49650 = concatenate_layer([Zer1099,[[[[[0.3593, 0.0643], [0.6709, 0.1017], [0.4982, 0.4284]], [[0.5358, 0.9207], [0.4628, 0.4375], [0.7226, 0.0068]], [[0.7667, 0.5596], [0.1319, 0.0428], [0.6307, 0.523]]], [[[0.0337, 0.9224], [0.6288, 0.3772], [0.9373, 0.8373]], [[0.1571, 0.5374], [0.8517, 0.8611], [0.2933, 0.0163]], [[0.2484, 0.8752], [0.9255, 0.4656], [0.1196, 0.49]]], [[[0.1269, 0.0893], [0.8845, 0.9471], [0.6252, 0.9764]], [[0.5379, 0.8618], [0.8771, 0.9013], [0.3584, 0.0591]], [[0.6923, 0.1879], [0.6972, 0.692], [0.5755, 0.7976]]]]]], 4, Con49650), 
LMax65907 = maximum_layer([Sub59942,Con49650], Max65907), 
LRes10018 = reshape_layer(Max65907, [3, 3, 9], Res10018), 
LZer58547 = zero_padding2D_layer(Res10018, 1, 1, 1, 1, Zer58547), 
LRes80395 = reshape_layer(Zer58547, [5, 45], Res80395), 
LDot27572 = dot_layer(Con99334,Res80395, 2, 2, Dot27572), 
exec_layers([LAve56693,LCon99334,LSub59942,LAdd29847,LRes43351,LRes31780,LUp_2471,LZer1099,LCon49650,LMax65907,LRes10018,LZer58547,LRes80395,LDot27572],["Ave56693","Con99334","Sub59942","Add29847","Res43351","Res31780","Up_2471","Zer1099","Con49650","Max65907","Res10018","Zer58547","Res80395","Dot27572"],Dot27572,"Dot27572")

Actual (Unparsed): [[[0.0000000, 5.6179414, 7.8515848, 7.7239276, 0.0000000]]]

Expected (Unparsed): [[[0.0,5.617941469999999,7.851584860000003,7.72392774,0.0]]]

Actual:   [[[0, 5.618, 7.8516, 7.724, 0]]]

Expected: [[[0, 5.618, 7.8516, 7.724, 0]]]