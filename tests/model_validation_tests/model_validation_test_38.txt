import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul87972 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Mul87972 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))

Mul87972 = keras.layers.Multiply(name = 'Mul87972', )([in0Mul87972,in1Mul87972])
Res61480 = keras.layers.Reshape((1, 1, 1), name = 'Res61480', )(Mul87972)
Ave71899 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(1, 1), padding='same', name = 'Ave71899', )(Res61480)
Cro29076 = keras.layers.Cropping3D(cropping=((1, 1), (0, 2), (0, 1)), name = 'Cro29076', )(Ave71899)
model = tf.keras.models.Model(inputs=[in0Mul87972,in1Mul87972], outputs=Cro29076)
in0Mul87972 = tf.constant([[[[[0.3893]]]]])
in1Mul87972 = tf.constant([[[[[0.5291]]]]])
print (np.array2string(model.predict([in0Mul87972,in1Mul87972],steps=1), separator=', '))


LMul87972 = multiply_layer([[[[[[0.3893]]]]], [[[[[0.5291]]]]]], Mul87972), 
LRes61480 = reshape_layer(Mul87972, [1, 1, 1], Res61480), 
LAve71899 = average_pooling2D_layer(Res61480, 1, 1, 1, 1, true, Ave71899), 
LCro29076 = cropping3D_layer(Ave71899, 1, 1, 0, 2, 0, 1, Cro29076), 
exec_layers([LMul87972,LRes61480,LAve71899,LCro29076],["Mul87972","Res61480","Ave71899","Cro29076"],Cro29076,"Cro29076")

Actual (Unparsed): 
 ValueError('Input ' + str(input_index) + ' of layer ' +ValueError: Input 0 of layer Cro29076 is incompatible with the layer: expected ndim=5, found ndim=4. Full shape received: (None, 1, 1, 1)

Expected (Unparsed): 
Cro29076: Dimension error, Input Shape [1,1,1,1]

Actual:   

Expected: 