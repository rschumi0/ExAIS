import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_3691 = tf.keras.layers.Input(shape=([1, 3, 4, 2]))

Up_3691 = keras.layers.UpSampling3D(size=(1, 2, 2), name = 'Up_3691',  input_shape=(1, 3, 4, 2))(in0Up_3691)
Dep49178 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='valid', name = 'Dep49178', )(Up_3691)
model = tf.keras.models.Model(inputs=[in0Up_3691], outputs=Dep49178)
w = model.get_layer('Dep49178').get_weights() 
w[0] = np.array([[[[0.4958]]]])
w[1] = np.array([0])
model.get_layer('Dep49178').set_weights(w) 
in0Up_3691 = tf.constant([[[[[1.5436, 1.578], [1.0905, 1.3034], [1.5252, 1.4706], [1.4387, 1.405]], [[1.6879, 1.01], [1.6984, 1.137], [1.9744, 1.792], [1.9475, 1.4092]], [[1.0389, 1.8977], [1.4707, 1.0584], [1.43, 1.5091], [1.4491, 1.1333]]]]])
print (np.array2string(model.predict([in0Up_3691],steps=1), separator=', '))


LUp_3691 = up_sampling3D_layer([[[[[1.5436, 1.578], [1.0905, 1.3034], [1.5252, 1.4706], [1.4387, 1.405]], [[1.6879, 1.01], [1.6984, 1.137], [1.9744, 1.792], [1.9475, 1.4092]], [[1.0389, 1.8977], [1.4707, 1.0584], [1.43, 1.5091], [1.4491, 1.1333]]]]], 1, 2, 2, Up_3691), 
LDep49178 = depthwise_conv2D_layer(Up_3691, 1, 1,[[[[0.4958]]]],[0], 1, 1, false, Dep49178), 
exec_layers([LUp_3691,LDep49178],["Up_3691","Dep49178"],Dep49178,"Dep49178")

Actual (Unparsed): 
 ValueError(str(e))ValueError: Shape must be rank 4 but is rank 5 for '{{node Dep49178/depthwise}} = DepthwiseConv2dNative[T=DT_DOUBLE, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1]](Placeholder, Dep49178/depthwise/ReadVariableOp)' with input shapes: [?,1,6,8,2], [1,1,2,1].

Expected (Unparsed): 
Dep49178: Dimension error, Input Shape [1,1,6,8,2]

Actual:   

Expected: 