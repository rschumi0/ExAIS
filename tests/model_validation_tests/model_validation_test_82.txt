import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Emb566 = tf.keras.layers.Input(shape=([3]))

Emb566 = keras.layers.Embedding(1, 1, name = 'Emb566', )(in0Emb566)
GRU44291 = keras.layers.GRU(2,reset_after=True, recurrent_activation='sigmoid', name = 'GRU44291', )(Emb566)
Res64816 = keras.layers.Reshape((2, 1), name = 'Res64816', )(GRU44291)
Glo77441 = keras.layers.GlobalAveragePooling2D(name = 'Glo77441', )(Res64816)
model = tf.keras.models.Model(inputs=[in0Emb566], outputs=Glo77441)
w = model.get_layer('Emb566').get_weights() 
w[0] =  np.array([[0.0378]])
model.get_layer('Emb566').set_weights(w) 
w = model.get_layer('GRU44291').get_weights() 
w[0] = np.array([[9, 3, 8, 6, 10, 2]])
w[1] = np.array([[4, 8, 5, 9, 3, 5], [6, 2, 7, 4, 8, 9]])
w[2] = np.array([[10, 1, 1, 6, 8, 7], [4, 10, 8, 3, 4, 7]])
model.get_layer('GRU44291').set_weights(w) 
in0Emb566 = tf.constant([[0.8653, 0.8629, 0.6962]])
print (np.array2string(model.predict([in0Emb566],steps=1), separator=', '))


LEmb566 = embedding_layer([[0.8653, 0.8629, 0.6962]], [[0.0378]], Emb566), 
LGRU44291 = gru_layer(Emb566,[[9, 3, 8, 6, 10, 2]],[[4, 8, 5, 9, 3, 5], [6, 2, 7, 4, 8, 9]],[[10, 1, 1, 6, 8, 7], [4, 10, 8, 3, 4, 7]], true, GRU44291), 
LRes64816 = reshape_layer(GRU44291, [2, 1], Res64816), 
LGlo77441 = global_average_pooling2D_layer(Res64816, Glo77441), 
exec_layers([LEmb566,LGRU44291,LRes64816,LGlo77441],["Emb566","GRU44291","Res64816","Glo77441"],Glo77441,"Glo77441")

Actual (Unparsed): 
 ValueError('Input ' + str(input_index) + ' of layer ' +ValueError: Input 0 of layer Glo77441 is incompatible with the layer: expected ndim=4, found ndim=3. Full shape received: (None, 2, 1)

Expected (Unparsed): 
Glo77441: Dimension error, Input Shape [1,2,1]

Actual:   

Expected: 