import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max50282 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Max50282 = tf.keras.layers.Input(shape=([1, 1, 1]))

Max50282 = keras.layers.Maximum(name = 'Max50282', )([in0Max50282,in1Max50282])
Con7132 = keras.layers.Conv1D(3, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con7132', )(Max50282)
model = tf.keras.models.Model(inputs=[in0Max50282,in1Max50282], outputs=Con7132)
w = model.get_layer('Con7132').get_weights() 
w[0] = np.array([[[0.036, 0.1803, 0.6548], [0.3589, 0.4869, 0.1059]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con7132').set_weights(w) 
in0Max50282 = tf.constant([[[[0.7298]]]])
in1Max50282 = tf.constant([[[[0.4051]]]])
print (np.array2string(model.predict([in0Max50282,in1Max50282],steps=1), separator=', '))


LMax50282 = maximum_layer([[[[[0.7298]]]], [[[[0.4051]]]]], Max50282), 
LCon7132 = conv1D_layer(Max50282, 1,[[[0.036, 0.1803, 0.6548], [0.3589, 0.4869, 0.1059]]],[0, 0, 0], 1, true, 1, Con7132), 
exec_layers([LMax50282,LCon7132],["Max50282","Con7132"],Con7132,"Con7132")

Actual (Unparsed): 
 ValueError(ValueError: Layer weight shape (1, 1, 3) not compatible with provided weight shape (1, 2, 3)

Expected (Unparsed): 
Con7132: Dimension error, Input Shape [1,1,1,1]

Actual:   

Expected: 