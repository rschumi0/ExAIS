import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add93372 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Add93372 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))

Add93372 = keras.layers.Add(name = 'Add93372', )([in0Add93372,in1Add93372])
Con19515 = keras.layers.Conv2DTranspose(3, (1, 1),strides=(1, 1), padding='same', name = 'Con19515', )(Add93372)
Mas45806 = keras.layers.Masking(mask_value=2, name = 'Mas45806', )(Con19515)
model = tf.keras.models.Model(inputs=[in0Add93372,in1Add93372], outputs=Mas45806)
w = model.get_layer('Con19515').get_weights() 
w[0] = np.array([[[[0.4096], [0.4675], [0.2199]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con19515').set_weights(w) 
in0Add93372 = tf.constant([[[[[0.2867], [0.1825]]], [[[0.743], [0.2065]]]]])
in1Add93372 = tf.constant([[[[[0.8873], [0.9689]]], [[[0.3787], [0.1324]]]]])
print (np.array2string(model.predict([in0Add93372,in1Add93372],steps=1), separator=', '))


LAdd93372 = add_layer([[[[[[0.2867], [0.1825]]], [[[0.743], [0.2065]]]]], [[[[[0.8873], [0.9689]]], [[[0.3787], [0.1324]]]]]], Add93372), 
LCon19515 = conv2D_transpose_layer(Add93372, 1, 1,[[[[0.4096], [0.4675], [0.2199]]]],[0, 0, 0], 1, 1, true, Con19515), 
LMas45806 = masking_layer(Con19515, 2, Mas45806), 
exec_layers([LAdd93372,LCon19515,LMas45806],["Add93372","Con19515","Mas45806"],Mas45806,"Mas45806")

Actual (Unparsed): 
 ValueError('Inputs should have rank 4. Received input 'ValueError: Inputs should have rank 4. Received input shape: (None, 2, 1, 2, 1)

Expected (Unparsed): 
Con19515: Dimension error, Input Shape [1,2,1,2,1]

Actual:   

Expected: 