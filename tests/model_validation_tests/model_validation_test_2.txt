import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con59004 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Dot59163 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot59163 = tf.keras.layers.Input(shape=([3, 2]))
in0Mul43257 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul43257 = tf.keras.layers.Input(shape=([1, 1]))
in0Con95637 = tf.keras.layers.Input(shape=([2, 1]))

Con59004 = keras.layers.Conv3D(3, (2, 1, 1),strides=(5, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con59004', )(in0Con59004)
Res25051 = keras.layers.Reshape((1, 1, 6), name = 'Res25051', )(Con59004)
Res41818 = keras.layers.Reshape((1, 6), name = 'Res41818', )(Res25051)
Dot59163 = keras.layers.Dot(axes=(1, 1), name = 'Dot59163', )([in0Dot59163,in1Dot59163])
Mul43257 = keras.layers.Multiply(name = 'Mul43257', )([in0Mul43257,in1Mul43257])
Zer33687 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer33687', )(Mul43257)
Con95637 = keras.layers.Concatenate(axis=2, name = 'Con95637', )([Zer33687,in0Con95637])
Max70118 = keras.layers.Maximum(name = 'Max70118', )([Dot59163,Con95637])
Dot77680 = keras.layers.Dot(axes=(1, 1), name = 'Dot77680', )([Res41818,Max70118])
model = tf.keras.models.Model(inputs=[in0Con59004,in0Dot59163,in1Dot59163,in0Mul43257,in1Mul43257,in0Con95637], outputs=Dot77680)
w = model.get_layer('Con59004').get_weights() 
w[0] = np.array([[[[[0.9657, 0.2706, 0.1058]]]], [[[[0.662, 0.675, 0.3671]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con59004').set_weights(w) 
in0Con59004 = tf.constant([[[[[0.9442], [0.2847]]], [[[0.7186], [0.0477]]]]])
in0Dot59163 = tf.constant([[[0.9268, 0.9023], [0.2723, 0.3505], [0.3849, 0.1171]]])
in1Dot59163 = tf.constant([[[0.1439, 0.5192], [0.5454, 0.1689], [0.4689, 0.8666]]])
in0Mul43257 = tf.constant([[[0.4542]]])
in1Mul43257 = tf.constant([[[0.4867]]])
in0Con95637 = tf.constant([[[0.8204], [0.6744]]])
print (np.array2string(model.predict([in0Con59004,in0Dot59163,in1Dot59163,in0Mul43257,in1Mul43257,in0Con95637],steps=1), separator=', '))


LCon59004 = conv3D_layer([[[[[0.9442], [0.2847]]], [[[0.7186], [0.0477]]]]], 2, 1, 1,[[[[[0.9657, 0.2706, 0.1058]]]], [[[[0.662, 0.675, 0.3671]]]]],[0, 0, 0], 5, 1, 1, true, 1, 1, 1, Con59004), 
LRes25051 = reshape_layer(Con59004, [1, 1, 6], Res25051), 
LRes41818 = reshape_layer(Res25051, [1, 6], Res41818), 
LDot59163 = dot_layer([[[0.9268, 0.9023], [0.2723, 0.3505], [0.3849, 0.1171]]], [[[0.1439, 0.5192], [0.5454, 0.1689], [0.4689, 0.8666]]], 1, 1, Dot59163), 
LMul43257 = multiply_layer([[[[0.4542]]], [[[0.4867]]]], Mul43257), 
LZer33687 = zero_padding1D_layer(Mul43257, 1, 0, Zer33687), 
LCon95637 = concatenate_layer([Zer33687,[[[0.8204], [0.6744]]]], 2, Con95637), 
LMax70118 = maximum_layer([Dot59163,Con95637], Max70118), 
LDot77680 = dot_layer(Res41818,Max70118, 1, 1, Dot77680), 
exec_layers([LCon59004,LRes25051,LRes41818,LDot59163,LMul43257,LZer33687,LCon95637,LMax70118,LDot77680],["Con59004","Res25051","Res41818","Dot59163","Mul43257","Zer33687","Con95637","Max70118","Dot77680"],Dot77680,"Dot77680")

Actual (Unparsed): 
 ValueError('Dimension incompatibility 'ValueError: Dimension incompatibility 1 != 2. Layer shapes: (None, 1, 6), (None, 2, 2). Chosen axes: 1, 1

Expected (Unparsed): 
Dot77680: Dot Axis Error, Input Shape [1,1,6]

Actual:   

Expected: 