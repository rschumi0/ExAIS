import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul6515 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul6515 = tf.keras.layers.Input(shape=([1, 2]))

Mul6515 = keras.layers.Multiply(name = 'Mul6515', )([in0Mul6515,in1Mul6515])
Res5461 = keras.layers.Reshape((1, 2, 1), name = 'Res5461', )(Mul6515)
Glo66346 = keras.layers.GlobalMaxPool3D(name = 'Glo66346', )(Res5461)
model = tf.keras.models.Model(inputs=[in0Mul6515,in1Mul6515], outputs=Glo66346)
in0Mul6515 = tf.constant([[[0.0334, 0.6402]]])
in1Mul6515 = tf.constant([[[0.4695, 0.2109]]])
print (np.array2string(model.predict([in0Mul6515,in1Mul6515],steps=1), separator=', '))


LMul6515 = multiply_layer([[[[0.0334, 0.6402]]], [[[0.4695, 0.2109]]]], Mul6515), 
LRes5461 = reshape_layer(Mul6515, [1, 2, 1], Res5461), 
LGlo66346 = global_max_pool3D_layer(Res5461, Glo66346), 
exec_layers([LMul6515,LRes5461,LGlo66346],["Mul6515","Res5461","Glo66346"],Glo66346,"Glo66346")

Actual (Unparsed): 
 ValueError('Input ' + str(input_index) + ' of layer ' +ValueError: Input 0 of layer Glo66346 is incompatible with the layer: expected ndim=5, found ndim=4. Full shape received: (None, 1, 2, 1)

Expected (Unparsed): 
Glo66346: Dimension error, Input Shape [1,1,2,1]

Actual:   

Expected: 