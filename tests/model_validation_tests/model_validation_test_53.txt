import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave10224 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave10224 = tf.keras.layers.Input(shape=([2, 2]))
in0Con44997 = tf.keras.layers.Input(shape=([2, 3, 8, 2]))
in0Up_67114 = tf.keras.layers.Input(shape=([1, 1, 4, 3]))
in0Min84052 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Min84052 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Con44943 = tf.keras.layers.Input(shape=([2, 3, 8, 2]))
in0Add16669 = tf.keras.layers.Input(shape=([2, 2]))
in1Add16669 = tf.keras.layers.Input(shape=([2, 2]))
in0Con47630 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Ave88337 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Ave88337 = tf.keras.layers.Input(shape=([1, 1, 2]))

Ave10224 = keras.layers.Average(name = 'Ave10224', )([in0Ave10224,in1Ave10224])
Res30688 = keras.layers.Reshape((2, 2, 1), name = 'Res30688', )(Ave10224)
Res51213 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res51213', )(Res30688)
Zer94901 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (7, 0)), name = 'Zer94901', )(Res51213)
Con44997 = keras.layers.Concatenate(axis=4, name = 'Con44997', )([Zer94901,in0Con44997])
Up_67114 = keras.layers.UpSampling3D(size=(2, 1, 2), name = 'Up_67114',  input_shape=(1, 1, 4, 3))(in0Up_67114)
Zer70139 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer70139', )(Up_67114)
Min84052 = keras.layers.Minimum(name = 'Min84052', )([in0Min84052,in1Min84052])
Zer46925 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (7, 0)), name = 'Zer46925', )(Min84052)
Con44943 = keras.layers.Concatenate(axis=4, name = 'Con44943', )([Zer46925,in0Con44943])
Max15804 = keras.layers.Maximum(name = 'Max15804', )([Zer70139,Con44943])
Add93095 = keras.layers.Add(name = 'Add93095', )([Con44997,Max15804])
Res38176 = keras.layers.Reshape((2, 3, 24), name = 'Res38176', )(Add93095)
Add16669 = keras.layers.Add(name = 'Add16669', )([in0Add16669,in1Add16669])
Res603 = keras.layers.Reshape((2, 2, 1), name = 'Res603', )(Add16669)
Con47630 = keras.layers.Concatenate(axis=3, name = 'Con47630', )([Res603,in0Con47630])
Ave88337 = keras.layers.Average(name = 'Ave88337', )([in0Ave88337,in1Ave88337])
Zer48320 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer48320', )(Ave88337)
Add35728 = keras.layers.Add(name = 'Add35728', )([Con47630,Zer48320])
Zer89299 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer89299', )(Add35728)
Sub3234 = keras.layers.Subtract(name = 'Sub3234', )([Res38176,Zer89299])
model = tf.keras.models.Model(inputs=[in0Ave10224,in1Ave10224,in0Con44997,in0Up_67114,in0Min84052,in1Min84052,in0Con44943,in0Add16669,in1Add16669,in0Con47630,in0Ave88337,in1Ave88337], outputs=Sub3234)
in0Ave10224 = tf.constant([[[0.782, 0.3756], [0.7345, 0.6345]]])
in1Ave10224 = tf.constant([[[0.6115, 0.7917], [0.2799, 0.7515]]])
in0Con44997 = tf.constant([[[[[0.7776, 0.9671], [0.7665, 0.7542], [0.1393, 0.4172], [0.7281, 0.5687], [0.8756, 0.079], [0.6311, 0.7718], [0.4814, 0.304], [0.148, 0.8193]], [[0.2827, 0.7169], [0.2318, 0.3988], [0.9406, 0.7149], [0.2102, 0.3433], [0.9365, 0.8731], [0.3709, 0.4979], [0.4133, 0.1217], [0.2233, 0.2014]], [[0.123, 0.7193], [0.6277, 0.4638], [0.1249, 0.9837], [0.0272, 0.6283], [0.3129, 0.4635], [0.0845, 0.288], [0.8103, 0.7316], [0.1316, 0.4984]]], [[[0.7651, 0.2674], [0.972, 0.8708], [0.1016, 0.9546], [0.7423, 0.9626], [0.3411, 0.5702], [0.7341, 0.492], [0.6909, 0.2613], [0.3052, 0.2924]], [[0.2191, 0.4184], [0.27, 0.6001], [0.082, 0.5389], [0.4455, 0.2167], [0.451, 0.6466], [0.354, 0.3297], [0.9998, 0.5819], [0.4329, 0.2851]], [[0.553, 0.0106], [0.4896, 0.408], [0.7733, 0.3144], [0.5499, 0.0447], [0.5715, 0.6165], [0.6997, 0.3597], [0.2567, 0.0772], [0.9929, 0.0639]]]]])
in0Up_67114 = tf.constant([[[[[1.772, 1.4526, 1.2823], [1.8833, 1.6661, 1.2485], [1.7211, 1.8211, 1.0488], [1.5488, 1.5806, 1.4553]]]]])
in0Min84052 = tf.constant([[[[[0.951]], [[0.5476]]]]])
in1Min84052 = tf.constant([[[[[0.17]], [[0.0854]]]]])
in0Con44943 = tf.constant([[[[[0.6571, 0.0501], [0.9168, 0.9894], [0.3401, 0.6038], [0.8583, 0.8559], [0.9701, 0.4167], [0.2681, 0.321], [0.6067, 0.506], [0.2261, 0.07]], [[0.5716, 0.5237], [0.7287, 0.5857], [0.1273, 0.6484], [0.6358, 0.3777], [0.1847, 0.7564], [0.3422, 0.467], [0.6671, 0.8784], [0.4286, 0.0584]], [[0.2875, 0.4972], [0.5628, 0.3999], [0.6657, 0.0718], [0.4864, 0.6685], [0.9045, 0.2822], [0.0023, 0.3536], [0.9742, 0.8817], [0.5001, 0.0103]]], [[[0.511, 0.7151], [0.7053, 0.4487], [0.9276, 0.4182], [0.0176, 0.3911], [0.054, 0.5453], [0.0178, 0.3822], [0.8783, 0.392], [0.4632, 0.2695]], [[0.3441, 0.5743], [0.368, 0.8826], [0.5717, 0.5091], [0.57, 0.6378], [0.3215, 0.2965], [0.5223, 0.6683], [0.9916, 0.1496], [0.9154, 0.7371]], [[0.9513, 0.4382], [0.1366, 0.6316], [0.5554, 0.618], [0.5031, 0.9531], [0.7498, 0.8022], [0.6665, 0.2211], [0.7869, 0.498], [0.5816, 0.9904]]]]])
in0Add16669 = tf.constant([[[0.4326, 0.1215], [0.1758, 0.5903]]])
in1Add16669 = tf.constant([[[0.4986, 0.5182], [0.9799, 0.1998]]])
in0Con47630 = tf.constant([[[[0.0436], [0.6129]], [[0.5196], [0.5659]]]])
in0Ave88337 = tf.constant([[[[0.513, 0.2068]]]])
in1Ave88337 = tf.constant([[[[0.6079, 0.5773]]]])
print (np.array2string(model.predict([in0Ave10224,in1Ave10224,in0Con44997,in0Up_67114,in0Min84052,in1Min84052,in0Con44943,in0Add16669,in1Add16669,in0Con47630,in0Ave88337,in1Ave88337],steps=1), separator=', '))


LAve10224 = average_layer([[[[0.782, 0.3756], [0.7345, 0.6345]]], [[[0.6115, 0.7917], [0.2799, 0.7515]]]], Ave10224), 
LRes30688 = reshape_layer(Ave10224, [2, 2, 1], Res30688), 
LRes51213 = reshape_layer(Res30688, [2, 2, 1, 1], Res51213), 
LZer94901 = zero_padding3D_layer(Res51213, 0, 0, 1, 0, 7, 0, Zer94901), 
LCon44997 = concatenate_layer([Zer94901,[[[[[0.7776, 0.9671], [0.7665, 0.7542], [0.1393, 0.4172], [0.7281, 0.5687], [0.8756, 0.079], [0.6311, 0.7718], [0.4814, 0.304], [0.148, 0.8193]], [[0.2827, 0.7169], [0.2318, 0.3988], [0.9406, 0.7149], [0.2102, 0.3433], [0.9365, 0.8731], [0.3709, 0.4979], [0.4133, 0.1217], [0.2233, 0.2014]], [[0.123, 0.7193], [0.6277, 0.4638], [0.1249, 0.9837], [0.0272, 0.6283], [0.3129, 0.4635], [0.0845, 0.288], [0.8103, 0.7316], [0.1316, 0.4984]]], [[[0.7651, 0.2674], [0.972, 0.8708], [0.1016, 0.9546], [0.7423, 0.9626], [0.3411, 0.5702], [0.7341, 0.492], [0.6909, 0.2613], [0.3052, 0.2924]], [[0.2191, 0.4184], [0.27, 0.6001], [0.082, 0.5389], [0.4455, 0.2167], [0.451, 0.6466], [0.354, 0.3297], [0.9998, 0.5819], [0.4329, 0.2851]], [[0.553, 0.0106], [0.4896, 0.408], [0.7733, 0.3144], [0.5499, 0.0447], [0.5715, 0.6165], [0.6997, 0.3597], [0.2567, 0.0772], [0.9929, 0.0639]]]]]], 4, Con44997), 
LUp_67114 = up_sampling3D_layer([[[[[1.772, 1.4526, 1.2823], [1.8833, 1.6661, 1.2485], [1.7211, 1.8211, 1.0488], [1.5488, 1.5806, 1.4553]]]]], 2, 1, 2, Up_67114), 
LZer70139 = zero_padding3D_layer(Up_67114, 0, 0, 2, 0, 0, 0, Zer70139), 
LMin84052 = minimum_layer([[[[[[0.951]], [[0.5476]]]]], [[[[[0.17]], [[0.0854]]]]]], Min84052), 
LZer46925 = zero_padding3D_layer(Min84052, 1, 0, 1, 0, 7, 0, Zer46925), 
LCon44943 = concatenate_layer([Zer46925,[[[[[0.6571, 0.0501], [0.9168, 0.9894], [0.3401, 0.6038], [0.8583, 0.8559], [0.9701, 0.4167], [0.2681, 0.321], [0.6067, 0.506], [0.2261, 0.07]], [[0.5716, 0.5237], [0.7287, 0.5857], [0.1273, 0.6484], [0.6358, 0.3777], [0.1847, 0.7564], [0.3422, 0.467], [0.6671, 0.8784], [0.4286, 0.0584]], [[0.2875, 0.4972], [0.5628, 0.3999], [0.6657, 0.0718], [0.4864, 0.6685], [0.9045, 0.2822], [0.0023, 0.3536], [0.9742, 0.8817], [0.5001, 0.0103]]], [[[0.511, 0.7151], [0.7053, 0.4487], [0.9276, 0.4182], [0.0176, 0.3911], [0.054, 0.5453], [0.0178, 0.3822], [0.8783, 0.392], [0.4632, 0.2695]], [[0.3441, 0.5743], [0.368, 0.8826], [0.5717, 0.5091], [0.57, 0.6378], [0.3215, 0.2965], [0.5223, 0.6683], [0.9916, 0.1496], [0.9154, 0.7371]], [[0.9513, 0.4382], [0.1366, 0.6316], [0.5554, 0.618], [0.5031, 0.9531], [0.7498, 0.8022], [0.6665, 0.2211], [0.7869, 0.498], [0.5816, 0.9904]]]]]], 4, Con44943), 
LMax15804 = maximum_layer([Zer70139,Con44943], Max15804), 
LAdd93095 = add_layer([Con44997,Max15804], Add93095), 
LRes38176 = reshape_layer(Add93095, [2, 3, 24], Res38176), 
LAdd16669 = add_layer([[[[0.4326, 0.1215], [0.1758, 0.5903]]], [[[0.4986, 0.5182], [0.9799, 0.1998]]]], Add16669), 
LRes603 = reshape_layer(Add16669, [2, 2, 1], Res603), 
LCon47630 = concatenate_layer([Res603,[[[[0.0436], [0.6129]], [[0.5196], [0.5659]]]]], 3, Con47630), 
LAve88337 = average_layer([[[[[0.513, 0.2068]]]], [[[[0.6079, 0.5773]]]]], Ave88337), 
LZer48320 = zero_padding2D_layer(Ave88337, 1, 0, 1, 0, Zer48320), 
LAdd35728 = add_layer([Con47630,Zer48320], Add35728), 
LZer89299 = zero_padding2D_layer(Add35728, 0, 0, 1, 0, Zer89299), 
LSub3234 = subtract_layer(Res38176,Zer89299, Sub3234), 
exec_layers([LAve10224,LRes30688,LRes51213,LZer94901,LCon44997,LUp_67114,LZer70139,LMin84052,LZer46925,LCon44943,LMax15804,LAdd93095,LRes38176,LAdd16669,LRes603,LCon47630,LAve88337,LZer48320,LAdd35728,LZer89299,LSub3234],["Ave10224","Res30688","Res51213","Zer94901","Con44997","Up_67114","Zer70139","Min84052","Zer46925","Con44943","Max15804","Add93095","Res38176","Add16669","Res603","Con47630","Ave88337","Zer48320","Add35728","Zer89299","Sub3234"],Sub3234,"Sub3234")

Actual (Unparsed): 
 ValueError(ValueError: Operands could not be broadcast together with shapes (2, 3, 24) (2, 3, 2)

Expected (Unparsed): 
Sub3234: Inconsistent Input Shapes, Input Shape [1,2,3,24]

Actual:   

Expected: 