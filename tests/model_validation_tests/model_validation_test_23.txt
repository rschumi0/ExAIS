import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max87066 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Max87066 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Up_55063 = tf.keras.layers.Input(shape=([1, 1, 4, 2]))

Max87066 = keras.layers.Maximum(name = 'Max87066', )([in0Max87066,in1Max87066])
Res23398 = keras.layers.Reshape((1, 2, 4), name = 'Res23398', )(Max87066)
Zer72197 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer72197', )(Res23398)
Res43226 = keras.layers.Reshape((3, 16), name = 'Res43226', )(Zer72197)
Zer54636 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer54636', )(Res43226)
Res1764 = keras.layers.Reshape((5, 16, 1), name = 'Res1764', )(Zer54636)
Res33164 = keras.layers.Reshape((5, 16, 1, 1), name = 'Res33164', )(Res1764)
Up_99504 = keras.layers.UpSampling3D(size=(1, 1, 2), name = 'Up_99504', )(Res33164)
Res51672 = keras.layers.Reshape((5, 16, 2), name = 'Res51672', )(Up_99504)
Res53648 = keras.layers.Reshape((5, 32), name = 'Res53648', )(Res51672)
Up_55063 = keras.layers.UpSampling3D(size=(2, 2, 2), name = 'Up_55063',  input_shape=(1, 1, 4, 2))(in0Up_55063)
Res6880 = keras.layers.Reshape((2, 2, 16), name = 'Res6880', )(Up_55063)
Res90275 = keras.layers.Reshape((2, 32), name = 'Res90275', )(Res6880)
Up_61756 = keras.layers.UpSampling1D(size=(2), name = 'Up_61756', )(Res90275)
Add14067 = keras.layers.Add(name = 'Add14067', )([Res53648,Up_61756])
model = tf.keras.models.Model(inputs=[in0Max87066,in1Max87066,in0Up_55063], outputs=Add14067)
in0Max87066 = tf.constant([[[[[0.2551, 0.4128], [0.5251, 0.7051]], [[0.459, 0.6115], [0.4332, 0.2974]]]]])
in1Max87066 = tf.constant([[[[[0.9094, 0.1408], [0.0206, 0.6006]], [[0.5926, 0.9909], [0.0851, 0.8297]]]]])
in0Up_55063 = tf.constant([[[[[1.3281, 1.6844], [1.7299, 1.7986], [1.2068, 1.3403], [1.0976, 1.4381]]]]])
print (np.array2string(model.predict([in0Max87066,in1Max87066,in0Up_55063],steps=1), separator=', '))


LMax87066 = maximum_layer([[[[[[0.2551, 0.4128], [0.5251, 0.7051]], [[0.459, 0.6115], [0.4332, 0.2974]]]]], [[[[[0.9094, 0.1408], [0.0206, 0.6006]], [[0.5926, 0.9909], [0.0851, 0.8297]]]]]], Max87066), 
LRes23398 = reshape_layer(Max87066, [1, 2, 4], Res23398), 
LZer72197 = zero_padding2D_layer(Res23398, 1, 1, 1, 1, Zer72197), 
LRes43226 = reshape_layer(Zer72197, [3, 16], Res43226), 
LZer54636 = zero_padding1D_layer(Res43226, 2, 0, Zer54636), 
LRes1764 = reshape_layer(Zer54636, [5, 16, 1], Res1764), 
LRes33164 = reshape_layer(Res1764, [5, 16, 1, 1], Res33164), 
LUp_99504 = up_sampling3D_layer(Res33164, 1, 1, 2, Up_99504), 
LRes51672 = reshape_layer(Up_99504, [5, 16, 2], Res51672), 
LRes53648 = reshape_layer(Res51672, [5, 32], Res53648), 
LUp_55063 = up_sampling3D_layer([[[[[1.3281, 1.6844], [1.7299, 1.7986], [1.2068, 1.3403], [1.0976, 1.4381]]]]], 2, 2, 2, Up_55063), 
LRes6880 = reshape_layer(Up_55063, [2, 2, 16], Res6880), 
LRes90275 = reshape_layer(Res6880, [2, 32], Res90275), 
LUp_61756 = up_sampling1D_layer(Res90275, 2, Up_61756), 
LAdd14067 = add_layer([Res53648,Up_61756], Add14067), 
exec_layers([LMax87066,LRes23398,LZer72197,LRes43226,LZer54636,LRes1764,LRes33164,LUp_99504,LRes51672,LRes53648,LUp_55063,LRes6880,LRes90275,LUp_61756,LAdd14067],["Max87066","Res23398","Zer72197","Res43226","Zer54636","Res1764","Res33164","Up_99504","Res51672","Res53648","Up_55063","Res6880","Res90275","Up_61756","Add14067"],Add14067,"Add14067")

Actual (Unparsed): 
 ValueError(ValueError: Operands could not be broadcast together with shapes (5, 32) (4, 32)

Expected (Unparsed): 
Add14067: Inconsistent Input Shapes, Input Shape [1,5,32]

Actual:   

Expected: 