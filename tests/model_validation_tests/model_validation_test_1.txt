import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0GRU92906 = tf.keras.layers.Input(shape=([1, 3]))

GRU92906 = keras.layers.RNN(keras.layers.GRUCell(1,reset_after=False, recurrent_activation='sigmoid', ), name = 'GRU92906', input_shape=(1, 3))(in0GRU92906)
Res70600 = keras.layers.Reshape((1, 1), name = 'Res70600', )(GRU92906)
Per37058 = keras.layers.Permute((1,2), name = 'Per37058',)(Res70600)
Res99690 = keras.layers.Reshape((1, 1, 1), name = 'Res99690', )(Per37058)
Cro48927 = keras.layers.Cropping3D(cropping=((1, 0), (0, 0), (0, 0)), name = 'Cro48927', )(Res99690)
model = tf.keras.models.Model(inputs=[in0GRU92906], outputs=Cro48927)
w = model.get_layer('GRU92906').get_weights() 
w[0] = np.array([[7, 4, 7], [5, 2, 8], [1, 7, 8]])
w[1] = np.array([[3, 6, 7]])
w[2] = np.array([1, 5, 10])
model.get_layer('GRU92906').set_weights(w) 
in0GRU92906 = tf.constant([[[4, 1, 1]]])
print (np.array2string(model.predict([in0GRU92906],steps=1), separator=', '))


LGRU92906 = grucell_layer([[[4, 1, 1]]],[[7, 4, 7], [5, 2, 8], [1, 7, 8]],[[3, 6, 7]],[1, 5, 10], false, GRU92906), 
LRes70600 = reshape_layer(GRU92906, [1, 1], Res70600), 
LPer37058 = permute_layer(Res70600, 1,2, Per37058), 
LRes99690 = reshape_layer(Per37058, [1, 1, 1], Res99690), 
LCro48927 = cropping3D_layer(Res99690, 1, 0, 0, 0, 0, 0, Cro48927), 
exec_layers([LGRU92906,LRes70600,LPer37058,LRes99690,LCro48927],["GRU92906","Res70600","Per37058","Res99690","Cro48927"],Cro48927,"Cro48927")

Actual (Unparsed): 
 ValueError('Input ' + str(input_index) + ' of layer ' +ValueError: Input 0 of layer Cro48927 is incompatible with the layer: expected ndim=5, found ndim=4. Full shape received: (None, 1, 1, 1)

Expected (Unparsed): 
Cro48927: Dimension error, Input Shape [1,1,1,1]

Actual:   

Expected: 