import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0LST26506 = tf.keras.layers.Input(shape=([3, 1]))
in0Con79965 = tf.keras.layers.Input(shape=([3, 1, 1, 2]))
in0Mul66777 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Mul66777 = tf.keras.layers.Input(shape=([2, 1, 1]))

LST26506 = keras.layers.RNN(keras.layers.LSTMCell(3,recurrent_activation='sigmoid', ), name = 'LST26506', input_shape=(3, 1))(in0LST26506)
Res15841 = keras.layers.Reshape((3, 1), name = 'Res15841', )(LST26506)
Res60814 = keras.layers.Reshape((3, 1, 1), name = 'Res60814', )(Res15841)
Res50269 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res50269', )(Res60814)
Con79965 = keras.layers.Concatenate(axis=4, name = 'Con79965', )([Res50269,in0Con79965])
Mul66777 = keras.layers.Multiply(name = 'Mul66777', )([in0Mul66777,in1Mul66777])
Res78565 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res78565', )(Mul66777)
Con65240 = keras.layers.Conv3D(3, (2, 1, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con65240', )(Res78565)
Zer6804 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (0, 0)), name = 'Zer6804', )(Con65240)
Ave44969 = keras.layers.Average(name = 'Ave44969', )([Con79965,Zer6804])
Con10696 = keras.layers.Conv3DTranspose(2, (1, 1, 1),strides=(1, 1, 1), padding='valid', name = 'Con10696', )(Ave44969)
model = tf.keras.models.Model(inputs=[in0LST26506,in0Con79965,in0Mul66777,in1Mul66777], outputs=Con10696)
w = model.get_layer('LST26506').get_weights() 
w[0] = np.array([[3, 8, 2, 1, 2, 2, 10, 1, 10, 4, 4, 5]])
w[1] = np.array([[8, 2, 3, 8, 3, 6, 3, 4, 8, 3, 4, 10], [8, 4, 9, 6, 2, 4, 7, 2, 1, 8, 9, 8], [5, 4, 2, 2, 9, 5, 7, 3, 6, 6, 7, 7]])
w[2] = np.array([5, 10, 4, 7, 10, 6, 6, 7, 6, 6, 7, 1])
model.get_layer('LST26506').set_weights(w) 
w = model.get_layer('Con65240').get_weights() 
w[0] = np.array([[[[[0.7542, 0.6059, 0.7992]]]], [[[[0.7266, 0.0671, 0.0371]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con65240').set_weights(w) 
w = model.get_layer('Con10696').get_weights() 
w[0] = np.array([[[[[0.5724, 0.2925], [0.2802, 0.7377]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con10696').set_weights(w) 
in0LST26506 = tf.constant([[[4], [6], [4]]])
in0Con79965 = tf.constant([[[[[0.3971, 0.386]]], [[[0.8746, 0.5306]]], [[[0.0347, 0.1415]]]]])
in0Mul66777 = tf.constant([[[[0.6143]], [[0.7977]]]])
in1Mul66777 = tf.constant([[[[0.119]], [[0.9263]]]])
print (np.array2string(model.predict([in0LST26506,in0Con79965,in0Mul66777,in1Mul66777],steps=1), separator=', '))


LLST26506 = lstmcell_layer([[[4], [6], [4]]],[[3, 8, 2, 1, 2, 2, 10, 1, 10, 4, 4, 5]],[[8, 2, 3, 8, 3, 6, 3, 4, 8, 3, 4, 10], [8, 4, 9, 6, 2, 4, 7, 2, 1, 8, 9, 8], [5, 4, 2, 2, 9, 5, 7, 3, 6, 6, 7, 7]],[5, 10, 4, 7, 10, 6, 6, 7, 6, 6, 7, 1], LST26506), 
LRes15841 = reshape_layer(LST26506, [3, 1], Res15841), 
LRes60814 = reshape_layer(Res15841, [3, 1, 1], Res60814), 
LRes50269 = reshape_layer(Res60814, [3, 1, 1, 1], Res50269), 
LCon79965 = concatenate_layer([Res50269,[[[[[0.3971, 0.386]]], [[[0.8746, 0.5306]]], [[[0.0347, 0.1415]]]]]], 4, Con79965), 
LMul66777 = multiply_layer([[[[[0.6143]], [[0.7977]]]], [[[[0.119]], [[0.9263]]]]], Mul66777), 
LRes78565 = reshape_layer(Mul66777, [2, 1, 1, 1], Res78565), 
LCon65240 = conv3D_layer(Res78565, 2, 1, 1,[[[[[0.7542, 0.6059, 0.7992]]]], [[[[0.7266, 0.0671, 0.0371]]]]],[0, 0, 0], 1, 1, 1, true, 1, 1, 1, Con65240), 
LZer6804 = zero_padding3D_layer(Con65240, 1, 0, 0, 0, 0, 0, Zer6804), 
LAve44969 = average_layer([Con79965,Zer6804], Ave44969), 
LCon10696 = conv3D_transpose_layer(Ave44969, 1, 1, 1,[[[[[0.5724, 0.2925], [0.2802, 0.7377]]]]],[0, 0], 1, 1, 1, false, Con10696), 
exec_layers([LLST26506,LRes15841,LRes60814,LRes50269,LCon79965,LMul66777,LRes78565,LCon65240,LZer6804,LAve44969,LCon10696],["LST26506","Res15841","Res60814","Res50269","Con79965","Mul66777","Res78565","Con65240","Zer6804","Ave44969","Con10696"],Con10696,"Con10696")

Actual (Unparsed): 
 ValueError(ValueError: Layer weight shape (1, 1, 1, 2, 3) not compatible with provided weight shape (1, 1, 1, 2, 2)

Expected (Unparsed): 
Con10696: Argument Error, Input Shape [1,3,1,1,3]

Actual:   

Expected: 