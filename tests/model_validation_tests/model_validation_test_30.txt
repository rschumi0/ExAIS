import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul14607 = tf.keras.layers.Input(shape=([2, 2]))
in1Mul14607 = tf.keras.layers.Input(shape=([2, 2]))
in0Dot74317 = tf.keras.layers.Input(shape=([3]))
in1Dot74317 = tf.keras.layers.Input(shape=([3]))

Mul14607 = keras.layers.Multiply(name = 'Mul14607', )([in0Mul14607,in1Mul14607])
Res61081 = keras.layers.Reshape((2, 2, 1), name = 'Res61081', )(Mul14607)
Max29684 = keras.layers.MaxPool2D(pool_size=(1, 1), name = 'Max29684', )(Res61081)
Res23111 = keras.layers.Reshape((2, 2), name = 'Res23111', )(Max29684)
Con10019 = keras.layers.Conv1D(2, (2),strides=(4), padding='valid', dilation_rate=(1), name = 'Con10019', )(Res23111)
Dot74317 = keras.layers.Dot(axes=(1, 1), name = 'Dot74317', )([in0Dot74317,in1Dot74317])
Bat77659 = keras.layers.BatchNormalization(axis=1, epsilon=0.9241541365860212,  name = 'Bat77659', )(Dot74317)
Res78134 = keras.layers.Reshape((1, 1), name = 'Res78134', )(Bat77659)
Con86796 = keras.layers.Conv1D(3, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con86796', )(Res78134)
Dot68786 = keras.layers.Dot(axes=(2, 2), name = 'Dot68786', )([Con10019,Con86796])
model = tf.keras.models.Model(inputs=[in0Mul14607,in1Mul14607,in0Dot74317,in1Dot74317], outputs=Dot68786)
w = model.get_layer('Con10019').get_weights() 
w[0] = np.array([[[0.4923, 0.3554], [0.7177, 0.9117]], [[0.445, 0.8408], [0.318, 0.9821]]])
w[1] = np.array([0, 0])
model.get_layer('Con10019').set_weights(w) 
w = model.get_layer('Bat77659').get_weights() 
w[0] = np.array([0.1775])
w[1] = np.array([0.7085])
w[2] = np.array([0.8002])
w[3] = np.array([0.8785])
model.get_layer('Bat77659').set_weights(w) 
w = model.get_layer('Con86796').get_weights() 
w[0] = np.array([[[0.0605, 0.2291, 0.4584]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con86796').set_weights(w) 
in0Mul14607 = tf.constant([[[0.8847, 0.3463], [0.1647, 0.1156]]])
in1Mul14607 = tf.constant([[[0.8801, 0.1324], [0.0872, 0.5812]]])
in0Dot74317 = tf.constant([[0.5291, 0.9737, 0.2886]])
in1Dot74317 = tf.constant([[0.1522, 0.8128, 0.3]])
print (np.array2string(model.predict([in0Mul14607,in1Mul14607,in0Dot74317,in1Dot74317],steps=1), separator=', '))


LMul14607 = multiply_layer([[[[0.8847, 0.3463], [0.1647, 0.1156]]], [[[0.8801, 0.1324], [0.0872, 0.5812]]]], Mul14607), 
LRes61081 = reshape_layer(Mul14607, [2, 2, 1], Res61081), 
LMax29684 = max_pool2D_layer(Res61081, 1, 1, Max29684), 
LRes23111 = reshape_layer(Max29684, [2, 2], Res23111), 
LCon10019 = conv1D_layer(Res23111, 2,[[[0.4923, 0.3554], [0.7177, 0.9117]], [[0.445, 0.8408], [0.318, 0.9821]]],[0, 0], 4, false, 1, Con10019), 
LDot74317 = dot_layer([[0.5291, 0.9737, 0.2886]], [[0.1522, 0.8128, 0.3]], 1, 1, Dot74317), 
LBat77659 = batch_normalization_layer(Dot74317, 1, 0.9241541365860212, [0.1775], [0.7085], [0.8002], [0.8785], Bat77659), 
LRes78134 = reshape_layer(Bat77659, [1, 1], Res78134), 
LCon86796 = conv1D_layer(Res78134, 1,[[[0.0605, 0.2291, 0.4584]]],[0, 0, 0], 1, false, 1, Con86796), 
LDot68786 = dot_layer(Con10019,Con86796, 2, 2, Dot68786), 
exec_layers([LMul14607,LRes61081,LMax29684,LRes23111,LCon10019,LDot74317,LBat77659,LRes78134,LCon86796,LDot68786],["Mul14607","Res61081","Max29684","Res23111","Con10019","Dot74317","Bat77659","Res78134","Con86796","Dot68786"],Dot68786,"Dot68786")

Actual (Unparsed): 
 ValueError('Dimension incompatibility 'ValueError: Dimension incompatibility 2 != 3. Layer shapes: (None, 1, 2), (None, 1, 3). Chosen axes: 2, 2

Expected (Unparsed): 
Dot68786: Dot Axis Error, Input Shape [1,1,2]

Actual:   

Expected: 