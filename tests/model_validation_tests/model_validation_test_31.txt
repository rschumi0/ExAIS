import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer71968 = tf.keras.layers.Input(shape=([4, 3, 4, 1]))
in0Ave41578 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Ave41578 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con36091 = tf.keras.layers.Input(shape=([6, 5, 4]))

Zer71968 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer71968',  input_shape=(4, 3, 4, 1))(in0Zer71968)
Res24787 = keras.layers.Reshape((6, 5, 6), name = 'Res24787', )(Zer71968)
Ave41578 = keras.layers.Average(name = 'Ave41578', )([in0Ave41578,in1Ave41578])
Zer87098 = keras.layers.ZeroPadding2D(padding=((4, 0), (3, 0)), name = 'Zer87098', )(Ave41578)
Con36091 = keras.layers.Concatenate(axis=3, name = 'Con36091', )([Zer87098,in0Con36091])
Mul49591 = keras.layers.Multiply(name = 'Mul49591', )([Res24787,Con36091])
Con59001 = keras.layers.Conv3D(4, (1, 2, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con59001', )(Mul49591)
model = tf.keras.models.Model(inputs=[in0Zer71968,in0Ave41578,in1Ave41578,in0Con36091], outputs=Con59001)
w = model.get_layer('Con59001').get_weights() 
w[0] = np.array([[[[[0.6494, 0.5658, 0.2278, 0.9856]]], [[[0.2945, 0.6689, 0.9332, 0.2942]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con59001').set_weights(w) 
in0Zer71968 = tf.constant([[[[[1.9749], [1.4834], [1.5476], [1.779]], [[1.829], [1.655], [1.0515], [1.9111]], [[1.7615], [1.2643], [1.2699], [1.2261]]], [[[1.4411], [1.5401], [1.0235], [1.3176]], [[1.0331], [1.1528], [1.3696], [1.1501]], [[1.7097], [1.518], [1.6274], [1.3703]]], [[[1.9434], [1.7107], [1.135], [1.4925]], [[1.6331], [1.7563], [1.4053], [1.4191]], [[1.0371], [1.4569], [1.7825], [1.293]]], [[[1.6902], [1.8489], [1.9216], [1.2518]], [[1.9672], [1.845], [1.4145], [1.258]], [[1.724], [1.6079], [1.6693], [1.8087]]]]])
in0Ave41578 = tf.constant([[[[0.4912, 0.7304], [0.7102, 0.9984]], [[0.0287, 0.3465], [0.914, 0.1009]]]])
in1Ave41578 = tf.constant([[[[0.6572, 0.892], [0.822, 0.566]], [[0.6745, 0.3441], [0.0742, 0.0847]]]])
in0Con36091 = tf.constant([[[[0.2405, 0.3855, 0.5508, 0.5961], [0.5648, 0.8832, 0.8164, 0.4356], [0.7465, 0.2558, 0.6058, 0.4444], [0.3963, 0.5025, 0.0368, 0.7094], [0.4898, 0.0049, 0.227, 0.3089]], [[0.9816, 0.258, 0.5625, 0.9511], [0.585, 0.2939, 0.2852, 0.8296], [0.288, 0.7863, 0.9237, 0.2684], [0.7496, 0.7177, 0.6225, 0.7029], [0.4539, 0.797, 0.6061, 0.4223]], [[0.3859, 0.5198, 0.8598, 0.2869], [0.0374, 0.8786, 0.6015, 0.3235], [0.7517, 0.2529, 0.2747, 0.7035], [0.7709, 0.932, 0.6027, 0.1119], [0.8655, 0.0605, 0.7077, 0.9252]], [[0.0903, 0.5322, 0.423, 0.9367], [0.0405, 0.506, 0.7034, 0.5877], [0.9597, 0.7684, 0.4733, 0.7969], [0.1917, 0.1244, 0.3444, 0.5127], [0.76, 0.3642, 0.3793, 0.0576]], [[0.3108, 0.123, 0.4841, 0.1829], [0.2608, 0.1276, 0.0692, 0.5046], [0.7534, 0.9067, 0.3357, 0.6549], [0.947, 0.0326, 0.9157, 0.0503], [0.2333, 0.3534, 0.6243, 0.6492]], [[0.2164, 0.4827, 0.7633, 0.4552], [0.6677, 0.0155, 0.7603, 0.8055], [0.2214, 0.5573, 0.9228, 0.677], [0.2689, 0.6734, 0.7387, 0.3424], [0.3719, 0.2905, 0.4665, 0.7118]]]])
print (np.array2string(model.predict([in0Zer71968,in0Ave41578,in1Ave41578,in0Con36091],steps=1), separator=', '))


LZer71968 = zero_padding3D_layer([[[[[1.9749], [1.4834], [1.5476], [1.779]], [[1.829], [1.655], [1.0515], [1.9111]], [[1.7615], [1.2643], [1.2699], [1.2261]]], [[[1.4411], [1.5401], [1.0235], [1.3176]], [[1.0331], [1.1528], [1.3696], [1.1501]], [[1.7097], [1.518], [1.6274], [1.3703]]], [[[1.9434], [1.7107], [1.135], [1.4925]], [[1.6331], [1.7563], [1.4053], [1.4191]], [[1.0371], [1.4569], [1.7825], [1.293]]], [[[1.6902], [1.8489], [1.9216], [1.2518]], [[1.9672], [1.845], [1.4145], [1.258]], [[1.724], [1.6079], [1.6693], [1.8087]]]]], 1, 1, 1, 1, 1, 1, Zer71968), 
LRes24787 = reshape_layer(Zer71968, [6, 5, 6], Res24787), 
LAve41578 = average_layer([[[[[0.4912, 0.7304], [0.7102, 0.9984]], [[0.0287, 0.3465], [0.914, 0.1009]]]], [[[[0.6572, 0.892], [0.822, 0.566]], [[0.6745, 0.3441], [0.0742, 0.0847]]]]], Ave41578), 
LZer87098 = zero_padding2D_layer(Ave41578, 4, 0, 3, 0, Zer87098), 
LCon36091 = concatenate_layer([Zer87098,[[[[0.2405, 0.3855, 0.5508, 0.5961], [0.5648, 0.8832, 0.8164, 0.4356], [0.7465, 0.2558, 0.6058, 0.4444], [0.3963, 0.5025, 0.0368, 0.7094], [0.4898, 0.0049, 0.227, 0.3089]], [[0.9816, 0.258, 0.5625, 0.9511], [0.585, 0.2939, 0.2852, 0.8296], [0.288, 0.7863, 0.9237, 0.2684], [0.7496, 0.7177, 0.6225, 0.7029], [0.4539, 0.797, 0.6061, 0.4223]], [[0.3859, 0.5198, 0.8598, 0.2869], [0.0374, 0.8786, 0.6015, 0.3235], [0.7517, 0.2529, 0.2747, 0.7035], [0.7709, 0.932, 0.6027, 0.1119], [0.8655, 0.0605, 0.7077, 0.9252]], [[0.0903, 0.5322, 0.423, 0.9367], [0.0405, 0.506, 0.7034, 0.5877], [0.9597, 0.7684, 0.4733, 0.7969], [0.1917, 0.1244, 0.3444, 0.5127], [0.76, 0.3642, 0.3793, 0.0576]], [[0.3108, 0.123, 0.4841, 0.1829], [0.2608, 0.1276, 0.0692, 0.5046], [0.7534, 0.9067, 0.3357, 0.6549], [0.947, 0.0326, 0.9157, 0.0503], [0.2333, 0.3534, 0.6243, 0.6492]], [[0.2164, 0.4827, 0.7633, 0.4552], [0.6677, 0.0155, 0.7603, 0.8055], [0.2214, 0.5573, 0.9228, 0.677], [0.2689, 0.6734, 0.7387, 0.3424], [0.3719, 0.2905, 0.4665, 0.7118]]]]], 3, Con36091), 
LMul49591 = multiply_layer([Res24787,Con36091], Mul49591), 
LCon59001 = conv3D_layer(Mul49591, 1, 2, 1,[[[[[0.6494, 0.5658, 0.2278, 0.9856]]], [[[0.2945, 0.6689, 0.9332, 0.2942]]]]],[0, 0, 0, 0], 1, 1, 1, true, 1, 1, 1, Con59001), 
exec_layers([LZer71968,LRes24787,LAve41578,LZer87098,LCon36091,LMul49591,LCon59001],["Zer71968","Res24787","Ave41578","Zer87098","Con36091","Mul49591","Con59001"],Con59001,"Con59001")

Actual (Unparsed): 
 ValueError('Input ' + str(input_index) + ' of layer ' +ValueError: Input 0 of layer Con59001 is incompatible with the layer: : expected min_ndim=5, found ndim=4. Full shape received: (None, 6, 5, 6)

Expected (Unparsed): 
Con59001: Dimension error, Input Shape [1,6,5,6]

Actual:   

Expected: 