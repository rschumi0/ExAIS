import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0LST44005 = tf.keras.layers.Input(shape=([2, 3]))
in0Con54299 = tf.keras.layers.Input(shape=([2, 1]))
in0Ave20972 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave20972 = tf.keras.layers.Input(shape=([2, 1]))

LST44005 = keras.layers.RNN(keras.layers.LSTMCell(1,recurrent_activation='sigmoid', ), name = 'LST44005', input_shape=(2, 3))(in0LST44005)
Res73126 = keras.layers.Reshape((1, 1), name = 'Res73126', )(LST44005)
Glo79046 = keras.layers.GlobalMaxPool1D(name = 'Glo79046', )(Res73126)
Res80301 = keras.layers.Reshape((1, 1), name = 'Res80301', )(Glo79046)
Res96306 = keras.layers.Reshape((1, 1, 1), name = 'Res96306', )(Res80301)
Con62303 = keras.layers.Conv2DTranspose(2, (1, 1),strides=(1, 1), padding='valid', name = 'Con62303', )(Res96306)
Res96707 = keras.layers.Reshape((1, 2), name = 'Res96707', )(Con62303)
Zer70892 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer70892', )(Res96707)
Con54299 = keras.layers.Concatenate(axis=2, name = 'Con54299', )([Zer70892,in0Con54299])
Ave20972 = keras.layers.Average(name = 'Ave20972', )([in0Ave20972,in1Ave20972])
Dot85720 = keras.layers.Dot(axes=(1, 1), name = 'Dot85720', )([Con54299,Ave20972])
Sep87714 = keras.layers.SeparableConv2D(3, (1, 1),strides=(1, 1), padding='same', name = 'Sep87714', )(Dot85720)
model = tf.keras.models.Model(inputs=[in0LST44005,in0Con54299,in0Ave20972,in1Ave20972], outputs=Sep87714)
w = model.get_layer('LST44005').get_weights() 
w[0] = np.array([[6, 8, 4, 1], [2, 6, 3, 1], [8, 1, 8, 3]])
w[1] = np.array([[6, 2, 3, 1]])
w[2] = np.array([4, 2, 5, 3])
model.get_layer('LST44005').set_weights(w) 
w = model.get_layer('Con62303').get_weights() 
w[0] = np.array([[[[0.7159], [0.1468]]]])
w[1] = np.array([0, 0])
model.get_layer('Con62303').set_weights(w) 
w = model.get_layer('Sep87714').get_weights() 
w[0] = np.array([[[[0.063]]]])
w[1] = np.array([[[[0.7802, 0.3649, 0.6355]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep87714').set_weights(w) 
in0LST44005 = tf.constant([[[4, 9, 7], [3, 8, 4]]])
in0Con54299 = tf.constant([[[0.7514], [0.3646]]])
in0Ave20972 = tf.constant([[[0.6308], [0.7025]]])
in1Ave20972 = tf.constant([[[0.1856], [0.6795]]])
print (np.array2string(model.predict([in0LST44005,in0Con54299,in0Ave20972,in1Ave20972],steps=1), separator=', '))


LLST44005 = lstmcell_layer([[[4, 9, 7], [3, 8, 4]]],[[6, 8, 4, 1], [2, 6, 3, 1], [8, 1, 8, 3]],[[6, 2, 3, 1]],[4, 2, 5, 3], LST44005), 
LRes73126 = reshape_layer(LST44005, [1, 1], Res73126), 
LGlo79046 = global_max_pool1D_layer(Res73126, Glo79046), 
LRes80301 = reshape_layer(Glo79046, [1, 1], Res80301), 
LRes96306 = reshape_layer(Res80301, [1, 1, 1], Res96306), 
LCon62303 = conv2D_transpose_layer(Res96306, 1, 1,[[[[0.7159], [0.1468]]]],[0, 0], 1, 1, false, Con62303), 
LRes96707 = reshape_layer(Con62303, [1, 2], Res96707), 
LZer70892 = zero_padding1D_layer(Res96707, 1, 0, Zer70892), 
LCon54299 = concatenate_layer([Zer70892,[[[0.7514], [0.3646]]]], 2, Con54299), 
LAve20972 = average_layer([[[[0.6308], [0.7025]]], [[[0.1856], [0.6795]]]], Ave20972), 
LDot85720 = dot_layer(Con54299,Ave20972, 1, 1, Dot85720), 
LSep87714 = separable_conv2D_layer(Dot85720, 1, 1,[[[[[0.063]]]],[[[[0.7802, 0.3649, 0.6355]]]]],[0, 0, 0], 1, 1, true, Sep87714), 
exec_layers([LLST44005,LRes73126,LGlo79046,LRes80301,LRes96306,LCon62303,LRes96707,LZer70892,LCon54299,LAve20972,LDot85720,LSep87714],["LST44005","Res73126","Glo79046","Res80301","Res96306","Con62303","Res96707","Zer70892","Con54299","Ave20972","Dot85720","Sep87714"],Sep87714,"Sep87714")

Actual (Unparsed): 
 ValueError('Input ' + str(input_index) + ' of layer ' +ValueError: Input 0 of layer Sep87714 is incompatible with the layer: : expected min_ndim=4, found ndim=3. Full shape received: (None, 3, 1)

Expected (Unparsed): 
Sep87714: Dimension error, Input Shape [1,3,1]

Actual:   

Expected: 