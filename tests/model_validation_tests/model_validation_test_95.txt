import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub98632 = tf.keras.layers.Input(shape=([3, 2, 2, 2]))
in1Sub98632 = tf.keras.layers.Input(shape=([3, 2, 2, 2]))

Sub98632 = keras.layers.Subtract(name = 'Sub98632', )([in0Sub98632,in1Sub98632])
Res99015 = keras.layers.Reshape((3, 2, 4), name = 'Res99015', )(Sub98632)
Res84150 = keras.layers.Reshape((3, 8), name = 'Res84150', )(Res99015)
LST5972 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST5972', )(Res84150)
Res73027 = keras.layers.Reshape((3, 1), name = 'Res73027', )(LST5972)
Loc36946 = keras.layers.LocallyConnected2D(2, (1, 2),strides=(1, 1), name = 'Loc36946', )(Res73027)
model = tf.keras.models.Model(inputs=[in0Sub98632,in1Sub98632], outputs=Loc36946)
w = model.get_layer('LST5972').get_weights() 
w[0] = np.array([[8, 8, 5, 9, 5, 9, 2, 5, 9, 10, 4, 2], [3, 6, 2, 8, 9, 7, 3, 1, 1, 9, 3, 8], [4, 1, 2, 8, 9, 3, 8, 7, 4, 7, 6, 3], [3, 3, 9, 10, 5, 4, 9, 5, 5, 5, 5, 5], [4, 2, 1, 10, 5, 10, 2, 3, 10, 10, 6, 4], [1, 2, 10, 1, 4, 4, 9, 1, 1, 3, 9, 4], [9, 6, 9, 2, 3, 9, 10, 2, 7, 7, 2, 10], [1, 2, 6, 8, 6, 8, 2, 9, 7, 1, 2, 4]])
w[1] = np.array([[7, 9, 1, 2, 7, 3, 9, 5, 6, 4, 7, 6], [5, 7, 8, 3, 5, 3, 1, 4, 10, 5, 3, 3], [5, 4, 7, 3, 3, 4, 7, 6, 1, 2, 9, 1]])
w[2] = np.array([8, 8, 9, 8, 3, 5, 7, 6, 1, 4, 6, 4])
model.get_layer('LST5972').set_weights(w) 
w = model.get_layer('Loc36946').get_weights() 
w[0] = np.array([[[0.3478, 0.6381], [0.4601, 0.8511]]])
w[1] = np.array([[[0, 0]]])
model.get_layer('Loc36946').set_weights(w) 
in0Sub98632 = tf.constant([[[[[0.9124, 0.4828], [0.8724, 0.0211]], [[0.918, 0.3965], [0.7858, 0.5308]]], [[[0.1339, 0.1589], [0.1697, 0.03]], [[0.3852, 0.7483], [0.0907, 0.0308]]], [[[0.7697, 0.652], [0.3904, 0.1241]], [[0.0346, 0.11], [0.0287, 0.3219]]]]])
in1Sub98632 = tf.constant([[[[[0.0486, 0.8746], [0.9207, 0.6734]], [[0.4748, 0.8489], [0.3372, 0.7139]]], [[[0.933, 0.4332], [0.7588, 0.0451]], [[0.6518, 0.6609], [0.9254, 0.3554]]], [[[0.854, 0.2375], [0.7089, 0.4943]], [[0.8913, 0.4101], [0.3494, 0.7859]]]]])
print (np.array2string(model.predict([in0Sub98632,in1Sub98632],steps=1), separator=', '))


LSub98632 = subtract_layer([[[[[0.9124, 0.4828], [0.8724, 0.0211]], [[0.918, 0.3965], [0.7858, 0.5308]]], [[[0.1339, 0.1589], [0.1697, 0.03]], [[0.3852, 0.7483], [0.0907, 0.0308]]], [[[0.7697, 0.652], [0.3904, 0.1241]], [[0.0346, 0.11], [0.0287, 0.3219]]]]], [[[[[0.0486, 0.8746], [0.9207, 0.6734]], [[0.4748, 0.8489], [0.3372, 0.7139]]], [[[0.933, 0.4332], [0.7588, 0.0451]], [[0.6518, 0.6609], [0.9254, 0.3554]]], [[[0.854, 0.2375], [0.7089, 0.4943]], [[0.8913, 0.4101], [0.3494, 0.7859]]]]], Sub98632), 
LRes99015 = reshape_layer(Sub98632, [3, 2, 4], Res99015), 
LRes84150 = reshape_layer(Res99015, [3, 8], Res84150), 
LLST5972 = lstm_layer(Res84150,[[8, 8, 5, 9, 5, 9, 2, 5, 9, 10, 4, 2], [3, 6, 2, 8, 9, 7, 3, 1, 1, 9, 3, 8], [4, 1, 2, 8, 9, 3, 8, 7, 4, 7, 6, 3], [3, 3, 9, 10, 5, 4, 9, 5, 5, 5, 5, 5], [4, 2, 1, 10, 5, 10, 2, 3, 10, 10, 6, 4], [1, 2, 10, 1, 4, 4, 9, 1, 1, 3, 9, 4], [9, 6, 9, 2, 3, 9, 10, 2, 7, 7, 2, 10], [1, 2, 6, 8, 6, 8, 2, 9, 7, 1, 2, 4]],[[7, 9, 1, 2, 7, 3, 9, 5, 6, 4, 7, 6], [5, 7, 8, 3, 5, 3, 1, 4, 10, 5, 3, 3], [5, 4, 7, 3, 3, 4, 7, 6, 1, 2, 9, 1]],[8, 8, 9, 8, 3, 5, 7, 6, 1, 4, 6, 4], LST5972), 
LRes73027 = reshape_layer(LST5972, [3, 1], Res73027), 
LLoc36946 = locally_connected2D_layer(Res73027, 1, 2,[[[0.3478, 0.6381], [0.4601, 0.8511]]],[[[0, 0]]], 1, 1, Loc36946), 
exec_layers([LSub98632,LRes99015,LRes84150,LLST5972,LRes73027,LLoc36946],["Sub98632","Res99015","Res84150","LST5972","Res73027","Loc36946"],Loc36946,"Loc36946")

Actual (Unparsed): 
 ValueError('Input ' + str(input_index) + ' of layer ' +ValueError: Input 0 of layer Loc36946 is incompatible with the layer: expected ndim=4, found ndim=3. Full shape received: (None, 3, 1)

Expected (Unparsed): 
Loc36946: Dimension error, Input Shape [1,3,1]

Actual:   

Expected: 