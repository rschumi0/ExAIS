import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max95223 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Max95223 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Con99232 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Max6222 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Max6222 = tf.keras.layers.Input(shape=([1, 2, 2]))

Max95223 = keras.layers.Maximum(name = 'Max95223', )([in0Max95223,in1Max95223])
Res38872 = keras.layers.Reshape((1, 1, 1), name = 'Res38872', )(Max95223)
Zer51072 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer51072', )(Res38872)
Con99232 = keras.layers.Concatenate(axis=3, name = 'Con99232', )([Zer51072,in0Con99232])
Max6222 = keras.layers.Maximum(name = 'Max6222', )([in0Max6222,in1Max6222])
Mul87861 = keras.layers.Multiply(name = 'Mul87861', )([Con99232,Max6222])
Res43563 = keras.layers.Reshape((1, 4), name = 'Res43563', )(Mul87861)
LST33882 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST33882', )(Res43563)
Res41674 = keras.layers.Reshape((3, 1), name = 'Res41674', )(LST33882)
Zer93390 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer93390', )(Res41674)
model = tf.keras.models.Model(inputs=[in0Max95223,in1Max95223,in0Con99232,in0Max6222,in1Max6222], outputs=Zer93390)
w = model.get_layer('LST33882').get_weights() 
w[0] = np.array([[1, 5, 3, 6, 6, 8, 9, 1, 1, 6, 8, 4], [10, 1, 9, 6, 7, 10, 8, 10, 10, 7, 10, 2], [1, 2, 2, 2, 1, 4, 9, 4, 2, 4, 2, 8], [9, 6, 7, 3, 7, 1, 9, 6, 10, 6, 7, 4]])
w[1] = np.array([[3, 4, 9, 4, 4, 7, 3, 9, 6, 3, 2, 6], [2, 3, 10, 6, 5, 7, 4, 1, 5, 5, 6, 6], [8, 5, 6, 10, 6, 10, 9, 6, 3, 9, 4, 9]])
w[2] = np.array([3, 3, 9, 9, 4, 1, 1, 6, 10, 4, 1, 1])
model.get_layer('LST33882').set_weights(w) 
in0Max95223 = tf.constant([[[[[0.938]]]]])
in1Max95223 = tf.constant([[[[[0.6605]]]]])
in0Con99232 = tf.constant([[[[0.5275], [0.7418]]]])
in0Max6222 = tf.constant([[[[0.3639, 0.3292], [0.0472, 0.5907]]]])
in1Max6222 = tf.constant([[[[0.2731, 0.9943], [0.8699, 0.4411]]]])
print (np.array2string(model.predict([in0Max95223,in1Max95223,in0Con99232,in0Max6222,in1Max6222],steps=1), separator=', '))


LMax95223 = maximum_layer([[[[[[0.938]]]]], [[[[[0.6605]]]]]], Max95223), 
LRes38872 = reshape_layer(Max95223, [1, 1, 1], Res38872), 
LZer51072 = zero_padding2D_layer(Res38872, 0, 0, 1, 0, Zer51072), 
LCon99232 = concatenate_layer([Zer51072,[[[[0.5275], [0.7418]]]]], 3, Con99232), 
LMax6222 = maximum_layer([[[[[0.3639, 0.3292], [0.0472, 0.5907]]]], [[[[0.2731, 0.9943], [0.8699, 0.4411]]]]], Max6222), 
LMul87861 = multiply_layer([Con99232,Max6222], Mul87861), 
LRes43563 = reshape_layer(Mul87861, [1, 4], Res43563), 
LLST33882 = lstm_layer(Res43563,[[1, 5, 3, 6, 6, 8, 9, 1, 1, 6, 8, 4], [10, 1, 9, 6, 7, 10, 8, 10, 10, 7, 10, 2], [1, 2, 2, 2, 1, 4, 9, 4, 2, 4, 2, 8], [9, 6, 7, 3, 7, 1, 9, 6, 10, 6, 7, 4]],[[3, 4, 9, 4, 4, 7, 3, 9, 6, 3, 2, 6], [2, 3, 10, 6, 5, 7, 4, 1, 5, 5, 6, 6], [8, 5, 6, 10, 6, 10, 9, 6, 3, 9, 4, 9]],[3, 3, 9, 9, 4, 1, 1, 6, 10, 4, 1, 1], LST33882), 
LRes41674 = reshape_layer(LST33882, [3, 1], Res41674), 
LZer93390 = zero_padding2D_layer(Res41674, 1, 1, 1, 1, Zer93390), 
exec_layers([LMax95223,LRes38872,LZer51072,LCon99232,LMax6222,LMul87861,LRes43563,LLST33882,LRes41674,LZer93390],["Max95223","Res38872","Zer51072","Con99232","Max6222","Mul87861","Res43563","LST33882","Res41674","Zer93390"],Zer93390,"Zer93390")

Actual (Unparsed): 
 ValueError('Input ' + str(input_index) + ' of layer ' +ValueError: Input 0 of layer Zer93390 is incompatible with the layer: expected ndim=4, found ndim=3. Full shape received: (None, 3, 1)

Expected (Unparsed): 
Zer93390: Dimension error, Input Shape [1,3,1]

Actual:   

Expected: 