import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot97543 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot97543 = tf.keras.layers.Input(shape=([3, 2]))

Dot97543 = keras.layers.Dot(axes=(2, 2), name = 'Dot97543', )([in0Dot97543,in1Dot97543])
PRe35572 = keras.layers.PReLU(name = 'PRe35572', )(Dot97543)
model = tf.keras.models.Model(inputs=[in0Dot97543,in1Dot97543], outputs=PRe35572)
w = model.get_layer('PRe35572').get_weights() 
w[0] = np.array([[[0.9184, 0.3816], [0.8357, 0.8153]]])
model.get_layer('PRe35572').set_weights(w) 
in0Dot97543 = tf.constant([[[0.0014, 0.2728], [0.7342, 0.1694], [0.4017, 0.1768]]])
in1Dot97543 = tf.constant([[[0.3722, 0.9943], [0.6413, 0.0022], [0.0416, 0.6343]]])
print (np.array2string(model.predict([in0Dot97543,in1Dot97543],steps=1), separator=', '))


LDot97543 = dot_layer([[[0.0014, 0.2728], [0.7342, 0.1694], [0.4017, 0.1768]]], [[[0.3722, 0.9943], [0.6413, 0.0022], [0.0416, 0.6343]]], 2, 2, Dot97543), 
LPRe35572 = prelu_layer(Dot97543, [[[0.9184, 0.3816], [0.8357, 0.8153]]], PRe35572), 
exec_layers([LDot97543,LPRe35572],["Dot97543","PRe35572"],PRe35572,"PRe35572")

Actual (Unparsed): 
 ValueError(ValueError: Layer weight shape (3, 3) not compatible with provided weight shape (1, 2, 2)

Expected (Unparsed): 
PRe35572: Inconsistent Input Dimensions, Input Shape [1,3,3]

Actual:   

Expected: 