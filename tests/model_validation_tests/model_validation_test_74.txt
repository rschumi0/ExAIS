import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add80962 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Add80962 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))

Add80962 = keras.layers.Add(name = 'Add80962', )([in0Add80962,in1Add80962])
Res53188 = keras.layers.Reshape((1, 2, 1), name = 'Res53188', )(Add80962)
Ave62423 = keras.layers.AveragePooling2D(pool_size=(1, 1), name = 'Ave62423', )(Res53188)
Con30210 = keras.layers.Conv3D(3, (1, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con30210', )(Ave62423)
model = tf.keras.models.Model(inputs=[in0Add80962,in1Add80962], outputs=Con30210)
w = model.get_layer('Con30210').get_weights() 
w[0] = np.array([[[[[0.2311, 0.9721, 0.908], [0.7657, 0.4145, 0.9028]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con30210').set_weights(w) 
in0Add80962 = tf.constant([[[[[0.4356]], [[0.0403]]]]])
in1Add80962 = tf.constant([[[[[0.2553]], [[0.3294]]]]])
print (np.array2string(model.predict([in0Add80962,in1Add80962],steps=1), separator=', '))


LAdd80962 = add_layer([[[[[[0.4356]], [[0.0403]]]]], [[[[[0.2553]], [[0.3294]]]]]], Add80962), 
LRes53188 = reshape_layer(Add80962, [1, 2, 1], Res53188), 
LAve62423 = average_pooling2D_layer(Res53188, 1, 1, Ave62423), 
LCon30210 = conv3D_layer(Ave62423, 1, 1, 1,[[[[[0.2311, 0.9721, 0.908], [0.7657, 0.4145, 0.9028]]]]],[0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con30210), 
exec_layers([LAdd80962,LRes53188,LAve62423,LCon30210],["Add80962","Res53188","Ave62423","Con30210"],Con30210,"Con30210")

Actual (Unparsed): 
 ValueError('Input ' + str(input_index) + ' of layer ' +ValueError: Input 0 of layer Con30210 is incompatible with the layer: : expected min_ndim=5, found ndim=4. Full shape received: (None, 1, 2, 1)

Expected (Unparsed): 
Con30210: Dimension error, Input Shape [1,1,2,1]

Actual:   

Expected: 