import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max63464 = tf.keras.layers.Input(shape=([1, 2]))
in1Max63464 = tf.keras.layers.Input(shape=([1, 2]))
in0Con41340 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Min10618 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Min10618 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Sub9560 = tf.keras.layers.Input(shape=([3, 2]))
in1Sub9560 = tf.keras.layers.Input(shape=([3, 2]))

Max63464 = keras.layers.Maximum(name = 'Max63464', )([in0Max63464,in1Max63464])
Res20815 = keras.layers.Reshape((1, 2, 1), name = 'Res20815', )(Max63464)
Res97703 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res97703', )(Res20815)
Zer66881 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (0, 0)), name = 'Zer66881', )(Res97703)
Con41340 = keras.layers.Concatenate(axis=4, name = 'Con41340', )([Zer66881,in0Con41340])
Min10618 = keras.layers.Minimum(name = 'Min10618', )([in0Min10618,in1Min10618])
Max1589 = keras.layers.Maximum(name = 'Max1589', )([Con41340,Min10618])
Res91802 = keras.layers.Reshape((2, 2, 2), name = 'Res91802', )(Max1589)
Res68264 = keras.layers.Reshape((2, 4), name = 'Res68264', )(Res91802)
Zer93164 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer93164', )(Res68264)
Sub9560 = keras.layers.Subtract(name = 'Sub9560', )([in0Sub9560,in1Sub9560])
Max16339 = keras.layers.Maximum(name = 'Max16339', )([Zer93164,Sub9560])
Thr93854 = keras.layers.ThresholdedReLU(theta=1.587745474555241, name = 'Thr93854', )(Max16339)
model = tf.keras.models.Model(inputs=[in0Max63464,in1Max63464,in0Con41340,in0Min10618,in1Min10618,in0Sub9560,in1Sub9560], outputs=Thr93854)
in0Max63464 = tf.constant([[[0.6823, 0.4566]]])
in1Max63464 = tf.constant([[[0.2646, 0.0932]]])
in0Con41340 = tf.constant([[[[[0.8518]], [[0.6554]]], [[[0.4543]], [[0.9878]]]]])
in0Min10618 = tf.constant([[[[[0.5742, 0.5338]], [[0.7782, 0.3579]]], [[[0.4837, 0.1002]], [[0.7363, 0.2434]]]]])
in1Min10618 = tf.constant([[[[[0.4568, 0.391]], [[0.8531, 0.9153]]], [[[0.5269, 0.2225]], [[0.2481, 0.8321]]]]])
in0Sub9560 = tf.constant([[[0.0833, 0.1187], [0.9404, 0.1515], [0.9139, 0.1387]]])
in1Sub9560 = tf.constant([[[0.7053, 0.5301], [0.0383, 0.56], [0.4068, 0.5676]]])
print (np.array2string(model.predict([in0Max63464,in1Max63464,in0Con41340,in0Min10618,in1Min10618,in0Sub9560,in1Sub9560],steps=1), separator=', '))


LMax63464 = maximum_layer([[[[0.6823, 0.4566]]], [[[0.2646, 0.0932]]]], Max63464), 
LRes20815 = reshape_layer(Max63464, [1, 2, 1], Res20815), 
LRes97703 = reshape_layer(Res20815, [1, 2, 1, 1], Res97703), 
LZer66881 = zero_padding3D_layer(Res97703, 1, 0, 0, 0, 0, 0, Zer66881), 
LCon41340 = concatenate_layer([Zer66881,[[[[[0.8518]], [[0.6554]]], [[[0.4543]], [[0.9878]]]]]], 4, Con41340), 
LMin10618 = minimum_layer([[[[[[0.5742, 0.5338]], [[0.7782, 0.3579]]], [[[0.4837, 0.1002]], [[0.7363, 0.2434]]]]], [[[[[0.4568, 0.391]], [[0.8531, 0.9153]]], [[[0.5269, 0.2225]], [[0.2481, 0.8321]]]]]], Min10618), 
LMax1589 = maximum_layer([Con41340,Min10618], Max1589), 
LRes91802 = reshape_layer(Max1589, [2, 2, 2], Res91802), 
LRes68264 = reshape_layer(Res91802, [2, 4], Res68264), 
LZer93164 = zero_padding1D_layer(Res68264, 1, 0, Zer93164), 
LSub9560 = subtract_layer([[[0.0833, 0.1187], [0.9404, 0.1515], [0.9139, 0.1387]]], [[[0.7053, 0.5301], [0.0383, 0.56], [0.4068, 0.5676]]], Sub9560), 
LMax16339 = maximum_layer([Zer93164,Sub9560], Max16339), 
LThr93854 = thresholded_relu_layer(Max16339, 1.587745474555241, Thr93854), 
exec_layers([LMax63464,LRes20815,LRes97703,LZer66881,LCon41340,LMin10618,LMax1589,LRes91802,LRes68264,LZer93164,LSub9560,LMax16339,LThr93854],["Max63464","Res20815","Res97703","Zer66881","Con41340","Min10618","Max1589","Res91802","Res68264","Zer93164","Sub9560","Max16339","Thr93854"],Thr93854,"Thr93854")

Actual (Unparsed): 
 ValueError(ValueError: Operands could not be broadcast together with shapes (3, 4) (3, 2)

Expected (Unparsed): 
Max16339: Inconsistent Input Shapes, Input Shape [1,3,4]

Actual:   

Expected: 