import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add39752 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Add39752 = tf.keras.layers.Input(shape=([1, 1, 2]))

Add39752 = keras.layers.Add(name = 'Add39752', )([in0Add39752,in1Add39752])
Sep77345 = keras.layers.SeparableConv1D(4, (1),strides=(1), padding='valid', name = 'Sep77345', )(Add39752)
Ave41142 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave41142', )(Sep77345)
model = tf.keras.models.Model(inputs=[in0Add39752,in1Add39752], outputs=Ave41142)
w = model.get_layer('Sep77345').get_weights() 
w[0] = np.array([[[0.9039]]])
w[1] = np.array([[[0.8652, 0.2704, 0.349, 0.6704]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep77345').set_weights(w) 
in0Add39752 = tf.constant([[[[0.6517, 0.1316]]]])
in1Add39752 = tf.constant([[[[0.8236, 0.0384]]]])
print (np.array2string(model.predict([in0Add39752,in1Add39752],steps=1), separator=', '))


LAdd39752 = add_layer([[[[[0.6517, 0.1316]]]], [[[[0.8236, 0.0384]]]]], Add39752), 
LSep77345 = separable_conv1D_layer(Add39752, 1,[[[[0.9039]]],[[[0.8652, 0.2704, 0.349, 0.6704]]]],[0, 0, 0, 0], 1, false, Sep77345), 
LAve41142 = average_pooling1D_layer(Sep77345, 1, Ave41142), 
exec_layers([LAdd39752,LSep77345,LAve41142],["Add39752","Sep77345","Ave41142"],Ave41142,"Ave41142")

Actual (Unparsed): 
 ValueError(str(e))ValueError: Shape must be rank 4 but is rank 5 for '{{node Sep77345/separable_conv2d/depthwise}} = DepthwiseConv2dNative[T=DT_DOUBLE, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 1, 1, 1]](Sep77345/ExpandDims, Sep77345/ExpandDims_1)' with input shapes: [?,1,1,1,2], [1,1,2,1].

Expected (Unparsed): 
Sep77345: Dimension error, Input Shape [1,1,1,2]

Actual:   

Expected: 