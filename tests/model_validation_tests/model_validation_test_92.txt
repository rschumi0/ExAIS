import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min20974 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Min20974 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Con7566 = tf.keras.layers.Input(shape=([10]))
in0Max24537 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Max24537 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Con73344 = tf.keras.layers.Input(shape=([8]))
in0Fla92657 = tf.keras.layers.Input(shape=([4, 3]))

Min20974 = keras.layers.Minimum(name = 'Min20974', )([in0Min20974,in1Min20974])
Res38950 = keras.layers.Reshape((1, 1, 2), name = 'Res38950', )(Min20974)
Res29353 = keras.layers.Reshape((1, 2), name = 'Res29353', )(Res38950)
Fla93601 = keras.layers.Flatten(name = 'Fla93601', )(Res29353)
Con7566 = keras.layers.Concatenate(axis=1, name = 'Con7566', )([Fla93601,in0Con7566])
Max24537 = keras.layers.Maximum(name = 'Max24537', )([in0Max24537,in1Max24537])
Res144 = keras.layers.Reshape((1, 1, 4), name = 'Res144', )(Max24537)
Res35616 = keras.layers.Reshape((1, 4), name = 'Res35616', )(Res144)
Fla50705 = keras.layers.Flatten(name = 'Fla50705', )(Res35616)
Con73344 = keras.layers.Concatenate(axis=1, name = 'Con73344', )([Fla50705,in0Con73344])
Fla92657 = keras.layers.Flatten(name = 'Fla92657',  input_shape=(4, 3))(in0Fla92657)
Mul80483 = keras.layers.Multiply(name = 'Mul80483', )([Con73344,Fla92657])
Max36207 = keras.layers.Maximum(name = 'Max36207', )([Con7566,Mul80483])
Up_10064 = keras.layers.UpSampling1D(size=(1), name = 'Up_10064', )(Max36207)
model = tf.keras.models.Model(inputs=[in0Min20974,in1Min20974,in0Con7566,in0Max24537,in1Max24537,in0Con73344,in0Fla92657], outputs=Up_10064)
in0Min20974 = tf.constant([[[[[0.3128], [0.3883]]]]])
in1Min20974 = tf.constant([[[[[0.5926], [0.8631]]]]])
in0Con7566 = tf.constant([[0.2836, 0.8034, 0.681, 0.002, 0.1911, 0.7161, 0.8968, 0.9959, 0.6281, 0.3223]])
in0Max24537 = tf.constant([[[[[0.0365, 0.9939], [0.9366, 0.9087]]]]])
in1Max24537 = tf.constant([[[[[0.3848, 0.3907], [0.4477, 0.0036]]]]])
in0Con73344 = tf.constant([[0.9911, 0.2475, 0.2059, 0.7394, 0.6278, 0.212, 0.7118, 0.9558]])
in0Fla92657 = tf.constant([[[1.6165, 1.3511, 1.7367], [1.0509, 1.9497, 1.7544], [1.4479, 1.2489, 1.4333], [1.9235, 1.639, 1.0414]]])
print (np.array2string(model.predict([in0Min20974,in1Min20974,in0Con7566,in0Max24537,in1Max24537,in0Con73344,in0Fla92657],steps=1), separator=', '))


LMin20974 = minimum_layer([[[[[[0.3128], [0.3883]]]]], [[[[[0.5926], [0.8631]]]]]], Min20974), 
LRes38950 = reshape_layer(Min20974, [1, 1, 2], Res38950), 
LRes29353 = reshape_layer(Res38950, [1, 2], Res29353), 
LFla93601 = flatten_layer(Res29353, Fla93601), 
LCon7566 = concatenate_layer([Fla93601,[[0.2836, 0.8034, 0.681, 0.002, 0.1911, 0.7161, 0.8968, 0.9959, 0.6281, 0.3223]]], 1, Con7566), 
LMax24537 = maximum_layer([[[[[[0.0365, 0.9939], [0.9366, 0.9087]]]]], [[[[[0.3848, 0.3907], [0.4477, 0.0036]]]]]], Max24537), 
LRes144 = reshape_layer(Max24537, [1, 1, 4], Res144), 
LRes35616 = reshape_layer(Res144, [1, 4], Res35616), 
LFla50705 = flatten_layer(Res35616, Fla50705), 
LCon73344 = concatenate_layer([Fla50705,[[0.9911, 0.2475, 0.2059, 0.7394, 0.6278, 0.212, 0.7118, 0.9558]]], 1, Con73344), 
LFla92657 = flatten_layer([[[1.6165, 1.3511, 1.7367], [1.0509, 1.9497, 1.7544], [1.4479, 1.2489, 1.4333], [1.9235, 1.639, 1.0414]]], Fla92657), 
LMul80483 = multiply_layer([Con73344,Fla92657], Mul80483), 
LMax36207 = maximum_layer([Con7566,Mul80483], Max36207), 
LUp_10064 = up_sampling1D_layer(Max36207, 1, Up_10064), 
exec_layers([LMin20974,LRes38950,LRes29353,LFla93601,LCon7566,LMax24537,LRes144,LRes35616,LFla50705,LCon73344,LFla92657,LMul80483,LMax36207,LUp_10064],["Min20974","Res38950","Res29353","Fla93601","Con7566","Max24537","Res144","Res35616","Fla50705","Con73344","Fla92657","Mul80483","Max36207","Up_10064"],Up_10064,"Up_10064")

Actual (Unparsed): 
 ValueError('Input ' + str(input_index) + ' of layer ' +ValueError: Input 0 of layer Up_10064 is incompatible with the layer: expected ndim=3, found ndim=2. Full shape received: (None, 12)

Expected (Unparsed): 
Up_10064: Dimension error, Input Shape [1,12]

Actual:   

Expected: 